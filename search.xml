<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windows下双系统卸载Linux</title>
      <link href="/2022/05/25/Windows%E4%B8%8B%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%8D%B8%E8%BD%BDLinux/"/>
      <url>/2022/05/25/Windows%E4%B8%8B%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%8D%B8%E8%BD%BDLinux/</url>
      
        <content type="html"><![CDATA[<p>双系统下删除Linux</p><span id="more"></span><h1 id="Windows下双系统卸载Linux"><a href="#Windows下双系统卸载Linux" class="headerlink" title="Windows下双系统卸载Linux"></a>Windows下双系统卸载Linux</h1><p><strong>大致思路</strong></p><ul><li>挂载EFI文件</li><li>利用BOOTICE更改UEFI启动顺序，删除无用启动项（如删除reFind和Linux引导项）</li><li>利用磁盘分区和DiskGenius分区管理软件删除没用的硬盘和文件</li></ul><h2 id="挂载EFI文件"><a href="#挂载EFI文件" class="headerlink" title="挂载EFI文件"></a>挂载EFI文件</h2><p><strong>1.挂载EFI引导文件</strong></p><ul><li><p>以管理员身份运行cmd</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202204191151927.png"></p></li><li><p>执行命令：mountvol x: /s</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202204191151041.png"></p></li></ul><h2 id="利用BOOTICE更改UEFI启动顺序，删除无用启动项（如删除reFind和Linux引导项）"><a href="#利用BOOTICE更改UEFI启动顺序，删除无用启动项（如删除reFind和Linux引导项）" class="headerlink" title="利用BOOTICE更改UEFI启动顺序，删除无用启动项（如删除reFind和Linux引导项）"></a>利用BOOTICE更改UEFI启动顺序，删除无用启动项（如删除reFind和Linux引导项）</h2><p><strong>2.利用BOOTICE软件修改UEFI启动顺序，将Windows Boot Manager移动到第一位，并勾选下一次启动该项目，删除无关启动项，如Centos和reFind 最后保存当前启动项设置</strong></p><ul><li>打开BOOTICE 找到UEFI项，选择修改启动序列</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202204191152343.png"></p><ul><li><p>左侧列表只保留Windows Boot Manager项</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202204191152419.png"></p></li><li><p>勾选下一次启动该项目，并且保存当前启动项设置</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202204191152662.png"></p></li></ul><h2 id="利用磁盘分区和DiskGenius分区管理软件删除没用的硬盘和文件"><a href="#利用磁盘分区和DiskGenius分区管理软件删除没用的硬盘和文件" class="headerlink" title="利用磁盘分区和DiskGenius分区管理软件删除没用的硬盘和文件"></a>利用磁盘分区和DiskGenius分区管理软件删除没用的硬盘和文件</h2><p><strong>3.DiskGenius分区管理软件删除EFI中没用文件夹，只留Boot和Microsoft文件夹</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202204191152573.png"></p><ol start="4"><li><p>利用Windows系统自带磁盘管理，删除无用分区，只保留下图四个分区，其余全删。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202204191153370.png"></p></li></ol><h2 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h2><p>最后，重启电脑即可。</p>]]></content>
      
      
      <categories>
          
          <category> 双系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 双系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PS教学教程推荐</title>
      <link href="/2021/10/29/PS%E6%95%99%E5%AD%A6%E6%95%99%E7%A8%8B%E6%8E%A8%E8%8D%90/"/>
      <url>/2021/10/29/PS%E6%95%99%E5%AD%A6%E6%95%99%E7%A8%8B%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<h2 id="推荐平台"><a href="#推荐平台" class="headerlink" title="推荐平台"></a>推荐平台</h2><ul><li>哔哩哔哩</li></ul><blockquote><p>b站上有很多免费的教学资源~ 不收费，无广告。能够视频弹幕，评论区留言，和网友老师互动。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110291749719.png"></p><h2 id="推荐视频"><a href="#推荐视频" class="headerlink" title="推荐视频"></a>推荐视频</h2><ul><li>B站敬伟老师</li><li>b站教学视频链接：<a href="%5B%E6%95%AC%E4%BC%9FPS%E6%95%99%E7%A8%8B%E5%85%A8%E9%9B%86_%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9_bilibili%5D(https://www.bilibili.com/video/BV1YW411e7n5?p=2)">点击飞往✈</a></li><li>（视频+素材）阿里云盘（不限速下载）<a href="https://www.aliyundrive.com/s/tgeyFLkApkZ">点击飞往✈</a>（想省流量的话这个将会是你最好的选择哦！）</li></ul><h2 id="敬伟老师"><a href="#敬伟老师" class="headerlink" title="敬伟老师"></a>敬伟老师</h2><blockquote><p>敬伟，<a href="https://baike.baidu.com/item/%E8%AE%BE%E8%AE%A1%E5%B8%88/5112897">设计师</a>，设计教育研究者，动漫形象“豆包”的作者，著有《敬伟Photoshop教程》 [1] 数百集系列视频。1983年生于河北，<a href="https://baike.baidu.com/item/%E8%89%BA%E6%9C%AF%E8%AE%BE%E8%AE%A1">艺术设计</a>专业，2005年开始从事视觉创意、<a href="https://baike.baidu.com/item/%E8%A7%86%E9%A2%91%E5%88%B6%E4%BD%9C/3361995">视频制作</a>等工作，2012年制作《敬伟Photoshop教程》系列，获得网友广泛好评。2014年开设<a href="https://baike.baidu.com/item/%E8%A7%86%E8%A7%89%E8%AE%BE%E8%AE%A1%E5%B8%88/3574914">视觉设计师</a>职业培训，将视觉教育与创意产业有机结合于互联网时代，打造高效创新的在线教育学习体验。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110291811124.png"></p><h2 id="推荐理由"><a href="#推荐理由" class="headerlink" title="推荐理由"></a>推荐理由</h2><blockquote><p><strong>综述：</strong>敬伟老师设计师出身，精通PS，有过很丰富的教学经验，为人幽默，课程干货满满，是一位很优秀的老师。这款教程的播放量稳居b站第一！此教程内容很全，课程设计很有特点，分为基础篇、掌握篇、创意篇、练习篇。适用对象很广，可以根据自己的实际情况选择自己所需哦！课程时长分配很合理，可以利用闲暇时间进行学习，只要想学，课间休息也可以哦！最多时长30分钟左右，最短只有3分钟哦~ 课程好评如潮，深受广大网友喜爱！枯燥？听不懂？统统不存在！</p></blockquote><p><strong>概述：</strong></p><ul><li>适合零基础小白入门</li><li>位居b站播放量第一，总时长位居第一</li><li>由浅到深，层层递进逐层深入</li><li>老师幽默风趣，态度认真，只讲干货</li><li>视频火爆，好评如潮</li></ul><h2 id="部分内容截图"><a href="#部分内容截图" class="headerlink" title="部分内容截图"></a>部分内容截图</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110291851598.png"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110291840079.png" alt="敬伟老师众多up主之一：546w播放量"></p><h2 id="好评如潮（实在太多，只展示部分）"><a href="#好评如潮（实在太多，只展示部分）" class="headerlink" title="好评如潮（实在太多，只展示部分）"></a>好评如潮（实在太多，只展示部分）</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110291841759.png" alt="好评如潮"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110291842505.png" alt="好评如潮"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110291842581.png" alt="好评如潮"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110291843135.png"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110291844432.png"></p>]]></content>
      
      
      <categories>
          
          <category> PS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 敬伟老师 </tag>
            
            <tag> PS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win11提前上车微软WSA(Windows Subsystem for Android)教程</title>
      <link href="/2021/10/21/Win11%E6%8F%90%E5%89%8D%E4%B8%8A%E8%BD%A6%E5%BE%AE%E8%BD%AFWSA-Windows-Subsystem-for-Android-%E6%95%99%E7%A8%8B/"/>
      <url>/2021/10/21/Win11%E6%8F%90%E5%89%8D%E4%B8%8A%E8%BD%A6%E5%BE%AE%E8%BD%AFWSA-Windows-Subsystem-for-Android-%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p><strong>大纲：</strong></p><ul><li>What is WSA？</li><li>开启WSA的准备工作（跳过后面会报错！）</li><li>开启WSA教程</li><li>利用adb安装安卓应用</li></ul><span id="more"></span><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212128755.png" alt="最终效果"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212131573.jpg" alt="支持一键卸载"></p><h1 id="前言（What-is-WSA？）"><a href="#前言（What-is-WSA？）" class="headerlink" title="前言（What is WSA？）"></a>前言（What is WSA？）</h1><blockquote><p>虽然微软某高管曾在 6 年前宣称“Windows 10 之后不再有下一代 Windows 操作系统”，但事实显然并非如此。当地时间 6 月 24 日，微软举办 Windows 11 发布会，这是微软继 2015 年推出 Windows 10 操作系统以来，发布的第一个新的 Windows 系统大版本，并且 Windows 11 可谓是赚足热度，其中最重要的更新之一便是“支持 Android 应用的运行”。</p><p>官方名称为“Windows Subsystem for Android”，跟 Windows Subsystem for Linux（WSL）有异曲同工之妙，也基本上揭示了背后的实现原理。Windows 目前的 Windows Subsystem for Linux，可以说是基于 Hyper-V 功能的子集提供了“真正的 Linux 内核”。（Hyper-V 允许由第二客户操作系统绕过主机操作系统直接访问裸机硬件，因此资源消耗更低。）</p><p>而手机 Android 使用的正是 Linux 内核，于是微软着手在 WSL 之上构建起一套 Android 框架，用于适配 Windows Subsystem for Android。简单来讲，就相当于是在 Hyper-V 上运行 x86 Android。</p></blockquote><h1 id="1-开启WSA的准备工作（跳过后面会报错！）："><a href="#1-开启WSA的准备工作（跳过后面会报错！）：" class="headerlink" title="1.开启WSA的准备工作（跳过后面会报错！）："></a><strong>1.开启WSA的准备工作（跳过后面会报错！）：</strong></h1><ul><li>安装win11（<a href="https://blog.linsnow.cn/p/windows11%E6%AD%A3%E5%BC%8F%E7%89%88%E5%87%BA%E5%8F%91/">安装教程</a>）</li><li>开启 Hyper-V 功能</li><li>开启虚拟机平台</li><li>开启BIOS中的虚拟化（自行百度）</li></ul><p><strong>开启 Hyper-V 和开启虚拟机平台</strong></p><p>打开搜索，在搜索栏中输入：<strong>启用或关闭 Windows 功能</strong>，找到并打开。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212142688.jpg"></p><p>找到 Hyper-V 和 虚拟机平台 打勾，确定，根据提示安装并重启。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212146958.png" alt="开启Windows功能"></p><p><strong>温馨提示：</strong></p><ul><li>因时间有限，本人就暂时不出win11升级教程了， 目前正式版也是已经出来啦，如果有需要的话可以参考我朋友的一篇文章哈，写的也是很详细呢！！！<a href="https://blog.linsnow.cn/p/windows11%E6%AD%A3%E5%BC%8F%E7%89%88%E5%87%BA%E5%8F%91/">点击飞往✈</a>Win10可以免费升级哦！！！</li><li>因BIOS可能略有不同，这里我就不掩饰如何开启虚拟化了，我的默认以及开启啦，相信你的也是默认开启的吧。如果没开的话，后面会报错，然后再根据自己电脑型号百度开启教程就好啦~</li></ul><p><strong>警告：如果跳过这个准备工作的话，后面会遇到报错哦！！！</strong></p><p><strong>警告：如果跳过这个准备工作的话，后面会遇到报错哦！！！</strong></p><p><strong>警告：如果跳过这个准备工作的话，后面会遇到报错哦！！！</strong></p><p><strong>报错截图如下：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212150359.png"></p><h1 id="2-开启WSA教程"><a href="#2-开启WSA教程" class="headerlink" title="2.开启WSA教程"></a>2.开启WSA教程</h1><h2 id="下载WSA安装包"><a href="#下载WSA安装包" class="headerlink" title="下载WSA安装包"></a>下载WSA安装包</h2><p>1.打开WSA安装包抓包网址：<a href="https://store.rg-adguard.net/">Microsoft Store - Generation Project (v1.2.3) (网址如果访问不了，可能是服务器流量太大临时崩了，过一段时间就好了)</a></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212200561.jpg"></p><p>2.在这里输入<a href="https://www.microsoft.com/zh-cn/p/windows-subsystem-for-android-with-amazon-appstore/9p3395vx91nr?activetab=pivot:overviewtab">商店链接</a>，右边要选择Slow通道。提示：(共有四个选项，分别是Fast，Slow，RP和Retail，分别对应Windows的Dev渠道，Beta渠道，RP渠道和正式版，目前只有Beta版本有发布)。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212204841.jpg"></p><p>3.找到最下面名为<br>“MicrosoftCorporationII.WindowsSubsystemForAndroid_1.7.32815.0_neutral_~_8wekyb3d8bbwe.msixbundle”<br>的包进行下载，即可获取最新的Beta版本的抓包</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212206134.jpg"></p><p><strong>温馨提示：一定要看清自己下载的文件大小，如果不是1.21GB而是300k，那么可能就是选错通道了。</strong></p><h2 id="安装WSA"><a href="#安装WSA" class="headerlink" title="安装WSA"></a>安装WSA</h2><blockquote><p>由于这个 msix 包无法直接双击打开使用App Installer安装，所以我们需要在 Powershell 里面<strong>以管理员身份</strong>手动执行命令进行安装。</p></blockquote><p>Win11打开 Powershell（一定要以管理员身份运行！！！）因为需要安装的过程中会需要一些管理员权限，如果不以管理员身份运行的话会报错哦！</p><p><strong>安装方法如下：</strong></p><p>1.在搜索栏输入Powershell，以管理员身份运行。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212209598.jpg"></p><p>2.使用管理员身份运行powershell，输入命令 add-appxpackage “xxx”，(引号里的xxx是你的msix安装包所在的位置)，然后按回车执行就行了</p><p>比如我把名为433b1665-c732-486a-99ee-e2c610cd10d4安装包放在D:\83423\Downloads了。</p><p>我的指令就是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add-appxpackage &quot;D:\83423\Downloads\433b1665-c732-486a-99ee-e2c610cd10d4&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212214141.png"></p><p>在开始界面如果看到这个软件的出现，那么恭喜你，到这WSA就算已经成功安装上啦，也就是说，到此你的电脑就可以跑安卓应用了呢！是不是开心坏了哈哈哈哈哈~！！！</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212220017.jpg"></p><h2 id="设置WSA"><a href="#设置WSA" class="headerlink" title="设置WSA"></a>设置WSA</h2><p>接下来让我们进入WSA最后的设置吧。</p><p>打开Windows Subsystem for Android，<strong>开启开发人员模式</strong>。至于其他选项只需要根据需求选择即可。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212224422.jpg"></p><p>为了防止有些小伙伴跳教程，这里还有个地方要说一下。如果你打开文件报了下面的错误，那快去上面找找解决办法吧！</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212226585.jpg" alt="打开文件"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212150359.png" alt="报错"></p><p>什么？怎么安装安卓软件？别急，接下来就要说如何安装啦~</p><h1 id="3-利用adb安装安卓应用"><a href="#3-利用adb安装安卓应用" class="headerlink" title="3.利用adb安装安卓应用"></a>3.利用adb安装安卓应用</h1><h2 id="下载adb工具箱"><a href="#下载adb工具箱" class="headerlink" title="下载adb工具箱"></a>下载adb工具箱</h2><p>1.打开<a href="https://adbshell.com/downloads">abd官方下载链接</a>)，找到adb工具包（adb kits）并下载。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212231516.jpg"></p><p>2.把下载下来的压缩包解压到你想要解压的位置。这里我就放在桌面了。</p><p>3.进入adb文件夹在资源管理器的地址栏里把地址栏换成cmd回车。</p><p>换之前：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212235765.jpg"></p><p>换之后并回车：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110221220199.png"></p><p>接下来会打开cmd并且进入adb所在文件夹。当然你要是会cmd命令，可以用别的办法，懂得都懂哈~</p><p>4.下载你要安装的安卓安装包apk文件，并放在adb文件夹里。放在adb文件夹里是为了避免一些不懂cmd命令或者Linux命令的小白出问题。懂得自然都懂~</p><p>简单说一下获取apk文件的方法，直接在安卓手机上长按图标，会出现分享，分享给微信，电脑接收就可以啦。当然你可以从软件官方，第三方网站等等~ 自行百度吧~</p><p>5.根据以下adb指令来完成安卓应用的安装。这里我以哔哩哔哩为例，安卓包名为bilibili.apk，放在了adb目录下</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212244749.jpg"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb connect <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">58526</span>  <span class="comment">//为了连接...我也说不清emmmmm 自行百度 必不可少</span></span><br><span class="line">adb install ./bilibili.apk    <span class="comment">//  注意./意思是当前目录下~ </span></span><br></pre></td></tr></table></figure><h2 id="因没开启wsa服务出错"><a href="#因没开启wsa服务出错" class="headerlink" title="因没开启wsa服务出错"></a>因没开启wsa服务出错</h2><p>很惊喜！到这里一直出现一个拒绝连接的错误！！！</p><p>亲身体会！！！在这里告诉大家的解决办法！！！</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212256677.jpg"></p><p>一直出现拒绝连接….</p><p>原因：我太憨了，wsa服务没启动，忘了打开Windows Subsystem for Android，在连接之前，一定要先打开，WSA并且，打开文件！！！切记！！！！很重要！！！不然一直连接不成功！！！</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212226585.jpg" alt="打开文件"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110221222224.png" alt="Windows Subsystem for Android"></p><p>不过通过这个错误之后，我好像更能理解adb安装软件的原理啦 哈哈哈哈哈！开心！！！</p><p>连接成功之后输入安装命令即可，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212259434.jpg"></p><h2 id="成功安装"><a href="#成功安装" class="headerlink" title="成功安装"></a>成功安装</h2><p>如果出现下面的内容，那么恭喜你，到此，就已经给你的电脑成功安装上安卓应用啦，不过目前是内测版，有些软件并不能很好的支持呢，比如学习通，但一些热门的软件都支持的，像快手，qq，抖音，b站，皮皮虾~</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="number">83423</span>\Desktop\adb&gt;adb install ./bilibili.apk</span><br><span class="line">Performing Streamed Install</span><br><span class="line">Success</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212301361.jpg" alt="开始里出现已安装的应用！"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212302760.png" alt="正常启动！！！"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110212131573.jpg" alt="支持一键卸载"></p><p>写到这里已经23.05，很显然，宿舍楼已经关门了，而我还在教学楼肝教程，呜呜，孩子太难了，给个好评吧！！！不说了， 回去摸黑收拾东西啦！</p><p><strong>时间紧凑，最近确实也很忙~ 教程不好的地方多见谅哈~ 有问题的可以在评论区留言，或者去关于页加我联系方式哦！</strong></p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><ul><li>亦之竹哥哥</li></ul>]]></content>
      
      
      <categories>
          
          <category> WSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSA </tag>
            
            <tag> 安卓原生 </tag>
            
            <tag> win11 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++第一天学习笔记【持续更新】</title>
      <link href="/2021/10/13/C-%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/"/>
      <url>/2021/10/13/C-%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<h1 id="C-基础入门"><a href="#C-基础入门" class="headerlink" title="C++基础入门"></a>C++基础入门</h1><h2 id="1-C-初识"><a href="#1-C-初识" class="headerlink" title="1 C++初识"></a>1 C++初识</h2><h3 id="1-1-第一个C-程序"><a href="#1-1-第一个C-程序" class="headerlink" title="1.1  第一个C++程序"></a>1.1  第一个C++程序</h3><p>编写一个C++程序总共分为4个步骤</p><ul><li>创建项目</li><li>创建文件</li><li>编写代码</li><li>运行程序</li></ul><h4 id="1-1-1-创建项目"><a href="#1-1-1-创建项目" class="headerlink" title="1.1.1 创建项目"></a>1.1.1 创建项目</h4><p>​    Visual Studio是我们用来编写C++程序的主要工具，我们先将它打开</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606524.png" alt="创建新项目"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606525.png" alt="创建空项目"></p><h4 id="1-1-2-创建文件"><a href="#1-1-2-创建文件" class="headerlink" title="1.1.2 创建文件"></a>1.1.2 创建文件</h4><p>右键源文件，选择添加 -&gt; 新建项</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606526.png" alt="添加新建项"></p><p>给C++文件起个名称，然后点击添加即可。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606528.png" alt="命名并添加"></p><h4 id="1-1-3-编写代码"><a href="#1-1-3-编写代码" class="headerlink" title="1.1.3 编写代码"></a>1.1.3 编写代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-1-4-运行程序"><a href="#1-1-4-运行程序" class="headerlink" title="1.1.4 运行程序"></a>1.1.4 运行程序</h4><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606530.png" alt="Hello，World"></p><h3 id="1-2-注释"><a href="#1-2-注释" class="headerlink" title="1.2 注释"></a>1.2 注释</h3><p><strong>作用</strong>：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码</p><p><strong>两种格式</strong></p><ol><li><strong>单行注释</strong>：<code>// 描述信息</code> <ul><li>通常放在一行代码的上方，或者一条语句的末尾，<code>对该行代码说明</code></li></ul></li><li><strong>多行注释</strong>： <code>/* 描述信息 */</code><ul><li>通常放在一段代码的上方，<code>对该段代码做整体说明</code></li></ul></li></ol><blockquote><p>提示：编译器在编译代码时，会忽略注释的内容</p></blockquote><h3 id="1-3-变量"><a href="#1-3-变量" class="headerlink" title="1.3 变量"></a>1.3 变量</h3><p><strong>作用</strong>：给一段指定的内存空间起名，方便操作这段内存</p><p><strong>语法</strong>：<code>数据类型 变量名 = 初始值;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//变量的定义</span></span><br><span class="line"><span class="comment">//语法：数据类型  变量名 = 初始值</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：C++在创建变量时，必须给变量一个初始值，否则会报错</p></blockquote><h3 id="1-4-常量"><a href="#1-4-常量" class="headerlink" title="1.4  常量"></a>1.4  常量</h3><p><strong>作用</strong>：用于记录程序中不可更改的数据</p><p>C++定义常量两种方式</p><ol><li><strong>#define</strong> 宏常量： <code>#define 常量名 常量值</code><ul><li><code>通常在文件上方定义</code>，表示一个常量</li></ul></li></ol><ol start="2"><li><strong>const</strong>修饰的变量 <code>const 数据类型 常量名 = 常量值</code><ul><li><code>通常在变量定义前加关键字const</code>，修饰该变量为常量，不可修改</li></ul></li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1、宏常量</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一周里总共有 &quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot; 天&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//day = 8;  //报错，宏常量不可以修改</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、const修饰变量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> month = <span class="number">12</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一年里总共有 &quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot; 个月份&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//month = 24; //报错，常量是不可以修改的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-关键字"><a href="#1-5-关键字" class="headerlink" title="1.5 关键字"></a>1.5 关键字</h3><p><strong>作用：</strong>关键字是C++中预先保留的单词（标识符）</p><ul><li><strong>在定义变量或者常量时候，不要用关键字</strong></li></ul><p>C++关键字如下：</p><table><thead><tr><th>asm</th><th>do</th><th>if</th><th>return</th><th>typedef</th></tr></thead><tbody><tr><td>auto</td><td>double</td><td>inline</td><td>short</td><td>typeid</td></tr><tr><td>bool</td><td>dynamic_cast</td><td>int</td><td>signed</td><td>typename</td></tr><tr><td>break</td><td>else</td><td>long</td><td>sizeof</td><td>union</td></tr><tr><td>case</td><td>enum</td><td>mutable</td><td>static</td><td>unsigned</td></tr><tr><td>catch</td><td>explicit</td><td>namespace</td><td>static_cast</td><td>using</td></tr><tr><td>char</td><td>export</td><td>new</td><td>struct</td><td>virtual</td></tr><tr><td>class</td><td>extern</td><td>operator</td><td>switch</td><td>void</td></tr><tr><td>const</td><td>false</td><td>private</td><td>template</td><td>volatile</td></tr><tr><td>const_cast</td><td>float</td><td>protected</td><td>this</td><td>wchar_t</td></tr><tr><td>continue</td><td>for</td><td>public</td><td>throw</td><td>while</td></tr><tr><td>default</td><td>friend</td><td>register</td><td>true</td><td></td></tr><tr><td>delete</td><td>goto</td><td>reinterpret_cast</td><td>try</td><td></td></tr></tbody></table><p><code>提示：在给变量或者常量起名称时候，不要用C++得关键字，否则会产生歧义。</code></p><h3 id="1-6-标识符命名规则"><a href="#1-6-标识符命名规则" class="headerlink" title="1.6 标识符命名规则"></a>1.6 标识符命名规则</h3><p><strong>作用</strong>：C++规定给标识符（变量、常量）命名时，有一套自己的规则</p><ul><li>标识符不能是关键字</li><li>标识符只能由字母、数字、下划线组成</li><li>第一个字符必须为字母或下划线</li><li>标识符中字母区分大小写</li></ul><blockquote><p>建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读</p></blockquote><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2 数据类型"></a>2 数据类型</h2><p>C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存</p><h3 id="2-1-整型"><a href="#2-1-整型" class="headerlink" title="2.1 整型"></a>2.1 整型</h3><p><strong>作用</strong>：整型变量表示的是<code>整数类型</code>的数据</p><p>C++中能够表示整型的类型有以下几种方式，<strong>区别在于所占内存空间不同</strong>：</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th>取值范围</th></tr></thead><tbody><tr><td>short(短整型)</td><td>2字节</td><td>(-2^15 ~ 2^15-1)</td></tr><tr><td>int(整型)</td><td>4字节</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long(长整形)</td><td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long long(长长整形)</td><td>8字节</td><td>(-2^63 ~ 2^63-1)</td></tr></tbody></table><h3 id="2-2-sizeof关键字"><a href="#2-2-sizeof关键字" class="headerlink" title="2.2 sizeof关键字"></a>2.2 sizeof关键字</h3><p><strong>作用：</strong>利用sizeof关键字可以<code>统计数据类型所占内存大小</code></p><p><strong>语法：</strong> <code>sizeof( 数据类型 / 变量)</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>整型结论</strong>：<code>short &lt; int &lt;= long &lt;= long long</code></p></blockquote><h3 id="2-3-实型（浮点型）"><a href="#2-3-实型（浮点型）" class="headerlink" title="2.3 实型（浮点型）"></a>2.3 实型（浮点型）</h3><p><strong>作用</strong>：用于==表示小数==</p><p>浮点型变量分为两种：</p><ol><li>单精度float </li><li>双精度double</li></ol><p>两者的<strong>区别</strong>在于表示的有效数字范围不同。</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th><strong>有效数字范围</strong></th></tr></thead><tbody><tr><td>float</td><td>4字节</td><td>7位有效数字</td></tr><tr><td>double</td><td>8字节</td><td>15～16位有效数字</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; d1&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;float  sizeof = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;double sizeof = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//科学计数法</span></span><br><span class="line"><span class="type">float</span> f2 = <span class="number">3e2</span>; <span class="comment">// 3 * 10 ^ 2 </span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f3 = <span class="number">3e-2</span>;  <span class="comment">// 3 * 0.1 ^ 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-字符型"><a href="#2-4-字符型" class="headerlink" title="2.4 字符型"></a>2.4 字符型</h3><p><strong>作用：</strong>字符型变量用于显示单个字符</p><p><strong>语法：</strong><code>char ch = &#39;a&#39;;</code></p><blockquote><p>注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引号</p></blockquote><blockquote><p>注意2：单引号内只能有一个字符，不可以是字符串</p></blockquote><ul><li>C和C++中字符型变量只占用<strong>1个字节</strong>。</li><li>字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ch = &quot;abcde&quot;; //错误，不可以用双引号</span></span><br><span class="line"><span class="comment">//ch = &#x27;abcde&#x27;; //错误，单引号内只能引用一个字符</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)ch &lt;&lt; endl;  <span class="comment">//查看字符a对应的ASCII码</span></span><br><span class="line">ch = <span class="number">97</span>; <span class="comment">//可以直接用ASCII给字符型变量赋值</span></span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ASCII码表格：</p><table><thead><tr><th><strong>ASCII</strong>值</th><th><strong>控制字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th></tr></thead><tbody><tr><td>0</td><td>NUT</td><td>32</td><td>(space)</td><td>64</td><td>@</td><td>96</td><td>、</td></tr><tr><td>1</td><td>SOH</td><td>33</td><td>!</td><td>65</td><td>A</td><td>97</td><td>a</td></tr><tr><td>2</td><td>STX</td><td>34</td><td>“</td><td>66</td><td>B</td><td>98</td><td>b</td></tr><tr><td>3</td><td>ETX</td><td>35</td><td>#</td><td>67</td><td>C</td><td>99</td><td>c</td></tr><tr><td>4</td><td>EOT</td><td>36</td><td>$</td><td>68</td><td>D</td><td>100</td><td>d</td></tr><tr><td>5</td><td>ENQ</td><td>37</td><td>%</td><td>69</td><td>E</td><td>101</td><td>e</td></tr><tr><td>6</td><td>ACK</td><td>38</td><td>&amp;</td><td>70</td><td>F</td><td>102</td><td>f</td></tr><tr><td>7</td><td>BEL</td><td>39</td><td>,</td><td>71</td><td>G</td><td>103</td><td>g</td></tr><tr><td>8</td><td>BS</td><td>40</td><td>(</td><td>72</td><td>H</td><td>104</td><td>h</td></tr><tr><td>9</td><td>HT</td><td>41</td><td>)</td><td>73</td><td>I</td><td>105</td><td>i</td></tr><tr><td>10</td><td>LF</td><td>42</td><td>*</td><td>74</td><td>J</td><td>106</td><td>j</td></tr><tr><td>11</td><td>VT</td><td>43</td><td>+</td><td>75</td><td>K</td><td>107</td><td>k</td></tr><tr><td>12</td><td>FF</td><td>44</td><td>,</td><td>76</td><td>L</td><td>108</td><td>l</td></tr><tr><td>13</td><td>CR</td><td>45</td><td>-</td><td>77</td><td>M</td><td>109</td><td>m</td></tr><tr><td>14</td><td>SO</td><td>46</td><td>.</td><td>78</td><td>N</td><td>110</td><td>n</td></tr><tr><td>15</td><td>SI</td><td>47</td><td>/</td><td>79</td><td>O</td><td>111</td><td>o</td></tr><tr><td>16</td><td>DLE</td><td>48</td><td>0</td><td>80</td><td>P</td><td>112</td><td>p</td></tr><tr><td>17</td><td>DCI</td><td>49</td><td>1</td><td>81</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>18</td><td>DC2</td><td>50</td><td>2</td><td>82</td><td>R</td><td>114</td><td>r</td></tr><tr><td>19</td><td>DC3</td><td>51</td><td>3</td><td>83</td><td>S</td><td>115</td><td>s</td></tr><tr><td>20</td><td>DC4</td><td>52</td><td>4</td><td>84</td><td>T</td><td>116</td><td>t</td></tr><tr><td>21</td><td>NAK</td><td>53</td><td>5</td><td>85</td><td>U</td><td>117</td><td>u</td></tr><tr><td>22</td><td>SYN</td><td>54</td><td>6</td><td>86</td><td>V</td><td>118</td><td>v</td></tr><tr><td>23</td><td>TB</td><td>55</td><td>7</td><td>87</td><td>W</td><td>119</td><td>w</td></tr><tr><td>24</td><td>CAN</td><td>56</td><td>8</td><td>88</td><td>X</td><td>120</td><td>x</td></tr><tr><td>25</td><td>EM</td><td>57</td><td>9</td><td>89</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>26</td><td>SUB</td><td>58</td><td>:</td><td>90</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>27</td><td>ESC</td><td>59</td><td>;</td><td>91</td><td>[</td><td>123</td><td>{</td></tr><tr><td>28</td><td>FS</td><td>60</td><td>&lt;</td><td>92</td><td>/</td><td>124</td><td>|</td></tr><tr><td>29</td><td>GS</td><td>61</td><td>=</td><td>93</td><td>]</td><td>125</td><td>}</td></tr><tr><td>30</td><td>RS</td><td>62</td><td>&gt;</td><td>94</td><td>^</td><td>126</td><td>`</td></tr><tr><td>31</td><td>US</td><td>63</td><td>?</td><td>95</td><td>_</td><td>127</td><td>DEL</td></tr></tbody></table><p>ASCII 码大致由以下<strong>两部分组</strong>成：</p><ul><li>ASCII 非打印控制字符： ASCII 表上的数字 <strong>0-31</strong> 分配给了控制字符，用于控制像打印机等一些外围设备。</li><li>ASCII 打印字符：数字 <strong>32-126</strong> 分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。</li></ul><h3 id="2-5-转义字符"><a href="#2-5-转义字符" class="headerlink" title="2.5 转义字符"></a>2.5 转义字符</h3><p><strong>作用：</strong>用于表示一些<code>不能显示出来的ASCII字符</code></p><p>现阶段我们常用的转义字符有：<code> \n  \\  \t</code></p><table><thead><tr><th><strong>转义字符</strong></th><th><strong>含义</strong></th><th><strong>ASCII</strong>码值（十进制）</th></tr></thead><tbody><tr><td>\a</td><td>警报</td><td>007</td></tr><tr><td>\b</td><td>退格(BS) ，将当前位置移到前一列</td><td>008</td></tr><tr><td>\f</td><td>换页(FF)，将当前位置移到下页开头</td><td>012</td></tr><tr><td><strong>\n</strong></td><td><strong>换行(LF) ，将当前位置移到下一行开头</strong></td><td><strong>010</strong></td></tr><tr><td>\r</td><td>回车(CR) ，将当前位置移到本行开头</td><td>013</td></tr><tr><td><strong>\t</strong></td><td><strong>水平制表(HT)  （跳到下一个TAB位置）</strong></td><td><strong>009</strong></td></tr><tr><td>\v</td><td>垂直制表(VT)</td><td>011</td></tr><tr><td>*<em>\\*</em></td><td><strong>代表一个反斜线字符”&quot;</strong></td><td><strong>092</strong></td></tr><tr><td>&#39;</td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td>&quot;</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>?</td><td>代表一个问号</td><td>063</td></tr><tr><td>\0</td><td>数字0</td><td>000</td></tr><tr><td>\ddd</td><td>8进制转义字符，d范围0~7</td><td>3位8进制</td></tr><tr><td>\xhh</td><td>16进制转义字符，h范围0<del>9，a</del>f，A~F</td><td>3位16进制</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\tHello&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-字符串型"><a href="#2-6-字符串型" class="headerlink" title="2.6 字符串型"></a>2.6 字符串型</h3><p><strong>作用</strong>：用于表示一串字符</p><p><strong>两种风格</strong></p><ol><li><p><strong>C风格字符串</strong>： <code>char 变量名[] = &quot;字符串值&quot;</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：C风格的字符串要用双引号括起来</p></blockquote><ol><li><p><strong>C++风格字符串</strong>：  <code>string  变量名 = &quot;字符串值&quot;</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">string str = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：C++风格字符串，需要加入头文件<code>#include &lt;string&gt;</code></p></blockquote><h3 id="2-7-布尔类型-bool"><a href="#2-7-布尔类型-bool" class="headerlink" title="2.7 布尔类型 bool"></a>2.7 布尔类型 bool</h3><p><strong>作用：</strong>布尔数据类型代表真或假的值 </p><p>bool类型只有两个值：</p><ul><li>true  — 真（本质是1）</li><li>false — 假（本质是0）</li></ul><p><strong>bool类型占==1个字节==大小</strong></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of bool = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">bool</span>) &lt;&lt; endl; <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-8-数据的输入"><a href="#2-8-数据的输入" class="headerlink" title="2.8 数据的输入"></a>2.8 数据的输入</h3><p><strong>作用：用于从键盘获取数据</strong></p><p><strong>关键字：</strong>cin</p><p><strong>语法：</strong> <code>cin &gt;&gt; 变量 </code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//整型输入</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入整型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点型输入</span></span><br><span class="line"><span class="type">double</span> d = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入浮点型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; d;</span><br><span class="line">cout &lt;&lt; d &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符型输入</span></span><br><span class="line"><span class="type">char</span> ch = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串型输入</span></span><br><span class="line">string str;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符串型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line">cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//布尔类型输入</span></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入布尔型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-运算符"><a href="#3-运算符" class="headerlink" title="3 运算符"></a>3 运算符</h2><p><strong>作用：</strong>用于执行代码的运算</p><p>本章我们主要讲解以下几类运算符：</p><table><thead><tr><th><strong>运算符类型</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>算术运算符</td><td>用于处理四则运算</td></tr><tr><td>赋值运算符</td><td>用于将表达式的值赋给变量</td></tr><tr><td>比较运算符</td><td>用于表达式的比较，并返回一个真值或假值</td></tr><tr><td>逻辑运算符</td><td>用于根据表达式的值返回真值或假值</td></tr></tbody></table><h3 id="3-1-算术运算符"><a href="#3-1-算术运算符" class="headerlink" title="3.1 算术运算符"></a>3.1 算术运算符</h3><p><strong>作用</strong>：用于处理四则运算 </p><p>算术运算符包括以下符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>+</td><td>正号</td><td>+3</td><td>3</td></tr><tr><td>-</td><td>负号</td><td>-3</td><td>-3</td></tr><tr><td>+</td><td>加</td><td>10 + 5</td><td>15</td></tr><tr><td>-</td><td>减</td><td>10 - 5</td><td>5</td></tr><tr><td>*</td><td>乘</td><td>10 * 5</td><td>50</td></tr><tr><td>/</td><td>除</td><td>10 / 5</td><td>2</td></tr><tr><td>%</td><td>取模(取余)</td><td>10 % 3</td><td>1</td></tr><tr><td>++</td><td>前置递增</td><td>a=2; b=++a;</td><td>a=3; b=3;</td></tr><tr><td>++</td><td>后置递增</td><td>a=2; b=a++;</td><td>a=3; b=2;</td></tr><tr><td>–</td><td>前置递减</td><td>a=2; b=–a;</td><td>a=1; b=1;</td></tr><tr><td>–</td><td>后置递减</td><td>a=2; b=a–;</td><td>a=1; b=2;</td></tr></tbody></table><p><strong>示例1：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加减乘除</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; a1 + b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 - b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 * b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 / b1 &lt;&lt; endl;  <span class="comment">//两个整数相除结果依然是整数</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; a2 / b2 &lt;&lt; endl; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; a3 / b3 &lt;&lt; endl; //报错，除数不可以为0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//两个小数可以相除</span></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">0.5</span>;</span><br><span class="line"><span class="type">double</span> d2 = <span class="number">0.25</span>;</span><br><span class="line">cout &lt;&lt; d1 / d2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：在除法运算中，除数不能为0</p></blockquote><p><strong>示例2：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取模</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="number">10</span> % <span class="number">3</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; a2 % b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; a3 % b3 &lt;&lt; endl; //取模运算时，除数也不能为0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//两个小数不可以取模</span></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">double</span> d2 = <span class="number">1.1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; d1 % d2 &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>总结：只有整型变量可以进行取模运算</p></blockquote><p><strong>示例3：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递增</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置递增</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">a++; <span class="comment">//等价于a = a + 1</span></span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//前置递增</span></span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line">++b;</span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//区别</span></span><br><span class="line"><span class="comment">//前置递增先对变量进行++，再计算表达式</span></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = ++a2 * <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置递增先计算表达式，后对变量进行++</span></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = a3++ * <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; b3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>总结：前置递增先对变量进行++，再计算表达式，后置递增相反</p></blockquote><h3 id="3-2-赋值运算符"><a href="#3-2-赋值运算符" class="headerlink" title="3.2 赋值运算符"></a>3.2 赋值运算符</h3><p><strong>作用：</strong>用于将表达式的值赋给变量</p><p>赋值运算符包括以下几个符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>a=2; b=3;</td><td>a=2; b=3;</td></tr><tr><td>+=</td><td>加等于</td><td>a=0; a+=2;</td><td>a=2;</td></tr><tr><td>-=</td><td>减等于</td><td>a=5; a-=3;</td><td>a=2;</td></tr><tr><td>*=</td><td>乘等于</td><td>a=2; a*=2;</td><td>a=4;</td></tr><tr><td>/=</td><td>除等于</td><td>a=4; a/=2;</td><td>a=2;</td></tr><tr><td>%=</td><td>模等于</td><td>a=3; a%2;</td><td>a=1;</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值运算符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// =</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// +=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a += <span class="number">2</span>; <span class="comment">// a = a + 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// -=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a -= <span class="number">2</span>; <span class="comment">// a = a - 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// *=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a *= <span class="number">2</span>; <span class="comment">// a = a * 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// /=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a /= <span class="number">2</span>;  <span class="comment">// a = a / 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// %=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a %= <span class="number">2</span>;  <span class="comment">// a = a % 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-比较运算符"><a href="#3-3-比较运算符" class="headerlink" title="3.3 比较运算符"></a>3.3 比较运算符</h3><p><strong>作用：</strong>用于表达式的比较，并返回一个真值或假值</p><p>比较运算符有以下符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>==</td><td>相等于</td><td>4 == 3</td><td>0</td></tr><tr><td>!=</td><td>不等于</td><td>4 != 3</td><td>1</td></tr><tr><td>&lt;</td><td>小于</td><td>4 &lt; 3</td><td>0</td></tr><tr><td>&gt;</td><td>大于</td><td>4 &gt; 3</td><td>1</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>4 &lt;= 3</td><td>0</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>4 &gt;= 1</td><td>1</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a == b) &lt;&lt; endl; <span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a != b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &gt; b) &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &lt; b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &gt;= b) &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &lt;= b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：C和C++ 语言的比较运算中， <code>“真”用数字“1”来表示， “假”用数字“0”来表示。</code> </p></blockquote><h3 id="3-4-逻辑运算符"><a href="#3-4-逻辑运算符" class="headerlink" title="3.4 逻辑运算符"></a>3.4 逻辑运算符</h3><p><strong>作用：</strong>用于根据表达式的值返回真值或假值</p><p>逻辑运算符有以下符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>!</td><td>非</td><td>!a</td><td>如果a为假，则!a为真；  如果a为真，则!a为假。</td></tr><tr><td>&amp;&amp;</td><td>与</td><td>a &amp;&amp; b</td><td>如果a和b都为真，则结果为真，否则为假。</td></tr><tr><td>||</td><td>或</td><td>a || b</td><td>如果a和b有一个为真，则结果为真，二者都为假时，结果为假。</td></tr></tbody></table><p><strong>示例1：</strong>逻辑非</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 非</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; !a &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; !!a &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结： 真变假，假变真</p></blockquote><p><strong>示例2：</strong>逻辑与</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 与</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>总结：逻辑<code>与</code>运算符总结： <code>同真为真，其余为假</code></p></blockquote><p><strong>示例3：</strong>逻辑或</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 或</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 1 </span></span><br><span class="line"></span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>逻辑<code>或</code>运算符总结： <code>同假为假，其余为真</code></p></blockquote><h2 id="4-程序流程结构"><a href="#4-程序流程结构" class="headerlink" title="4 程序流程结构"></a>4 程序流程结构</h2><p>C/C++支持最基本的三种程序运行结构：<code>顺序结构、选择结构、循环结构</code></p><ul><li>顺序结构：程序按顺序执行，不发生跳转</li><li>选择结构：依据条件是否满足，有选择的执行相应功能</li><li>循环结构：依据条件是否满足，循环多次执行某段代码</li></ul><h3 id="4-1-选择结构"><a href="#4-1-选择结构" class="headerlink" title="4.1 选择结构"></a>4.1 选择结构</h3><h4 id="4-1-1-if语句"><a href="#4-1-1-if语句" class="headerlink" title="4.1.1 if语句"></a>4.1.1 if语句</h4><p><strong>作用：</strong>执行满足条件的语句</p><p>if语句的三种形式</p><ul><li>单行格式if语句</li><li>多行格式if语句</li><li>多条件的if语句</li></ul><ol><li><p>单行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;</code></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606538.png" alt="单行格式if语句流程图"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择结构-单行if语句</span></span><br><span class="line"><span class="comment">//输入一个分数，如果分数大于600分，视为考上一本大学，并在屏幕上打印</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入一个分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您输入的分数为： &quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//if语句</span></span><br><span class="line"><span class="comment">//注意事项，在if判断语句后面，不要加分号</span></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学！！！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：if条件表达式后不要加分号</p></blockquote><ol start="2"><li>多行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;else&#123; 条件不满足执行的语句 &#125;;</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606539.png" alt="多行格式if语句流程图"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我未考上一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>多条件的if语句：<code>if(条件1)&#123; 条件1满足执行的语句 &#125;else if(条件2)&#123;条件2满足执行的语句&#125;... else&#123; 都不满足执行的语句&#125;</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606540.png" alt="多条件的if语句"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我未考上本科&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>嵌套if语句</strong>：在if语句中，可以嵌套使用if语句，达到更精确的条件判断</p><p>案例需求：</p><ul><li>提示用户输入一个高考考试分数，根据分数做如下判断</li><li>分数如果大于600分视为考上一本，大于500分考上二本，大于400考上三本，其余视为未考上本科；</li><li>在一本分数中，如果大于700分，考入北大，大于650分，考入清华，大于600考入人大。</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">700</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了北大&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">650</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了清华&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了人大&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我未考上本科&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习案例：</strong> 三只小猪称体重</p><p>有三只小猪ABC，请分别输入三只小猪的体重，并且判断哪只小猪最重？<img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606547.jpg" alt="三只小猪"></p><h4 id="4-1-2-三目运算符"><a href="#4-1-2-三目运算符" class="headerlink" title="4.1.2 三目运算符"></a>4.1.2 三目运算符</h4><p><strong>作用：</strong> 通过三目运算符实现简单的判断</p><p><strong>语法：</strong><code>表达式1 ? 表达式2 ：表达式3</code></p><p><strong>解释：</strong></p><p>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</p><p>如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">c = a &gt; b ? a : b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++中三目运算符返回的是变量,可以继续赋值</span></span><br><span class="line"></span><br><span class="line">(a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：和if语句比较，三目运算符优点是短小整洁，缺点是如果用嵌套，结构不清晰</p></blockquote><h4 id="4-1-3-switch语句"><a href="#4-1-3-switch语句" class="headerlink" title="4.1.3 switch语句"></a>4.1.3 switch语句</h4><p><strong>作用：</strong>执行多条件分支语句</p><p><strong>语法：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 结果<span class="number">1</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 结果<span class="number">2</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请给电影评分 </span></span><br><span class="line"><span class="comment">//10 ~ 9   经典   </span></span><br><span class="line"><span class="comment">// 8 ~ 7   非常好</span></span><br><span class="line"><span class="comment">// 6 ~ 5   一般</span></span><br><span class="line"><span class="comment">// 5分以下 烂片</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给电影打分&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (score)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;经典&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非常好&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一般&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;烂片&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意1：switch语句中表达式类型只能是整型或者字符型</p></blockquote><blockquote><p>注意2：case里如果没有break，那么程序会一直向下执行</p></blockquote><blockquote><p>总结：与if语句比，对于多条件判断时，switch的结构清晰，执行效率高，缺点是switch不可以判断区间</p></blockquote><h3 id="4-2-循环结构"><a href="#4-2-循环结构" class="headerlink" title="4.2 循环结构"></a>4.2 循环结构</h3><h4 id="4-2-1-while循环语句"><a href="#4-2-1-while循环语句" class="headerlink" title="4.2.1 while循环语句"></a>4.2.1 while循环语句</h4><p><strong>作用：</strong>满足循环条件，执行循环语句</p><p><strong>语法：</strong><code> while(循环条件)&#123; 循环语句 &#125;</code></p><p><strong>解释：</strong><code>只要循环条件的结果为真，就执行循环语句</code></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606543.png" alt="while循环语句"></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (num &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环</p></blockquote><p><strong>while循环练习案例：</strong><code>猜数字</code></p><p><strong>案例描述：</strong>系统随机生成一个1到100之间的数字，玩家进行猜测，如果猜错，提示玩家数字过大或过小，如果猜对恭喜玩家胜利，并且退出游戏。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606546.jpg" alt="猜数字"></p><h4 id="4-2-2-do…while循环语句"><a href="#4-2-2-do…while循环语句" class="headerlink" title="4.2.2 do…while循环语句"></a>4.2.2 do…while循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong> <code>do&#123; 循环语句 &#125; while(循环条件);</code></p><p><strong>注意：</strong>与while的区别在于<code>do...while会先执行一次循环语句</code>，再判断循环条件</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606544.png" alt="do-while循环语句"></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">num++;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">while</span> (num &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：与while循环区别在于，do…while先执行一次循环语句，再判断循环条件</p></blockquote><p><strong>练习案例：水仙花数</strong></p><p><strong>案例描述：</strong>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身</p><p>例如：1^3 + 5^3+ 3^3 = 153</p><p>请利用do…while语句，求出所有3位数中的水仙花数</p><h4 id="4-2-3-for循环语句"><a href="#4-2-3-for循环语句" class="headerlink" title="4.2.3 for循环语句"></a>4.2.3 for循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong><code> for(起始表达式;条件表达式;末尾循环体) &#123; 循环语句; &#125;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>详解：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606531.png" alt="for循环语句"></p><blockquote><p>注意：for循环中的表达式，要用分号进行分隔</p></blockquote><blockquote><p>总结：while , do…while, for都是开发中常用的循环语句，for循环结构比较清晰，比较常用</p></blockquote><p><strong>练习案例：敲桌子</strong></p><p>案例描述：从1开始数到数字100， 如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们打印敲桌子，其余数字直接打印输出。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606545.gif"></p><h4 id="4-2-4-嵌套循环"><a href="#4-2-4-嵌套循环" class="headerlink" title="4.2.4 嵌套循环"></a>4.2.4 嵌套循环</h4><p><strong>作用：</strong> 在循环体中再嵌套一层循环，解决一些实际问题</p><p>例如我们想在屏幕中打印如下图片，就需要利用嵌套循环</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606532.png" alt="嵌套循环"></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//外层循环执行1次，内层循环执行1轮</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习案例：</strong>乘法口诀表</p><p>案例描述：利用嵌套循环，实现九九乘法表</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606537.jpg" alt="乘法口诀表"></p><h3 id="4-3-跳转语句"><a href="#4-3-跳转语句" class="headerlink" title="4.3 跳转语句"></a>4.3 跳转语句</h3><h4 id="4-3-1-break语句"><a href="#4-3-1-break语句" class="headerlink" title="4.3.1 break语句"></a>4.3.1 break语句</h4><p><strong>作用:</strong> 用于跳出<code>选择结构</code>或者<code>循环结构</code></p><p>break使用的时机：</p><ul><li>出现在switch条件语句中，作用是终止case并跳出switch</li><li>出现在循环语句中，作用是跳出当前的循环语句</li><li>出现在嵌套循环中，跳出最近的内层循环语句</li></ul><p><strong>示例1：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//1、在switch 语句中使用break</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择您挑战副本的难度：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、普通&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、中等&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3、困难&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您选择的是普通难度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您选择的是中等难度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您选择的是困难难度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例2：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//2、在循环语句中用break</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//跳出循环语句</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例3：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//在嵌套循环语句中使用break，退出内层循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-2-continue语句"><a href="#4-3-2-continue语句" class="headerlink" title="4.3.2 continue语句"></a>4.3.2 continue语句</h4><p><strong>作用：</strong>在<code>循环语句</code>中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：continue并没有使整个循环终止，而break会跳出循环</p></blockquote><h4 id="4-3-3-goto语句"><a href="#4-3-3-goto语句" class="headerlink" title="4.3.3 goto语句"></a>4.3.3 goto语句</h4><p><strong>作用：</strong>可以无条件跳转语句</p><p><strong>语法：</strong> <code>goto 标记;</code></p><p><strong>解释：</strong>如果标记的名称存在，执行到goto语句时，会跳转到标记的位置</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">goto</span> FLAG;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;4&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">FLAG:</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;5&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在程序中不建议使用goto语句，以免造成程序流程混乱</p></blockquote><h2 id="5-数组"><a href="#5-数组" class="headerlink" title="5 数组"></a>5 数组</h2><h3 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h3><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素</p><p><strong>特点1：</strong>数组中的每个<code>数据元素都是相同的数据类型</code></p><p><strong>特点2：</strong>数组是由<code>连续的内存</code>位置组成的</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606533.png"></p><h3 id="5-2-一维数组"><a href="#5-2-一维数组" class="headerlink" title="5.2 一维数组"></a>5.2 一维数组</h3><h4 id="5-2-1-一维数组定义方式"><a href="#5-2-1-一维数组定义方式" class="headerlink" title="5.2.1 一维数组定义方式"></a>5.2.1 一维数组定义方式</h4><p>一维数组定义的三种方式：</p><ol><li><code>数据类型  数组名[ 数组长度 ];</code></li><li><code>数据类型  数组名[ 数组长度 ] = &#123; 值1，值2 ...&#125;;</code></li><li><code>数据类型  数组名[ ] = &#123; 值1，值2 ...&#125;;</code></li></ol><p>示例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义方式1</span></span><br><span class="line"><span class="comment">//数据类型 数组名[元素个数];</span></span><br><span class="line"><span class="type">int</span> score[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用下标赋值</span></span><br><span class="line">score[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">score[<span class="number">1</span>] = <span class="number">99</span>;</span><br><span class="line">score[<span class="number">2</span>] = <span class="number">85</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用下标输出</span></span><br><span class="line">cout &lt;&lt; score[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; score[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; score[<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种定义方式</span></span><br><span class="line"><span class="comment">//数据类型 数组名[元素个数] =  &#123;值1，值2 ，值3 ...&#125;;</span></span><br><span class="line"><span class="comment">//如果&#123;&#125;内不足10个数据，剩余数据用0补全</span></span><br><span class="line"><span class="type">int</span> score2[<span class="number">10</span>] = &#123; <span class="number">100</span>, <span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//逐个输出</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score2[0] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score2[1] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一个一个输出太麻烦，因此可以利用循环进行输出</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; score2[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义方式3</span></span><br><span class="line"><span class="comment">//数据类型 数组名[] =  &#123;值1，值2 ，值3 ...&#125;;</span></span><br><span class="line"><span class="type">int</span> score3[] = &#123; <span class="number">100</span>,<span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; score3[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结1：数组名的命名规范与变量名命名规范一致，不要和变量重名</p></blockquote><blockquote><p>总结2：数组中下标是从0开始索引</p></blockquote><h4 id="5-2-2-一维数组数组名"><a href="#5-2-2-一维数组数组名" class="headerlink" title="5.2.2 一维数组数组名"></a>5.2.2 一维数组数组名</h4><p>一维数组名称的<strong>用途</strong>：</p><ol><li>可以统计整个数组在内存中的长度</li><li>可以获取数组在内存中的首地址</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组名用途</span></span><br><span class="line"><span class="comment">//1、可以获取整个数组占用内存空间大小</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;整个数组所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;每个元素所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组的元素个数为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、可以通过数组名获取到数组首地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组首地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)arr &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组中第一个元素地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组中第二个元素地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//arr = 100; 错误，数组名是常量，因此不可以赋值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：数组名是常量，不可以赋值</p></blockquote><blockquote><p>总结1：直接打印数组名，可以查看数组所占内存的首地址</p></blockquote><blockquote><p>总结2：对数组名进行sizeof，可以获取整个数组占内存空间的大小</p></blockquote><p><strong>练习案例1</strong>：五只小猪称体重</p><p><strong>案例描述：</strong></p><p>在一个数组中记录了五只小猪的体重，如：int arr[5] = {300,350,200,400,250};</p><p>找出并打印最重的小猪体重。</p><p><strong>练习案例2：</strong>数组元素逆置</p><p><strong>案例描述：</strong>请声明一个5个元素的数组，并且将元素逆置.</p><p>(如原数组元素为：1,3,2,5,4;逆置后输出结果为:4,5,2,3,1);</p><h4 id="5-2-3-冒泡排序"><a href="#5-2-3-冒泡排序" class="headerlink" title="5.2.3 冒泡排序"></a>5.2.3 冒泡排序</h4><p><strong>作用：</strong> 最常用的排序算法，对数组内元素进行排序</p><ol><li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值。</li><li>重复以上的步骤，每次比较次数-1，直到不需要比较</li></ol><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606534.png"></p><p><strong>示例：</strong> 将数组 { 4,2,8,0,5,7,1,3,9 } 进行升序排序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">9</span>] = &#123; <span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span> - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span> - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-二维数组"><a href="#5-3-二维数组" class="headerlink" title="5.3 二维数组"></a>5.3 二维数组</h3><p>二维数组就是在一维数组上，多加一个维度。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110131606536.png"></p><h4 id="5-3-1-二维数组定义方式"><a href="#5-3-1-二维数组定义方式" class="headerlink" title="5.3.1 二维数组定义方式"></a>5.3.1 二维数组定义方式</h4><p>二维数组定义的四种方式：</p><ol><li><code>数据类型  数组名[ 行数 ][ 列数 ];</code></li><li><code>数据类型  数组名[ 行数 ][ 列数 ] = &#123; &#123;数据1，数据2 &#125; ，&#123;数据3，数据4 &#125; &#125;;</code></li><li><code>数据类型  数组名[ 行数 ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</code></li><li><code> 数据类型  数组名[  ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</code></li></ol><blockquote><p>建议：以上4种定义方式，利用<code>第二种更加直观，提高代码的可读性</code></p></blockquote><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式1  </span></span><br><span class="line"><span class="comment">//数组类型 数组名 [行数][列数]</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式2 </span></span><br><span class="line"><span class="comment">//数据类型 数组名[行数][列数] = &#123; &#123;数据1，数据2 &#125; ，&#123;数据3，数据4 &#125; &#125;;</span></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式3</span></span><br><span class="line"><span class="comment">//数据类型 数组名[行数][列数] = &#123; 数据1，数据2 ,数据3，数据4  &#125;;</span></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;; </span><br><span class="line"></span><br><span class="line"><span class="comment">//方式4 </span></span><br><span class="line"><span class="comment">//数据类型 数组名[][列数] = &#123; 数据1，数据2 ,数据3，数据4  &#125;;</span></span><br><span class="line"><span class="type">int</span> arr4[][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：在定义二维数组时，如果初始化了数据，可以省略行数</p></blockquote><h4 id="5-3-2-二维数组数组名"><a href="#5-3-2-二维数组数组名" class="headerlink" title="5.3.2 二维数组数组名"></a>5.3.2 二维数组数组名</h4><ul><li>查看二维数组所占内存空间</li><li>获取二维数组首地址</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二维数组数组名</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组大小： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组一行大小： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组元素大小： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组行数： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组列数： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组首地址：&quot;</span> &lt;&lt; arr &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行地址：&quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二行地址：&quot;</span> &lt;&lt; arr[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一个元素地址：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二个元素地址：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结1：二维数组名就是这个数组的首地址</p></blockquote><blockquote><p>总结2：对二维数组名进行sizeof时，可以获取整个二维数组占用的内存空间大小</p></blockquote><h4 id="5-3-3-二维数组应用案例"><a href="#5-3-3-二维数组应用案例" class="headerlink" title="5.3.3 二维数组应用案例"></a><strong>5.3.3 二维数组应用案例</strong></h4><p><strong>考试成绩统计：</strong></p><p>案例描述：有三名同学（张三，李四，王五），在一次考试中的成绩分别如下表，<strong>请分别输出三名同学的总成绩</strong></p><table><thead><tr><th></th><th>语文</th><th>数学</th><th>英语</th></tr></thead><tbody><tr><td>张三</td><td>100</td><td>100</td><td>100</td></tr><tr><td>李四</td><td>90</td><td>50</td><td>100</td></tr><tr><td>王五</td><td>60</td><td>70</td><td>80</td></tr></tbody></table><p><strong>参考答案：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> scores[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">string names[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">sum += scores[i][j];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; names[i] &lt;&lt; <span class="string">&quot;同学总成绩为： &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-函数"><a href="#6-函数" class="headerlink" title="6 函数"></a>6 函数</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><p><strong>作用：</strong>将一段经常使用的代码封装起来，减少重复代码</p><p>一个较大的程序，一般分为若干个程序块，每个模块实现特定的功能。</p><h3 id="6-2-函数的定义"><a href="#6-2-函数的定义" class="headerlink" title="6.2 函数的定义"></a>6.2 函数的定义</h3><p>函数的定义一般主要有5个步骤：</p><p>1、返回值类型 </p><p>2、函数名</p><p>3、参数表列</p><p>4、函数体语句 </p><p>5、return 表达式</p><p><strong>语法：</strong> </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">       函数体语句</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span>表达式</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>返回值类型 ：一个函数可以返回一个值。在函数定义中</li><li>函数名：给函数起个名称</li><li>参数列表：使用该函数时，传入的数据</li><li>函数体语句：花括号内的代码，函数内需要执行的语句</li><li>return表达式： 和返回值类型挂钩，函数执行完后，返回相应的数据</li></ul><p><strong>示例：</strong>定义一个加法函数，实现两个数相加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-函数的调用"><a href="#6-3-函数的调用" class="headerlink" title="6.3 函数的调用"></a>6.3 函数的调用</h3><p><strong>功能：</strong>使用定义好的函数</p><p><strong>语法：</strong><code> 函数名（参数）</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> <span class="comment">//定义中的num1,num2称为形式参数，简称形参</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//调用add函数</span></span><br><span class="line"><span class="type">int</span> sum = <span class="built_in">add</span>(a, b);<span class="comment">//调用时的a，b称为实际参数，简称实参</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sum = &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">sum = <span class="built_in">add</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sum = &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：函数定义里小括号内称为形参，函数调用时传入的参数称为实参</p></blockquote><h3 id="6-4-值传递"><a href="#6-4-值传递" class="headerlink" title="6.4 值传递"></a>6.4 值传递</h3><ul><li>所谓值传递，就是函数调用时实参将数值传入给形参</li><li>值传递时，<code>如果形参发生，并不会影响实参</code></li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换前：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> temp = num1;</span><br><span class="line">num1 = num2;</span><br><span class="line">num2 = temp;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换后：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return ; 当函数声明时候，不需要返回值，可以不写return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mian中的 a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mian中的 b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结： 值传递时，形参是修饰不了实参的</p></blockquote><h3 id="6-5-函数的常见样式"><a href="#6-5-函数的常见样式" class="headerlink" title="6.5 函数的常见样式"></a><strong>6.5 函数的常见样式</strong></h3><p>常见的函数样式有4种</p><ol><li>无参无返</li><li>有参无返</li><li>无参有返</li><li>有参有返</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数常见样式</span></span><br><span class="line"><span class="comment">//1、 无参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//void a = 10; //无类型不可以创建变量,原因无法分配内存</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test01&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//test01(); 函数调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、 有参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test02&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、无参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test03 &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、有参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test04 &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> sum = a + b;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-6-函数的声明"><a href="#6-6-函数的声明" class="headerlink" title="6.6 函数的声明"></a>6.6 函数的声明</h3><p><strong>作用：</strong> 告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。</p><ul><li> 函数的<strong>声明可以多次</strong>，但是函数的<strong>定义只能有一次</strong></li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明可以多次，定义只能一次</span></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(a, b) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-7-函数的分文件编写"><a href="#6-7-函数的分文件编写" class="headerlink" title="6.7 函数的分文件编写"></a>6.7 函数的分文件编写</h3><p><strong>作用：</strong>让代码结构更加清晰</p><p>函数分文件编写一般有4个步骤</p><ol><li>创建后缀名为.h的头文件  </li><li>创建后缀名为.cpp的源文件</li><li>在头文件中写函数的声明</li><li>在源文件中写函数的定义</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap.h文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现两个数字交换的函数声明</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap.cpp文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main函数文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-指针"><a href="#7-指针" class="headerlink" title="7 指针"></a>7 指针</h2><h3 id="7-1-指针的基本概念"><a href="#7-1-指针的基本概念" class="headerlink" title="7.1 指针的基本概念"></a>7.1 指针的基本概念</h3><p><strong>指针的作用：</strong> 可以通过指针间接访问内存</p><ul><li>内存编号是从0开始记录的，一般用十六进制数字表示</li><li>可以利用指针变量保存地址</li></ul><h3 id="7-2-指针变量的定义和使用"><a href="#7-2-指针变量的定义和使用" class="headerlink" title="7.2 指针变量的定义和使用"></a>7.2 指针变量的定义和使用</h3><p>指针变量定义语法： <code>数据类型 * 变量名；</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、指针的定义</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>; <span class="comment">//定义整型变量a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//指针定义语法： 数据类型 * 变量名 ;</span></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量赋值</span></span><br><span class="line">p = &amp;a; <span class="comment">//指针指向变量a的地址</span></span><br><span class="line">cout &lt;&lt; &amp;a &lt;&lt; endl; <span class="comment">//打印数据a的地址</span></span><br><span class="line">cout &lt;&lt; p &lt;&lt; endl;  <span class="comment">//打印指针变量p</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、指针的使用</span></span><br><span class="line"><span class="comment">//通过*操作指针变量指向的内存</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p = &quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>指针变量和普通变量的区别</p><ul><li>普通变量存放的是数据,指针变量存放的是地址</li><li>指针变量可以通过” * “操作符，操作指针变量指向的内存空间，这个过程称为解引用</li></ul><blockquote><p>总结1： 我们可以通过 &amp; 符号 获取变量的地址</p></blockquote><blockquote><p>总结2：利用指针可以记录地址</p></blockquote><blockquote><p>总结3：对指针变量解引用，可以操作指针指向的内存</p></blockquote><h3 id="7-3-指针所占内存空间"><a href="#7-3-指针所占内存空间" class="headerlink" title="7.3 指针所占内存空间"></a>7.3 指针所占内存空间</h3><p>提问：指针也是种数据类型，那么这种数据类型占用多少内存空间？</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line">p = &amp;a; <span class="comment">//指针指向数据a的地址</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl; <span class="comment">//* 解引用</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span> *) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">float</span> *) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span> *) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：所有指针类型在32位操作系统下是4个字节</p></blockquote><h3 id="7-4-空指针和野指针"><a href="#7-4-空指针和野指针" class="headerlink" title="7.4 空指针和野指针"></a>7.4 空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间</p><p><strong>用途：</strong>初始化指针变量</p><p><strong>注意：</strong>空指针指向的内存是不可以访问的</p><p><strong>示例1：空指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量p指向内存地址编号为0的空间</span></span><br><span class="line"><span class="type">int</span> * p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问空指针报错 </span></span><br><span class="line"><span class="comment">//内存编号0 ~255为系统占用内存，不允许用户访问</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>野指针</strong>：指针变量指向非法的内存空间</p><p><strong>示例2：野指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量p指向内存地址编号为0x1100的空间</span></span><br><span class="line"><span class="type">int</span> * p = (<span class="type">int</span> *)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问野指针报错 </span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：空指针和野指针都不是我们申请的空间，因此不要访问。</p></blockquote><h3 id="7-5-const修饰指针"><a href="#7-5-const修饰指针" class="headerlink" title="7.5 const修饰指针"></a>7.5 const修饰指针</h3><p>const修饰指针有三种情况</p><ol><li>const修饰指针   — 常量指针</li><li>const修饰常量   — 指针常量</li><li>const即修饰指针，又修饰常量</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的是指针，指针指向可以改，指针指向的值不可以更改</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * p1 = &amp;a; </span><br><span class="line">p1 = &amp;b; <span class="comment">//正确</span></span><br><span class="line"><span class="comment">//*p1 = 100;  报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的是常量，指针指向不可以改，指针指向的值可以更改</span></span><br><span class="line"><span class="type">int</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line"><span class="comment">//p2 = &amp;b; //错误</span></span><br><span class="line">*p2 = <span class="number">100</span>; <span class="comment">//正确</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//const既修饰指针又修饰常量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * <span class="type">const</span> p3 = &amp;a;</span><br><span class="line"><span class="comment">//p3 = &amp;b; //错误</span></span><br><span class="line"><span class="comment">//*p3 = 100; //错误</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>技巧：看const右侧紧跟着的是指针还是常量, 是指针就是常量指针，是常量就是指针常量</p></blockquote><h3 id="7-6-指针和数组"><a href="#7-6-指针和数组" class="headerlink" title="7.6 指针和数组"></a>7.6 指针和数组</h3><p><strong>作用：</strong>利用指针访问数组中元素</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> * p = arr;  <span class="comment">//指向数组的指针</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一个元素： &quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;指针访问第一个元素： &quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//利用指针遍历数组</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-7-指针和函数"><a href="#7-7-指针和函数" class="headerlink" title="7.7 指针和函数"></a>7.7 指针和函数</h3><p><strong>作用：</strong>利用指针作函数参数，可以修改实参的值</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap1</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b; </span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap2</span><span class="params">(<span class="type">int</span> * p1, <span class="type">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = *p1;</span><br><span class="line">*p1 = *p2;</span><br><span class="line">*p2 = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap1</span>(a, b); <span class="comment">// 值传递不会改变实参</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">swap2</span>(&amp;a, &amp;b); <span class="comment">//地址传递会改变实参</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递</p></blockquote><h3 id="7-8-指针、数组、函数"><a href="#7-8-指针、数组、函数" class="headerlink" title="7.8 指针、数组、函数"></a>7.8 指针、数组、函数</h3><p><strong>案例描述：</strong>封装一个函数，利用冒泡排序，实现对整型数组的升序排序</p><p>例如数组：int arr[10] = { 4,3,6,9,1,2,10,8,7,5 };</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="type">int</span> * arr, <span class="type">int</span> len)</span>  <span class="comment">//int * arr 也可以写为int arr[]</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印数组函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArray</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：当数组名传入到函数作为参数时，被退化为指向首元素的指针</p></blockquote><h2 id="8-结构体"><a href="#8-结构体" class="headerlink" title="8 结构体"></a>8 结构体</h2><h3 id="8-1-结构体基本概念"><a href="#8-1-结构体基本概念" class="headerlink" title="8.1 结构体基本概念"></a>8.1 结构体基本概念</h3><p>结构体属于用户<code>自定义的数据类型</code>，允许用户存储不同的数据类型</p><h3 id="8-2-结构体定义和使用"><a href="#8-2-结构体定义和使用" class="headerlink" title="8.2 结构体定义和使用"></a>8.2 结构体定义和使用</h3><p><strong>语法：</strong><code>struct 结构体名 &#123; 结构体成员列表 &#125;；</code></p><p>通过结构体创建变量的方式有三种：</p><ul><li>struct 结构体名 变量名</li><li>struct 结构体名 变量名 = { 成员1值 ， 成员2值…}</li><li>定义结构体时顺便创建变量</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;stu3; <span class="comment">//结构体变量创建方式3 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体变量创建方式1</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu1; <span class="comment">//struct 关键字可以省略</span></span><br><span class="line"></span><br><span class="line">stu1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">stu1.age = <span class="number">18</span>;</span><br><span class="line">stu1.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu1.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu1.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu1.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体变量创建方式2</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu2 = &#123; <span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">60</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu2.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu2.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu2.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stu3.name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line">stu3.age = <span class="number">18</span>;</span><br><span class="line">stu3.score = <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu3.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu3.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu3.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结1：定义结构体时的关键字是struct，不可省略</p></blockquote><blockquote><p>总结2：创建结构体变量时，关键字struct可以省略</p></blockquote><blockquote><p>总结3：结构体变量利用操作符 ‘’.’’  访问成员</p></blockquote><h3 id="8-3-结构体数组"><a href="#8-3-结构体数组" class="headerlink" title="8.3 结构体数组"></a>8.3 结构体数组</h3><p><strong>作用：</strong>将自定义的结构体放入到数组中方便维护</p><p><strong>语法：</strong><code> struct  结构体名 数组名[元素个数] = &#123;  &#123;&#125; , &#123;&#125; , ... &#123;&#125; &#125;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体数组</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> arr[<span class="number">3</span>]=</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">80</span> &#125;,</span><br><span class="line">&#123;<span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">60</span> &#125;,</span><br><span class="line">&#123;<span class="string">&quot;王五&quot;</span>,<span class="number">20</span>,<span class="number">70</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; arr[i].age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; arr[i].score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-4-结构体指针"><a href="#8-4-结构体指针" class="headerlink" title="8.4 结构体指针"></a>8.4 结构体指针</h3><p><strong>作用：</strong>通过指针访问结构体中的成员</p><ul><li>利用操作符 <code>-&gt; </code>可以通过结构体指针访问结构体属性</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>, &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> * p = &amp;stu;</span><br><span class="line"></span><br><span class="line">p-&gt;score = <span class="number">80</span>; <span class="comment">//指针通过 -&gt; 操作符可以访问成员</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：结构体指针可以通过 -&gt; 操作符 来访问结构体中的成员</p></blockquote><h3 id="8-5-结构体嵌套结构体"><a href="#8-5-结构体嵌套结构体" class="headerlink" title="8.5 结构体嵌套结构体"></a>8.5 结构体嵌套结构体</h3><p><strong>作用：</strong> 结构体中的成员可以是另一个结构体</p><p><strong>例如：</strong>每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//教师结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line"><span class="type">int</span> id; <span class="comment">//职工编号</span></span><br><span class="line">string name;  <span class="comment">//教师姓名</span></span><br><span class="line"><span class="type">int</span> age;   <span class="comment">//教师年龄</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu; <span class="comment">//子结构体 学生</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span> t1;</span><br><span class="line">t1.id = <span class="number">10000</span>;</span><br><span class="line">t1.name = <span class="string">&quot;老王&quot;</span>;</span><br><span class="line">t1.age = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">t1.stu.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">t1.stu.age = <span class="number">18</span>;</span><br><span class="line">t1.stu.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;教师 职工编号： &quot;</span> &lt;&lt; t1.id &lt;&lt; <span class="string">&quot; 姓名： &quot;</span> &lt;&lt; t1.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; t1.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;辅导学员 姓名： &quot;</span> &lt;&lt; t1.stu.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; t1.stu.age &lt;&lt; <span class="string">&quot; 考试分数： &quot;</span> &lt;&lt; t1.stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结：</strong>在结构体中可以定义另一个结构体作为成员，用来解决实际问题</p><h3 id="8-6-结构体做函数参数"><a href="#8-6-结构体做函数参数" class="headerlink" title="8.6 结构体做函数参数"></a>8.6 结构体做函数参数</h3><p><strong>作用：</strong>将结构体作为参数向函数中传递</p><p>传递方式有两种：</p><ul><li>值传递</li><li>地址传递</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(student stu )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">stu.age = <span class="number">28</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent2</span><span class="params">(student *stu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">stu-&gt;age = <span class="number">28</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子函数中 姓名：&quot;</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu-&gt;age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">student stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>&#125;;</span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="built_in">printStudent</span>(stu);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;主函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="built_in">printStudent2</span>(&amp;stu);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;主函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：如果不想修改主函数中的数据，用值传递，反之用地址传递</p></blockquote><h3 id="8-7-结构体中-const使用场景"><a href="#8-7-结构体中-const使用场景" class="headerlink" title="8.7 结构体中 const使用场景"></a>8.7 结构体中 const使用场景</h3><p><strong>作用：</strong>用const来防止误操作</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const使用场景</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(<span class="type">const</span> student *stu)</span> <span class="comment">//加const防止函数体中的误操作</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//stu-&gt;age = 100; //操作失败，因为加了const修饰</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu-&gt;age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">student stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent</span>(&amp;stu);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-8-结构体案例"><a href="#8-8-结构体案例" class="headerlink" title="8.8 结构体案例"></a>8.8 结构体案例</h3><h4 id="8-8-1-案例1"><a href="#8-8-1-案例1" class="headerlink" title="8.8.1 案例1"></a>8.8.1 案例1</h4><p><strong>案例描述：</strong></p><p>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，需求如下</p><p>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员</p><p>学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值</p><p>最终打印出老师数据以及老师所带的学生数据。</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line">Student sArray[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">allocateSpace</span><span class="params">(Teacher tArray[] , <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string tName = <span class="string">&quot;教师&quot;</span>;</span><br><span class="line">string sName = <span class="string">&quot;学生&quot;</span>;</span><br><span class="line">string nameSeed = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">tArray[i].name = tName + nameSeed[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">tArray[i].sArray[j].name = sName + nameSeed[j];</span><br><span class="line">tArray[i].sArray[j].score = <span class="built_in">rand</span>() % <span class="number">61</span> + <span class="number">40</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printTeachers</span><span class="params">(Teacher tArray[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; tArray[i].name &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; tArray[i].sArray[j].name &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; tArray[i].sArray[j].score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>)); <span class="comment">//随机数种子 头文件 #include &lt;ctime&gt;</span></span><br><span class="line"></span><br><span class="line">Teacher tArray[<span class="number">3</span>]; <span class="comment">//老师数组</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(tArray) / <span class="built_in">sizeof</span>(Teacher);</span><br><span class="line"></span><br><span class="line"><span class="built_in">allocateSpace</span>(tArray, len); <span class="comment">//创建数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printTeachers</span>(tArray, len); <span class="comment">//打印数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-8-2-案例2"><a href="#8-8-2-案例2" class="headerlink" title="8.8.2 案例2"></a>8.8.2 案例2</h4><p><strong>案例描述：</strong></p><p>设计一个英雄的结构体，包括成员姓名，年龄，性别;创建结构体数组，数组中存放5名英雄。</p><p>通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。</p><p>五名英雄信息如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;,</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//英雄结构体</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">string sex;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(hero arr[] , <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j].age &gt; arr[j + <span class="number">1</span>].age)</span><br><span class="line">&#123;</span><br><span class="line">hero temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印数组</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printHeros</span><span class="params">(hero arr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名： &quot;</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">&quot; 性别： &quot;</span> &lt;&lt; arr[i].sex &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; arr[i].age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span> arr[<span class="number">5</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(hero); <span class="comment">//获取数组元素个数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr, len); <span class="comment">//排序</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printHeros</span>(arr, len); <span class="comment">//打印</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 黑马程序员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言算法流程图、NS图【张亚男老师】</title>
      <link href="/2021/10/09/c%E8%AF%AD%E8%A8%80%E7%AE%97%E6%B3%95%E6%B5%81%E7%A8%8B%E5%9B%BE-NS%E5%9B%BE%E3%80%90%E5%BC%A0%E4%BA%9A%E7%94%B7%E8%80%81%E5%B8%88%E3%80%91/"/>
      <url>/2021/10/09/c%E8%AF%AD%E8%A8%80%E7%AE%97%E6%B3%95%E6%B5%81%E7%A8%8B%E5%9B%BE-NS%E5%9B%BE%E3%80%90%E5%BC%A0%E4%BA%9A%E7%94%B7%E8%80%81%E5%B8%88%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>大纲：</strong></p><ul><li>交换两个变量</li><li>输出10个数中的最大数</li><li>有3个数a, b, c， 要求按有大小顺序把他们输出</li><li>求1+2+3+……+100</li><li>判断一个数n能否同时被3和5整除</li><li>求两个数m和n的最大公约数</li><li>求一元二次方程式ax^2+bx+c=0的根，分别考虑有两个不相等的实根和有两个相等的实根两种情况</li></ul><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>温馨提示：部分运算符号和书上会有出入，可能是因为学的算法版本不一致的原因…</strong></p><p><strong>注意：仅供参考，和标准答案多少会有点出入，而且算法的答案本身就不唯一！！！</strong></p><p><strong>注意：仅供参考，和标准答案多少会有点出入，而且算法的答案本身就不唯一！！！</strong></p><p><strong>注意：仅供参考，和标准答案多少会有点出入，而且算法的答案本身就不唯一！！！</strong></p><p><strong>由于只是我一个人的力量，当时我学c语言的时候，算法这一章就是一带而过的emmmmm，纯属是自己看的课本，现学的，还要就是第一次学画NS图，八张图下来，已经熟练啦，你会发现后面画的图还是可以看的过去的哈哈哈哈</strong></p><p><strong>如果出现错误纯属正常哈~ 如果有什么不明白的地方，可以联系我，关于页面有我的联系方式哈或者可以在评论区留言也行哦（回复较慢）！</strong></p><h1 id="电脑画图软件"><a href="#电脑画图软件" class="headerlink" title="电脑画图软件"></a>电脑画图软件</h1><ul><li>流程图：draw.io</li><li>NS流程图：亿图图示</li></ul><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><blockquote><p>有两个瓶子a和b，分别盛放醋和酱油，要求将它们互换。</p></blockquote><h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><blockquote><p>注意：此处的瓶子是两个装满东西的瓶子，不能混掺，所以要想交换就得再拿一个空瓶子用来临时存放。现假设：A中装满了醋，B中装满了酱油，C是临时存放的空瓶子。</p><ul><li>第一步：把A中的醋倒入空瓶子C中，临时保存。（A瓶此时已经空了，接下来就可以把B中的酱油倒进来了）</li><li>第二步：把B中的酱油倒入A瓶中（B瓶此时也空了，接下来可以把C中暂存的醋倒进来啦）</li><li>第三步：把C中的醋倒入B中（到此，就已经实现了醋和酱油的交换。）</li></ul><p>这是一道很经典的算法题，一旦涉及到两数交换，基本就是这个算法了。</p></blockquote><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090107002.png"></p><h3 id="NS图"><a href="#NS图" class="headerlink" title="NS图"></a>NS图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090108427.png"></p><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><blockquote><p>依次将10个数输入，要求输出其中最大的数。</p></blockquote><h3 id="问题分析-1"><a href="#问题分析-1" class="headerlink" title="问题分析"></a>问题分析</h3><blockquote><p>我们可以声明一个max变量用来存放10个数当中最大的数，如果输入的数比max大就赋值给max，否则就不赋值。那么问题来了，既然需要跟max比较，那就要在比较之前先给定max一个具体的值吧，要不然怎么和max比较呢？你说是吧。 那究竟给什么值合适呢？</p><p>可以随意给max赋值吗？答案是否定的！！！ 为什么呢？</p><p>你想，加入我们给max赋值为0，而我们输入的十个数 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10,都比max小，不会把max替换掉，导致我们最终得到的结果就是max为0，也就是十个数中的最大数是0，显然，这是错误的。</p><p>这里，我们可以假设第一次输入的数最大，我说的是假设哦~ 如果它不是最大的话就被后面比它大的数替换了呗，对吧。我们一样可以找出最大。 相信到这里你已经明白了我的思路</p><ul><li>把第一次输入的值赋值给max</li><li>i 从 1 开始，一共需要输入10个数，我们已经把第一个输入的数给了max 所以还剩下9个数也就是说循环还剩下就此，即i应该≤9！！！而不是≤10！！！ 这是第二个易错点！！！</li><li>每循环一次，都需要比较一下输入的数是否大于max，如果大于，就用新输入的数把max换掉，更新最大值。</li><li>循环结束，max肯定就是10个数中的最大值了，这个时候就可以把最大值输入出来了。</li></ul></blockquote><h3 id="流程图-1"><a href="#流程图-1" class="headerlink" title="流程图"></a>流程图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090124054.png"></p><h3 id="NS图-1"><a href="#NS图-1" class="headerlink" title="NS图"></a>NS图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090124191.png"></p><p><strong>很抱歉：刚发现一个小错误，这个NS图的最后，少了一个输出max，自行补上哈！电脑画NS图实在太费劲了…，见谅哈！</strong></p><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><blockquote><p>有3个数a, b, c， 要求按有大小顺序把他们输出。</p></blockquote><h3 id="问题分析-2"><a href="#问题分析-2" class="headerlink" title="问题分析"></a>问题分析</h3><blockquote><p>这道题流程图采用的算法和NS图采用的算法不一样哦！具体看我下面分析哈。</p><p>流程图的算法：想要按大小顺序输出a，b，c三个数，这里我们按照由大到小来输出，由小到大只需要改一下输出顺序即可哈。 </p><ul><li>第一步确定a和b的大小关系，保证a一定大于b，如果a不大于b，就让a和b的数交换，用到问题一的算法即可。换完之后不就保证a最大了嘛，是吧。</li><li>为什么一定要保证a大于b呢，如果不这样的话，结果就太复杂了，3个数全排列，6中结果，但我们让a一定大于b的话，结果就只有三种啦，也是一个技巧吧！</li><li>接下来我们再分别判断a和c的关系，b和c的关系就行啦，至于a和b，咱们已经保证了a一定大于b啦。就不用在判断啦~</li></ul><p>NS图的算法：同上，这儿的输出结果也是由大到小哦。这里采用的算法是把a，b，c的大小关系都锁死，流程图的那种算法会出现三种结果，而如果我们把a,b,c的大小关系限制死，即a最大，b中间，c最小的话就只有一种结果啦。</p><ul><li>首先保证a和b的大小关系，如果a小于b，就让二者交换。</li><li>接下来保证a和c的大小关系，如果a小于c，就让二者交换。到这里a就可以做到最大了。</li><li>接下来的任务就是让b处于中间，它已经比a小了，怎么让它处于中间呢？</li><li>很简单，保证b比c大即可。方法同上，如果b小于c就让二者交换。</li><li>注意：二者交换的算法就是问题一的算法哈。忘了的话再回到上面看一下。</li></ul></blockquote><h3 id="流程图-2"><a href="#流程图-2" class="headerlink" title="流程图"></a>流程图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090125375.png"></p><h3 id="NS图-2"><a href="#NS图-2" class="headerlink" title="NS图"></a>NS图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090125799.png"></p><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><blockquote><p>求1+2+3+……+100。</p></blockquote><h3 id="问题分析-3"><a href="#问题分析-3" class="headerlink" title="问题分析"></a>问题分析</h3><blockquote><p>这道题很简单，就是求1-100求和，我们需要用一个变量S（sum的缩写）来存放1-100的和。</p><p>计算机就是用来算这种繁琐的题目的，总不能人工一个一个数的加吧，再快点无非就是用数学公式，但老师想考我们的是循环哦~ </p><p>注意：在加法求和中S尝尝初始值为0，乘法常常初始值为1。这个很好理解吧。求和+0没影响，求积x1没影响，是吧。</p><p>方法步骤：</p><ul><li>初始化S为0，i 为1 //因为从1开始加</li><li>循环100次，i 从1 ≤ 100</li><li>每次循环先让每次的 i 值加到S里，然后再让 i 自身+1</li><li>注意：NS图里的i &gt; 100是终止条件哦！ 别弄混啦~</li></ul></blockquote><h3 id="流程图-3"><a href="#流程图-3" class="headerlink" title="流程图"></a>流程图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090125036.png"></p><h3 id="NS图-3"><a href="#NS图-3" class="headerlink" title="NS图"></a>NS图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090128846.png"></p><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><blockquote><p>判断一个数n能否同时被3和5整除。</p></blockquote><h3 id="问题分析-4"><a href="#问题分析-4" class="headerlink" title="问题分析"></a>问题分析</h3><blockquote><p>个人觉得这个算法太简单了，没什么好分析的，老师出这道题的目的就是想让大家多练习一下流程图和NS图的规则吧~ emmmmm 毕竟是初学者，认真画好好画就行了，我觉得大家应该都能看懂 简单说一下：</p><ul><li>同时意思是当二者都满足的时候才可以，有一个不满足就不行 ~ </li><li>所以说，咱可以先判断能不能被3整除，如果都不能被3整除，直接输出不能即可，还谈什么同时整除，是吧</li><li>如果可以被3整除，接下来咱再判断能不能被5整除，如果5也可以整除，就说明可以同时整除，如果不能被5整除，就不是同时，就输出不能。</li></ul></blockquote><h3 id="流程图-4"><a href="#流程图-4" class="headerlink" title="流程图"></a>流程图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090126078.png"></p><h3 id="NS图-4"><a href="#NS图-4" class="headerlink" title="NS图"></a>NS图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090126190.png"></p><h2 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h2><blockquote><p>求两个数m和n的最大公约数。</p><p>最大公因数，也称<em>最大公约数</em>、最大公因子，指两个或多个整数共有约数中最大的一个。</p></blockquote><h3 id="问题分析-5"><a href="#问题分析-5" class="headerlink" title="问题分析"></a>问题分析</h3><blockquote><p><strong>方法：辗转相除法，步骤如下。</strong></p><ul><li>2个数相除，大的除以小的得出余数</li><li>如果余数不为0，则拿较小的数与余数继续相除，判断新的余数是否为0</li><li>如果余数为0，则最大公约数就是本次相除中较小的数。</li></ul><p><strong>注意：0与另一个数的最大公约数是多少？</strong></p><p><strong>答：0除以任何一个数都得0 可以整除，所以0与一个数的最大公约数是这个数本身</strong></p><p><strong>流程图和NS图解析：</strong></p><ul><li>输入两个数m和n，根据辗转相除法，先保证m大于n。</li><li>判断n是不是0，如果n是0的话，根据0的特点，直接可以得出m就是最大公约数。</li><li>如果n不是0，就让m除以n，获得余数r，把较小的数n传给m以便下一次求余数。</li><li>把余数r传给n，以便判断余数是不是0，并且方便下一次的求余。（因为r = m % n 是固定的，要想继续求余就得把要求余的两个数：较小的数和余数分别传给m和n）</li><li>如果余数为0，因为已经把余数传给n了，n是0的话就代表余数为0了。</li><li>NS图大同小异，就不解释了，试着理解</li></ul><p>其实，这个辗转相除法不是那么好理解，如果一开始理解不了，可以试着先把这个算法记忆下来，慢慢理解。当然，也可以通过b站等教学网站，搜索相关视频或者参考百度来深入理解哦！实在理解不了也问题不大，并不是所有问题都需要理解的，会用就是了emmmmmmmm</p></blockquote><h3 id="流程图-5"><a href="#流程图-5" class="headerlink" title="流程图"></a>流程图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090128404.png"></p><h3 id="NS图-5"><a href="#NS图-5" class="headerlink" title="NS图"></a>NS图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110090129745.png"></p><h2 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h2><blockquote><p>求两个数m和n的最大公约数。</p></blockquote><p><strong>和第六题重复了，就跳过了</strong></p><h2 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h2><blockquote><p>求一元二次方程式ax^2+bx+c=0的根，分别考虑有两个不相等的实根和有两个相等的实根两种情况。</p></blockquote><h3 id="问题分析-6"><a href="#问题分析-6" class="headerlink" title="问题分析"></a>问题分析</h3><blockquote><p>相信能够看到这儿的，这道题对你来说已经非常简单了emmmmm，我感觉张老师出这道题的目的也是在于锻炼大家的基本素养，毕竟刚学，刷题刷的少，画的也少emmmmm 感觉没啥好解释的，简单分析一下吧：</p><ul><li>disc用来存放德尔塔的值</li><li>sqrt是开根号的运算符</li><li>相信我不说大家也能猜出来，都是初中高中知识，真的觉得没什么好说的，就到这儿吧，已经深夜1.30了  室友正在酣睡中······ 不早了，晚安~</li></ul></blockquote><h3 id="流程图-6"><a href="#流程图-6" class="headerlink" title="流程图"></a>流程图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110091613085.png"></p><h3 id="NS图-6"><a href="#NS图-6" class="headerlink" title="NS图"></a>NS图</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110091614005.png"></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 张亚男 </tag>
            
            <tag> c语言 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于cmder在本地无法使用和Dev-C++基本使用说明</title>
      <link href="/2021/09/27/%E5%85%B3%E4%BA%8Ecmder%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E5%92%8Cdev-c-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
      <url>/2021/09/27/%E5%85%B3%E4%BA%8Ecmder%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E5%92%8Cdev-c-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><blockquote><p>首先简单了解一下基本概念：</p><p>想要用c语言完成一个程序，最基本需要两个东西，一个叫编辑器，另一个叫编译器。编辑器用来写代码，编译器用来把源代码变成可执行文件，简单理解成软件即可。</p><p>编辑器：咱们常用的记事本，vim等都可以。</p><p>编译器：很常见的编译器如gcc 它集成在mingw32/mingw64中。</p><p>还有一个概念叫ide，ide中文集成开发环境。字面意思，它同时包含了编辑器和编译器。</p><p>常见的c语言ide如Dev-C++ 本期带来的就是Dev-C++</p></blockquote><h1 id="关于Cmder及为什么本地无法使用编译"><a href="#关于Cmder及为什么本地无法使用编译" class="headerlink" title="关于Cmder及为什么本地无法使用编译"></a>关于Cmder及为什么本地无法使用编译</h1><blockquote><p>首先说明一下为什么刘老师会选择Cmder这款软件：</p><p>因为老师想让咱们了解Linux操作系统，这个我真的很感激他，我在群里说的话绝不是迎合！是本意！ 而学校服务器用的就是Linux系统，包括将来咱们进了公司 也很可能会要求使用Linux系统！</p><p>老师要求将作业提交到学校服务器，这就需要咱们能够连接到学校服务器，怎么实现呢，这就得简单提一下ssh了~   通过ssh咱们就可以连接到学校服务器。</p><p>cmder恰好就集成了ssh这个功能~  当然不只是cmder 比如putty也带~ 为什么选cmder而不选别的，这个可以百度cmder的优点：比如开源，美观…</p><p><strong>cmder不只是只有ssh 它还自带vim编辑器，但只有vim编辑器是不够的，因为写c语言程序还需要有编译器：gcc  而cmder本身并不带gcc，需要安装mingw64才可以。而为什么学校服务器可以用呢~ 因为学校服务器老师已经帮忙装上gcc了！</strong></p></blockquote><h1 id="关于编译器gcc的安装"><a href="#关于编译器gcc的安装" class="headerlink" title="关于编译器gcc的安装"></a>关于编译器gcc的安装</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><blockquote><p>gcc集成在mingw64，考虑到软件安装包放在国外网站，下载速度贼慢！ 不过我提前给大家下载好了！😁 链接放在下方，失效了告诉我！  失效了记得联系我！~ vx：wfl20201312</p></blockquote><p><strong>百度网盘</strong>：链接：<a href="https://pan.baidu.com/s/1zbraK5zVdjAZujeH9fTWDw">https://pan.baidu.com/s/1zbraK5zVdjAZujeH9fTWDw</a> 提取码：w13r </p><p><strong>备用链接：</strong><a href="https://drive.fatsheep.cn/AliDrive/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z">https://drive.fatsheep.cn/AliDrive/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>解压下载下来的安装包，把解压后的文件夹mingw64放到你想要安装的位置。</strong></p><p>记住你刚才所放的位置，因为等下会用到！！！</p><p>记住你刚才所放的位置，因为等下会用到！！！</p><p>记住你刚才所放的位置，因为等下会用到！！！</p><p>这里我放在C:\Program Files\mingw64</p><p>建议别放在根目录，如：E:\</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271652192.jpg"></p><p>进入子目录bin。然后点击路径这个位置，复制粘贴保存！！！等下要用哦~</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202110081808625.png"></p><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p><strong>1.右键我的电脑，点击属性</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271656929.jpg"></p><p><strong>2.点击高级系统设置</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271656931.jpg"></p><p>可能你的在其他位置，但一定能在属性界面找到的，仔细看一下。</p><p><strong>3.点击环境变量</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271656932.jpg"></p><p><strong>4.在系统变量里找到并点击path，选择点击编辑</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271656933.jpg"></p><p><strong>5.添加刚才保存的文件夹的位置</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271701922.png"></p><p>到此！恭喜你就已经成功为你的电脑装上了</p><p>到此，在cmder或者其他的地方都能够正常调用gcc啦~ 快去试试吧！</p><h1 id="关于Dev-C-的安装和基本使用"><a href="#关于Dev-C-的安装和基本使用" class="headerlink" title="关于Dev-C++的安装和基本使用"></a>关于Dev-C++的安装和基本使用</h1><h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><p><strong>考虑到也是外国软件~ 我也已经提前帮大家下载好了！</strong> </p><p><strong>百度网盘:</strong> <a href="https://pan.baidu.com/s/1Ex-2nsRUXSPCpMm77a4Vyg">https://pan.baidu.com/s/1Ex-2nsRUXSPCpMm77a4Vyg</a> 提取码：xtud </p><p><strong>备用链接：</strong><a href="https://drive.fatsheep.cn/AliDrive/Dev-Cpp">https://drive.fatsheep.cn/AliDrive/Dev-Cpp</a> 5.11 TDM-GCC 4.9.2 Setup.exe</p><p>失效了记得联系我！~ vx：wfl20201312</p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p><strong>1.选择English，OK</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271709248.png"></p><p>2.选择I Agree</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271710375.png"></p><p><strong>3.Next</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271710979.png"></p><p><strong>4.选择合适的安装位置，点击browse进行更换~ 然后点击Install</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271711911.png"></p><p><strong>5.更改为简体中文，然后Next</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271713254.png"></p><p><strong>6.选择自己喜欢的主题，默认就挺好，这个看个人啦~ 然后Next</strong></p><p><strong>7.OK</strong></p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h3><ol><li>快捷键：Ctrl + N</li><li>文件→新建→源代码</li></ol><h3 id="写源代码（c文件）"><a href="#写源代码（c文件）" class="headerlink" title="写源代码（c文件）"></a>写源代码（c文件）</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271716696.png"></p><ul><li>在红色区域写即可，它比vim的优点是，自带补充插件！ 什么意思呢  你打一个（ 就知道了！ 快去感受一下吧！</li><li> 而且它的高亮很人性化，比如你把分号敲成中文了，它会变成黑色，正常应该是红色~ 还有很多很多，就不多说啦。大家自行百度或者自行摸索~ </li><li>当然vim其实超级牛！ 它如果配置好了 秒杀dev-c++  但作为轻量级使用，作为入门的小白，还是dev-c++更加友好！</li></ul><h3 id="保存源代码"><a href="#保存源代码" class="headerlink" title="保存源代码"></a>保存源代码</h3><p>注意保存的时候文件类型一定要选择c文件，不是cpp文件哦！！！</p><p>注意保存的时候文件类型一定要选择c文件，不是cpp文件哦！！！</p><p>注意保存的时候文件类型一定要选择c文件，不是cpp文件哦！！！</p><p>保存方法：文件→另存为→将保存类型更改为c文件类型，默认是cpp~→保存</p><p>文件名无所谓啦~~~</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271722959.png"></p><h3 id="编译运行"><a href="#编译运行" class="headerlink" title="编译运行"></a>编译运行</h3><p>注意：更改过代码之后一定要记得重新编译一次，否则相当于没改！！！</p><p>注意：更改过代码之后一定要记得重新编译一次，否则相当于没改！！！</p><p>注意：更改过代码之后一定要记得重新编译一次，否则相当于没改！！！</p><p>所以建议一般选择编译运行即可，一步到位~ 防止忘记！</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109271724664.png"></p><p><strong>编译快捷键F9</strong></p><p><strong>运行快捷键F10</strong></p><p><strong>编译运行快捷键F11</strong></p><p>注意：有些电脑会不生效，会跟电脑默认的快捷键冲突，这时候同时按上Fn这个键即可！</p><p>注意：有些电脑会不生效，会跟电脑默认的快捷键冲突，这时候同时按上Fn这个键即可！</p><p>注意：有些电脑会不生效，会跟电脑默认的快捷键冲突，这时候同时按上Fn这个键即可！</p><p>到此，可以写一份最简单的hello，world程序亲自动手试试啦~ 时间有限，内容质量感人emmmmm 后续会发布好的作品，喜欢的话，可以收藏一波我的博客：blog.fatsheep.cn</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dev-c++ </tag>
            
            <tag> cmder </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记本推荐清单及分析</title>
      <link href="/2021/09/16/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%8E%A8%E8%8D%90%E6%B8%85%E5%8D%95%E5%8F%8A%E5%88%86%E6%9E%90/"/>
      <url>/2021/09/16/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%8E%A8%E8%8D%90%E6%B8%85%E5%8D%95%E5%8F%8A%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我写的这些清单主要考虑到以下内容：</p><ul><li>不玩游戏，学习用，但有时候需要用到PS Pr等软件</li><li>不要游戏本，太笨重了，女生拿挺麻烦的 （游戏本不电源性能很鸡肋，游戏本的电源也挺重的）</li><li>价格1万以内，可以不用优先考虑性价比</li><li>屏幕尽量14英寸左右  太大了不方便 太小了也不好~</li><li>能完美胜任大学四年，并且配置尽量不过剩</li></ul><h1 id="Premiere-Pro（Pr）-硬件要求"><a href="#Premiere-Pro（Pr）-硬件要求" class="headerlink" title="Premiere Pro（Pr） 硬件要求"></a>Premiere Pro（Pr） 硬件要求</h1><p>先来跟我一起看一下Pr官方给的配置文档吧，你要知道，这可是官方给的推荐配置哦！</p><p>Adobe官方推荐Pr配置地址，[点击前往✈](<a href="https://helpx.adobe.com/cn/premiere-pro/system-requirements.html">Adobe Premiere Pro 系统要求</a>)</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109131050701.png"></p><blockquote><p>PR是Adobe公司出品的一款剪辑软件，这款软件对于CPU（<strong>处理器</strong>）、内存、显卡的要求很高。我们分别来看这三项数据：</p></blockquote><h2 id="处理器"><a href="#处理器" class="headerlink" title="处理器"></a>处理器</h2><ul><li><p>处理器，也就是CPU啦~  一般分为AMD和英特尔Inter两大厂家~  近年AMD崛起啦~ 网上不少说AMD YES AMD yyds滴~ 因为性价比较高~ 而Inter一直都是大佬级别的存在~ 但性价比相比不如AMD 所以一般性价比比较高的机子 上的都是AMD的处理器啦~</p></li><li><p>Intel® 第 7 代或更新版本的 CPU，或 AMD Ryzen™ 3000 系列或更新版本的 CPU  处理器我选的几款电脑基本都可以满足~ 这个可以忽略~   今年已经到了AMD 5000系列，Intel i7也很常见啦</p></li></ul><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><ul><li><p>最低要求8GB，但目前笔记本入门基本已经是16GB了~  内存如果你不懂的话，你就记住一句话，内存越大越好~</p></li><li><p>内存相当于手机的运行内存比如 4G,8G，可不是手机储存哦  硬盘相当于手机的储存比如32G,64G，128G 电脑硬盘目前基本是512GB起步啦。</p></li><li><p>官方给的配置，16GB的话够用来HD媒体，就是高清画质吧~  如果想要4K的分辨率 还得是32G</p></li><li><p>但目前品牌轻薄本很少有32G的….</p></li></ul><h2 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h2><h3 id="关于核显（集成显卡）和独立显卡（独显）"><a href="#关于核显（集成显卡）和独立显卡（独显）" class="headerlink" title="关于核显（集成显卡）和独立显卡（独显）"></a>关于核显（集成显卡）和独立显卡（独显）</h3><ul><li><p>提到显卡就得先给你科普一下基础知识啦，显卡按种类分的话分为核显（集成显卡）：就是字面意思，说白一点就是买CPU（处理器）送的显卡emmmmm，就是CPU自带的显卡，集成在CPU上面 所以称之为集成显卡，也叫核显~</p></li><li><p><strong>集成显卡</strong>一般也就能够用来办公，刷剧，轻度娱乐。 涉及到Pr这种比较吃显卡的，够呛，不能说不行，比如PS Pr 也可以运行，只能说不是那么丝滑…   如果是玩3A大作：比如绝地求生，赛博朋克这些大型游戏，想都别想哈~</p></li><li><p><strong>集成显卡并不是一无是处！</strong> 它在轻薄本，商务本，那种轻度娱乐办公的笔记本里就突出了它的优点，在保证性能足够的情况下，还能更省电~ 功耗小~   但咱运行大型软件的话 还是算了emmmmm</p></li></ul><h3 id="关于A卡和N卡"><a href="#关于A卡和N卡" class="headerlink" title="关于A卡和N卡"></a>关于A卡和N卡</h3><ul><li><p>一般常见的显卡主要分为A卡和N卡</p></li><li><p>首先先说下概念，A卡早期是采用ATI显卡芯片的显卡，目前ATI已经被AMD收购，A卡称之为AMD显卡，A卡作品有 镭. X系列，苹果A卡多一些，微软的话N卡比较常见。</p></li><li><p>N卡就是采用NVIDIA显卡芯片的显卡，N卡作品有GeForce（GTX）系列，GeForce FX（GT）系列等等；你可以先买一张同等价位的N卡。  像1650 2060 2070 3050 3060 3080等等…. 都是GTX系列滴 这些基本上都是为了游戏而生</p></li></ul><h3 id="Pr对显卡的要求"><a href="#Pr对显卡的要求" class="headerlink" title="Pr对显卡的要求"></a>Pr对显卡的要求</h3><ul><li>在我看来，关于Pr，显卡才是最为关键~  因为轻薄本里面能满足Adobe官方给的推荐的文档里的显卡配置的实在很少，最低要求是GPU为2GB大小，目前轻薄本里间的很多的就是max450显卡（2GB大小）了，而流畅运行需要4GB大小 </li><li>一般轻薄本的话，大多为集成显卡，  显卡一般分为集成显卡和独立显卡，集成显卡只能够满足日常刷剧、办公等，当然，顶多玩个LOL CF这种小游戏，玩不了3A大作， 当然我知道你不玩游戏，但Pr需要~ emmmmm</li></ul><h3 id="附：官方推荐的显卡型号"><a href="#附：官方推荐的显卡型号" class="headerlink" title="附：官方推荐的显卡型号"></a>附：官方推荐的显卡型号</h3><p><strong>推荐的显卡</strong></p><p>适用于 Premiere Pro 和 Premiere Rush 的桌面版</p><p><strong>WINDOWS CUDA</strong></p><ul><li>NVIDIA Quadro RTX 8000</li><li>NVIDIA Quadro RTX 6000</li><li>NVIDIA Quadro RTX 5000</li><li>NVIDIA Quadro RTX 4000</li><li>NVIDIA Quadro RTX 3000</li><li>NVIDIA Quadro GV100</li><li>NVIDIA Quadro GP100</li><li>NVIDIA Quadro P6000</li><li>NVIDIA Quadro P5200</li><li>NVIDIA Quadro P5000</li><li>NVIDIA Quadro P4000</li><li>NVIDIA Quadro P2000</li><li>NVIDIA Quadro P2200</li><li>NVIDIA Quadro P1000</li><li>NVIDIA Quadro M6000</li><li>NVIDIA Quadro M5000</li><li>NVIDIA Quadro M4000</li><li>NVIDIA Quadro M2000</li><li>NVIDIA Quadro K6000</li><li>NVIDIA Quadro K5200</li><li>NVIDIA Quadro K5000</li><li>NVIDIA Quadro K2000</li><li>NVIDIA Quadro K1200</li><li>NVIDIA TITAN RTX</li><li>NVIDIA TITAN V</li><li>NVIDIA TITAN XP</li><li>NVIDIA TITAN X (Pascal)</li><li>NVIDIA TITAN Z</li><li>NVIDIA GeForce RTX 2080 Ti</li><li>NVIDIA GeForce RTX 2080</li><li>NVIDIA GeForce RTX 2070</li><li>NVIDIA GeForce RTX 2060</li><li>NVIDIA GeForce GTX 1660 Ti</li><li>NVIDIA GeForce GTX 1660</li><li>NVIDIA GeForce GTX 1650</li><li>NVIDIA GeForce GTX 1080 Ti</li><li>NVIDIA GeForce GTX 1080</li><li>NVIDIA GeForce GTX 1070 Ti</li><li>NVIDIA GeForce GTX 1070</li><li>NVIDIA GeForce GTX 1060</li><li>NVIDIA GeForce GTX 980 Ti</li><li>NVIDIA GeForce GTX 980</li><li>NVIDIA GeForce GTX 970</li></ul><p><strong>WINDOWS OPENCL</strong></p><ul><li>AMD Radeon Pro W5500</li><li>AMD Radeon Pro W5700</li><li>AMD Radeon Pro W3200</li><li>AMD Radeon Pro SSG</li><li>AMD Radeon Pro WX 3100</li><li>AMD Radeon Pro WX 4100</li><li>AMD Radeon Pro WX 5100</li><li>AMD Radeon Pro WX 7100</li><li>AMD Radeon Pro WX 8200</li><li>AMD Radeon Pro WX 9100</li><li>AMD Radeon Pro W4100</li><li>AMD FirePro W5100</li><li>AMD FirePro W7100</li><li>AMD FirePro W8100</li><li>AMD FirePro W9100</li><li>AMD FirePro W7000</li><li>AMD FirePro W8000</li><li>AMD FirePro W9000</li><li>AMD Radeon Pro WX 4130</li><li>AMD Radeon Pro WX 4150</li><li>AMD Radeon Pro WX 4170</li><li>AMD FirePro W6150M</li><li>AMD FirePro W7170M</li></ul><p><strong>MAC METAL</strong></p><ul><li>AMD FirePro D300</li><li>AMD FirePro D500</li><li>AMD FirePro D700</li><li>AMD Radeon R9 M290X</li><li>AMD Radeon R9 M380</li><li>AMD Radeon R9 M390</li><li>AMD Radeon R9 M395X</li><li>AMD Radeon Pro 560</li><li>AMD Radeon Pro 570</li><li>AMD Radeon Pro 575</li><li>AMD Radeon Pro 580</li><li>AMD Radeon Pro M395X</li><li>AMD Radeon Pro Vega 56</li><li>AMD Radeon Pro Vega 64</li><li>Intel® HD Graphics 6000 </li><li>Intel® Iris™ Graphics 6100 </li><li>Intel® Iris™ Pro Graphics 6200</li><li>AMD Radeon Pro Vega 20</li><li>AMD Radeon Pro Vega 48</li></ul><p><strong>集成图形芯片组</strong></p><ul><li>Intel® HD Graphics 5000     </li><li>Intel® HD Graphics 6000     </li><li>Intel® Iris Graphics 6100     </li><li>Intel® Iris Pro Graphics 6300    </li><li>Intel® Iris Pro Graphics P6300    </li><li>Intel® Iris Graphics 540/550    </li><li>Intel® Iris Pro Graphics 580    </li><li>Intel® Iris Pro Graphics P580</li><li>Intel® Iris™ Plus Graphics 640/650</li></ul><h1 id="为什么不推荐华为"><a href="#为什么不推荐华为" class="headerlink" title="为什么不推荐华为"></a>为什么不推荐华为</h1><blockquote><p>本来考虑到目前华为挺火热的，而且你用的也是华为手机，手机和电脑都是华为的话， 能够享受华为生态带的同屏协力，多屏协同，传文件贼方便，而且华为笔记本一般都是触控屏，其实个人觉得，电脑屏那么大，触不触控屏的真的不重要emmmmm，拿手点不是那么方便，不过既然这也是人家的一大特色啦，就顺便给你提一下。</p></blockquote><blockquote><p>但是呢，比较遗憾的是，考虑到你想用pr这种比较吃配置的软件，华为目前的笔记本并不能胜任这个工作哦~ 因为华为目前的笔记本全是核显， 为此我还特意问了一下华为官方的客服人员~ </p></blockquote><p>下面是询问的华为官方客服的对话：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160904240.png"></p><blockquote><p>其次华为目前所注重的是商业用途和轻度娱乐办公，所以它们的电脑把成本更多的投在了用户体验感上面，而不是配置上面~  而且目前华为的电脑种类很少，毕竟相比其他老牌电脑厂家 它还是有些年轻滴…  术业有专攻嘛 也不是说华为不好，其实我也挺喜欢华为的，无论是手机，还是平板，再到笔记本， 笔记本的话如果想商用，轻度娱乐办公选华为确实是一个不错的选择</p></blockquote><p>下面是华为商城给出的在售机型，而且有的已经没货了emmmmm</p><p>我都打开看了一下，要么是屏幕大小不合适，要么就是配置不合适~ 其实单看显卡 配置都不太合适emmmm</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160909883.jpg"></p><p>当然，如果看了以上内容还是想要买华为，就对华为有偏爱的话，也不是不可以 哈哈哈 只是个人觉得华为不是很好的选择  客服也说了，用pr ps 也可以勉强…</p><h1 id="推荐联想轻薄本"><a href="#推荐联想轻薄本" class="headerlink" title="推荐联想轻薄本"></a>推荐联想轻薄本</h1><p>常见品牌：</p><ul><li>联想：很多年的老牌子 售后服务贼方便~ 游戏本和轻薄本都挺好的 我买电脑的时候 游戏本y7000p和轻薄本联想小新13pro都是很棒的~ 售后网点比较全</li><li>华硕：很多年的老牌子  游戏本比较牛，比如败家之眼，比如去年比较火的 性价比贼棒的 天选姬 当然它家也有轻薄本 比如a豆系列 但我看了一下a豆专区，大概也就3-6千价位，配置不太够用</li><li>华为：华为已经说过啦，就不过多说明了~</li><li>戴尔：很多年的老牌子  个人觉得，这个牌子的电脑笔记本多少有点偏贵了~ 我哥用过一台~ 本人没体验过，不是很看好，它有点苹果的感觉~  比如外星人电脑~ 很贵~ 配置相比同价位有点小拉跨~ 适合土豪哈哈哈</li><li>宏基：没接触过emmmm 不多说 也是挺多年了~</li><li>惠普：没接触过emmmm 不多说 也是挺多年了~</li><li>小米、红米：专心搞你的手机吧~ 弄什么电脑， 术业有专攻~ 不想多说emmmmmm   懂得都懂~</li><li>机械革命、神舟等一些小众品牌：个人不推荐~ 如果没点技术 别买这种，售后太差了，服务网点太少~ 而且据说虽然写的配置比较强 外表看上去很不错，但据说配置实际被压榨了~</li></ul><p><strong>结合以上介绍，我主推联想轻薄本~</strong></p><h2 id="1-首先说一下性价比的问题"><a href="#1-首先说一下性价比的问题" class="headerlink" title="1.首先说一下性价比的问题"></a><strong>1.首先说一下性价比的问题</strong></h2><ul><li><p>我想说的是，我首先关心的是能不能流畅运行Pr，没在乎性价比，说实话，如果只看性价比，我推荐游戏本，游戏本一般性价比比较高，轻薄本和商务本所谓的性价比，基本上都是噱头吧~</p></li><li><p>你想啊，轻薄本为了轻薄~ 性价比方面自然是不如笨重的游戏本啦~ 不过也是相对的，在轻薄本里面排性价比的话，有更好的选择，比如联想小新air 14 这款机子 AMD系列 性价比在轻薄本里而言就很不错哦~ 加个也就4000-6000吧~  好是好，但不适合你~ 哈哈哈 就挺难受~</p></li></ul><h2 id="2-接着我们来谈一谈为什么不推荐你买游戏本"><a href="#2-接着我们来谈一谈为什么不推荐你买游戏本" class="headerlink" title="2.接着我们来谈一谈为什么不推荐你买游戏本"></a><strong>2.接着我们来谈一谈为什么不推荐你买游戏本</strong></h2><ul><li>游戏本性价比较高没错，但真的很很很不方便。。。。</li><li> 首先它要一直插着电源才行，没插电源的游戏本，性能真的超级鸡肋，甚至是比不上轻薄本… </li><li>而且太重了！！！ 真的太重了！！！ 你要是喜欢去教室学习带着笔记本的话，真的不建议买！ 背着个那么重的电脑来回跑，女孩子，我一个男的我都不想背了！ 每次都得拿着电源，换教室都很不方便！</li><li>我真的后悔买游戏本，因为我根本不玩游戏，当然，买游戏本不一定为了打游戏，有些人不打游戏，为了能够流畅运行一些大型软件的话也会选游戏本，</li><li>因为之前的轻薄本 配置比较鸡肋，无法满足~ 但现在不一样啦~ 时代在发展 社会在进步，计算机也是嘛~</li></ul><h2 id="3-为什么推荐联想？"><a href="#3-为什么推荐联想？" class="headerlink" title="3.为什么推荐联想？"></a><strong>3.为什么推荐联想？</strong></h2><ul><li><p>联想真的是老牌子了！ 太老了 虽然之前它的一些行为不太对…（联想高通投票事件）但有一说一 它家的电脑确实很不错</p></li><li><p>我家第一台电脑我上小学三年级买的，现在还能正常开机，这些年基本没怎么坏过</p></li><li><p>坏过两次还是因为长时间没用，放在了比较潮湿的地方，里面的某个部件放坏了emmmmm 没错就是放坏了   </p></li><li><p>另一次更离谱….  另一次我冒着打雷下雨的天气，玩游戏，电源被雷劈了，你没听错，我以前也不信雷真的会劈电脑！！！！ 呜呜… 当时给我吓坏了都….</p></li><li><p>总之，联想真的很不错，售后也贼方便，不推荐一些小厂家，比如机械革命 售后老麻烦了，得跑老远，贼慢…  而联想也算是随处可见了吧~  家喻户晓真的不为过哦~ 很多很多年啦~</p></li><li><p>还有一些品牌…小米，红米等等… 其实包括也华为（不过，我有的朋友买的华为，体验还是挺不错滴，我对它的好感也就上来啦<del>），他们的笔记本我个人是不怎么看好滴，因为，个人感觉还是太年轻了emmmmm 毕竟术业有专攻，就好好搞你们的手机吧</del></p></li></ul><h1 id="本次推荐大纲（联想4000-10000价位）"><a href="#本次推荐大纲（联想4000-10000价位）" class="headerlink" title="本次推荐大纲（联想4000-10000价位）:"></a>本次推荐大纲（联想4000-10000价位）:</h1><ul><li><p>小新Air14 锐龙版（性价比高） ：它分为锐龙版和酷睿版~ 为什么推荐锐龙版 因为性价比高~ 如果选择这个机子 一般就是考虑到性价比啦~</p></li><li><p>联想小新Air14Plus 锐龙版：同上，贵了几百块，花钱升级了分辨率和显卡等.. 但不止这些  具体见下文或者官方网站</p></li><li><p>YOGA 14s 锐龙版：我哥买的这款，体验感挺不错的~ 高刷高分辨率~ 显卡同上款~ 各方面都有所加强~ 当然价格也是emmmm</p></li><li><p>YOGA 14s 酷睿版：性价比不如锐龙版，但考虑到锐龙版没货了~  相比上一款而言，相当于花钱升级了处理器~ 但上个处理器我觉得已经够用啦~ 其他基本没变</p></li><li><p>Y9000X ：是Y9000p的轻薄款，如果你能接受15.6的屏的话 还是很不错的 别说剪视频了 打3A大作都是妥妥的~ 因为它本身就是游戏本的配置，只不过为了轻便，便携，定位到了轻薄本的系列里</p></li></ul><h2 id="小新Air14-2021锐龙版14英寸"><a href="#小新Air14-2021锐龙版14英寸" class="headerlink" title="小新Air14 2021锐龙版14英寸"></a>小新Air14 2021锐龙版14英寸</h2><p>官方售价：4799元</p><p>官方自营链接：<a href="https://item.lenovo.com.cn/product/1012601.html">https://item.lenovo.com.cn/product/1012601.html</a></p><p>优点：性价比贼高~  在4-5千这个价位性价比之王~ 挺火爆的~ 好评也多  日常娱乐，学习够用了~</p><p>缺点：集成显卡，剪辑视频可能有点困难，因为没有亲自测试过，只是更具Pr和剪映给的官方推荐配置推测滴</p><p><img src="https://p3.lefile.cn/product/adminweb/2021/03/12/tZQSKSgYrfMRHz9wPN0FwLuUE-6448.w520.jpg" alt="img"></p><p>卖点图：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160935343.png"></p><h2 id="小新-Air-14Plus-2021锐龙版-14-0英寸"><a href="#小新-Air-14Plus-2021锐龙版-14-0英寸" class="headerlink" title="小新 Air 14Plus 2021锐龙版 14.0英寸"></a>小新 Air 14Plus 2021锐龙版 14.0英寸</h2><p>官网价： 5499元            </p><p>官方自营链接：<a href="https://item.lenovo.com.cn/product/1013874.html">https://item.lenovo.com.cn/product/1013874.html</a></p><p>优点：性价比贼高，相比air14 它多了独立显卡，能够支持pr和剪映的最低配置要求~ 学习日常更是不用说啦~</p><p>缺点：不能够流畅的运行剪影等大型软件，毕竟显卡只是MX450 2G  不过这个显卡在轻薄本里已经很强了！</p><p><img src="https://p4.lefile.cn/product/adminweb/2021/04/22/hGkaPkuAxeqCxjyeghJFTY5aS-5356.w520.jpg" alt="img"></p><p>卖点图：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160937659.png"></p><h2 id="2021款-小新-Pro-16-锐龙版16-0英寸"><a href="#2021款-小新-Pro-16-锐龙版16-0英寸" class="headerlink" title="2021款 小新 Pro 16 锐龙版16.0英寸"></a>2021款 小新 Pro 16 锐龙版16.0英寸</h2><p>官方报价：7499元</p><p>官方自营链接：<a href="https://item.lenovo.com.cn/product/1014557.html">https://item.lenovo.com.cn/product/1014557.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160945109.png"></p><ul><li><p>最近有了解联想品牌的可能都知道~  联想小新系列  一直都很火爆！！！ 网上的评论一直都挺好的~ 说好评如潮也不为过  </p></li><li><p>不论是刚开始的小新Pro 13 我们这一届的当时不少女孩子买~ 还是再到今年的 小新 Air 14  性价比真不错  还是小新Pro15  乃至最新的小新Pro 16  小新Pro16真的是刷新了我的认知，</p></li><li><p>配置已经上到了入门游戏本的级别了~  你要知道 搁以前轻薄本能配 RTX1650 RTX3050  这可是不敢想的哈~</p></li><li><p> 联想小新搭配了两款显卡~ 一个是RTX3050 另一个款是RTX1650  相比之下，RTX3050更好些 价格也是比RTX1650 贵了400块~ 目前这台电脑在淘宝是没货的，但在联想官方是有货滴，自营哦！ 放心 可以信赖滴~</p></li><li><p>处理器搭载的是AMD5800H  我自己的游戏本是4800H~ AMD性价比真的挺棒的，由此看来，Pro 16 也是有性价比滴哦~  而且这款机子之前需要抢的呢~ 挺火的</p></li></ul><p>120Hz高刷  一般的轻薄本都是搭载60Hz刷新率~ </p><p>100% sRGB高色域，这个其实一般人感受不出来区别的~ </p><p>75Wh 大容量电池，支持PD快充， 这个就很棒，意味着你可以买一个手机充电器大小的充电器~ 更便携啦~</p><p>人脸识别~</p><p>双扬声器，杜比音效~</p><p>独立小键盘，独立小键盘真的挺重要的，如果经常敲数字的话 会很方便的</p><p>支持Typec接口哦~ 有两个呢 不够的话可以外接扩展的~</p><p>2560x1600高分辨率 我的游戏本才1920x1080emmmm</p><p>更多我就不解释啦~  看官方给的图吧~</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160942233.png"></p><p>详细去官网看看介绍吧~ <a href="https://item.lenovo.com.cn/product/1014557.html">点击前往✈</a></p><p> 缺点的话：如果你觉得16英寸有点大的话，那就算是缺点吧 哈哈哈 不过追剧看视频 看网课 2.5K的屏 真的不要太爽哦 可能就是太大了 拿着有点不那么方便~ 其实也还好啦  也就比我的15.6的大一点点而已啦~</p><h2 id="YOGA-14s-锐龙版2021款-14-0英寸【目前没货】"><a href="#YOGA-14s-锐龙版2021款-14-0英寸【目前没货】" class="headerlink" title="YOGA 14s 锐龙版2021款 14.0英寸【目前没货】"></a>YOGA 14s 锐龙版2021款 14.0英寸【目前没货】</h2><p>官方价：6699</p><p>官方自营链接：<a href="https://item.lenovo.com.cn/product/1016822.html">https://item.lenovo.com.cn/product/1016822.html</a></p><p>优点：处理器升级成了R7 5800HS 2.8k高分辨率屏幕~ 看电视剧爽 90Hz高刷新率~ 加入杜比音效 学习追剧更快乐~</p><p><img src="https://p3.lefile.cn/product/adminweb/2021/07/28/fl6Y82XFjWQ8YVdjG8FFvbRLt-3471.w520.jpg" alt="img"></p><p>卖点图：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160943549.png"></p><h2 id="YOGA-14s-2021款英特尔酷睿i7-14-0英寸"><a href="#YOGA-14s-2021款英特尔酷睿i7-14-0英寸" class="headerlink" title="YOGA 14s 2021款英特尔酷睿i7 14.0英寸"></a>YOGA 14s 2021款英特尔酷睿i7 14.0英寸</h2><p>官方价：7999</p><p>官方自营链接：<a href="https://item.lenovo.com.cn/product/1014612.html">https://item.lenovo.com.cn/product/1014612.html</a></p><p>优点：相比上一款而言，相当于花钱升级了处理器~ 但上个处理器我觉得已经够用啦~ 其他基本没变</p><p><img src="https://p2.lefile.cn/product/adminweb/2021/06/29/E2h4nt8OLXdMAJO7qGPJ2TNjt-3241.w520.jpg" alt="img"></p><p>卖点图：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160944641.png"></p><h2 id="拯救者Y9000X-2021英特尔酷睿i7-15-6英寸【目前没货】"><a href="#拯救者Y9000X-2021英特尔酷睿i7-15-6英寸【目前没货】" class="headerlink" title="拯救者Y9000X 2021英特尔酷睿i7 15.6英寸【目前没货】"></a>拯救者Y9000X 2021英特尔酷睿i7 15.6英寸【目前没货】</h2><p>官方报价：9399</p><p>官方自营链接：<a href="https://item.lenovo.com.cn/product/1011221.html">https://item.lenovo.com.cn/product/1011221.html</a></p><p>优点：超轻薄游戏本~ 具备游戏本的配置~  重量1.86kg~  就是15.6的屏幕不知道能不能接受~  </p><p>缺点：分辨率不够高 跟我的一样 可能游戏本的分辨率都这样吧~  1920x1080 其实也很不错了~ 游戏本标配吧~</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160945249.png"></p><p>卖点图：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109160946798.png"></p><h1 id="清单总结"><a href="#清单总结" class="headerlink" title="清单总结"></a>清单总结</h1><ul><li>如果想买<strong>4000-6000</strong>价位的  <strong>14英寸</strong>选air14 air14plus <strong>15.6英寸</strong>可以选air15（没写在里面，不过也挺好）</li><li>如果想买<strong>6000-8000</strong>价位的   <strong>14英寸</strong>选YOGA 14s 锐龙版（没货）YOGA 14s酷睿版（英特尔处理器） <strong>16英寸</strong>可以选<strong>16 Pro</strong></li><li>如果想买<strong>8000-9000</strong>价位的   <strong>15.6英寸</strong>选拯救者Y9000X 官方没看到锐龙版~ 应该只有酷睿版（英特尔处理器）~</li></ul>]]></content>
      
      
      <categories>
          
          <category> 轻薄本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 联想 </tag>
            
            <tag> 轻薄本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Emmet语法快速提升web开发效率！【web必备技能】</title>
      <link href="/2021/09/15/Emmet%E8%AF%AD%E6%B3%95%E5%BF%AB%E9%80%9F%E6%8F%90%E5%8D%87web%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%EF%BC%81%E3%80%90web%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD%E3%80%91/"/>
      <url>/2021/09/15/Emmet%E8%AF%AD%E6%B3%95%E5%BF%AB%E9%80%9F%E6%8F%90%E5%8D%87web%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%EF%BC%81%E3%80%90web%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p>Emmet语法大纲：</p><ul><li>快速生成HTML结构语法</li><li>快速生成CSS样式语法</li><li>快速格式化代码</li></ul><span id="more"></span><h1 id="1-快速生成HTML结构语法"><a href="#1-快速生成HTML结构语法" class="headerlink" title="1.快速生成HTML结构语法"></a>1.快速生成HTML结构语法</h1><ol><li>生成标签 直接输入标签名 按tab键即可 比如 div 然后tab 键， 就可以生成 <code>&lt;div&gt;&lt;/div&gt;</code></li><li>如果想要生成多个相同标签 加上 * 就可以了 比如 div*3 就可以快速生成3个div</li><li>如果有父子级关系的标签，可以用 &gt; 比如 ul &gt; li就可以了</li><li>如果有兄弟关系的标签，用 + 就可以了 比如 div+p</li><li>如果生成带有类名或者id名字的， 直接写 .demo 或者 #two tab 键就可以了</li><li>如果生成的div 类名是有顺序的， 可以用自增符号$</li><li>如果想要在生成的标签内部写内容可以用 { } 表示</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 生成标签 直接输入标签名 按tab键即可 比如 div 然后tab 键， 就可以生成 &lt;div&gt;&lt;/div&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 如果想要生成多个相同标签 加上 * 就可以了 比如 div*3 按tab键就可以快速生成3个div --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 如果有父子级关系的标签，可以用 &gt; 比如 ul &gt; li就可以了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 如果有兄弟关系的标签，用 + 就可以了 比如 div+p --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- 生成带有类名如 直接写 .demo按tab 键就可以了 默认标签是div 如果想是别的标签就在.demo前面加上标签名，如span.demo --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!-- 生成带有id名字的标签 默认是div 如果想是别的标签，就在.demo前面加上标签名即可，如span#demo --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!-- 如果生成的div 类名是有顺序的， 可以用 自增符号 $ 如.demo$*5  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!-- 我们想生成的标签里面默认显示几个文字  div&#123;文字&#125;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>pink老师不是gay<span class="tag">&lt;/<span class="name">div</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我不喜欢男人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- div&#123;$&#125;*5 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="2-快速生成CSS样式语法"><a href="#2-快速生成CSS样式语法" class="headerlink" title="2.快速生成CSS样式语法"></a>2.快速生成CSS样式语法</h1><p><strong>CSS 基本采取简写形式即可</strong></p><p>1.比如 w200 按tab 可以 生成 width: 200px;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* w200 按tab 可以 生成 width: 200px */</span></span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.比如 lh26px 按tab 可以生成 line-height: 26px;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* lh26px 按tab 可以生成 line-height: 26px */</span></span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">26</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.其他同理… 这里不做演示啦~</p><h1 id="3-快速格式化代码"><a href="#3-快速格式化代码" class="headerlink" title="3.快速格式化代码"></a>3.快速格式化代码</h1><p>这里使用的方法是安装自动格式化插件~ 当然有别的方法，个人觉得此方法最棒！其他方法还请自行百度吧~</p><p><strong>插件名称: JS-CSS-HTML Formatter</strong></p><p>下面以汉化插件为例来演示安装方法</p><ul><li><p>点击左侧《扩展》图标，在搜索框输入需要安装的插件名称chinese，点击安装进行安装即可。安装完毕，需要重启软件使插件生效。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304097.jpg" alt="点击左侧《扩展》图标，在搜索框输入需要安装的插件名称chinese"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304098.jpg" alt="点击安装进行安装即可。安装完毕，需要重启软件使插件生效。"></p></li><li><p>JS-CSS-HTML-formatter 插件安装方法同理，很简单，就不一一演示了</p></li></ul><p><strong>插件管理：禁用、启用或卸载已安装的插件</strong></p><p>在扩展界面，点击已安装，点击对应插件的设置，根据需求选择启用、禁用和卸载即可。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Emmet语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动web开发学习第二天笔记【持续更新】</title>
      <link href="/2021/09/14/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/"/>
      <url>/2021/09/14/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p> <strong>第二天学习大纲：</strong></p><ul><li>flex 布局体验</li><li>flex 布局原理</li><li>flex 布局父项常见属性</li><li>flex 布局子项常见属性</li><li>携程网首页案例制作</li></ul><h1 id="1-flex布局体验"><a href="#1-flex布局体验" class="headerlink" title="1.flex布局体验"></a>1.flex布局体验</h1><h2 id="1-1传统布局与flex布局"><a href="#1-1传统布局与flex布局" class="headerlink" title="1.1传统布局与flex布局"></a>1.1传统布局与flex布局</h2><p><strong>传统布局</strong></p><ul><li>兼容性好</li><li>布局繁琐</li><li>局限性，不能再移动端很好的布局</li></ul><p><strong>flex 弹性布局</strong></p><ul><li>操作方便，布局极为简单，移动端应用很广泛</li><li>PC 端浏览器支持情况较差</li><li>IE 11 或更低版本，不支持或仅部分支持</li></ul><p>建议：</p><ol><li>如果是PC端页面布局，我们还是传统布局。</li><li>如果是移动端或者不考虑兼容性问题的PC端页面布局，我们还是使用flex弹性布局</li></ol><h2 id="1-2初体验"><a href="#1-2初体验" class="headerlink" title="1.2初体验"></a>1.2初体验</h2><p><strong>1.搭建HTML结构</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span>&gt;<span class="number">1</span>&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span>&gt;<span class="number">2</span>&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span>&gt;<span class="number">3</span>&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>里面的3个span是行内元素</li></ul><p><strong>2.CSS样式</strong></p><p>①  span 直接给宽度和高度，背景颜色，还有蓝色边框</p><p>②  给 div 只需要添加 “display: flex” 即可</p><p>效果图：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142046720.png"></p><h1 id="2-flex布局原理"><a href="#2-flex布局原理" class="headerlink" title="2.flex布局原理"></a>2.flex布局原理</h1><h2 id="2-1布局原理"><a href="#2-1布局原理" class="headerlink" title="2.1布局原理"></a>2.1布局原理</h2><blockquote><p>flex 是 flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为 flex 布局。</p></blockquote><ul><li>当我们为父盒子设为 flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效。</li><li>伸缩布局 = 弹性布局 = 伸缩盒 = 布局 = 弹性盒布局 = flex布局</li></ul><p>采用 Flex 布局的元素，称为 Flex 容器（ flex container ），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（ flex item ），简称”项目”。</p><ul><li>体验中 div 就是 flex 父容器 。</li><li>体验中 span 就是 子容器 flex 项目</li><li>子容器可以横向排列也可以纵向排列</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142058200.png"></p><p><strong>总结flex布局原理：</strong></p><p>就是通过给父盒子添加flex属性，来控制子盒子的位置和排列方式。</p><h1 id="3-flex布局父项常见属性"><a href="#3-flex布局父项常见属性" class="headerlink" title="3.flex布局父项常见属性"></a>3.flex布局父项常见属性</h1><h2 id="3-1常见父项属性"><a href="#3-1常见父项属性" class="headerlink" title="3.1常见父项属性"></a>3.1常见父项属性</h2><p>以下由6 个属性是对父元素设置的</p><ul><li>flex-direction：设置主轴的方向</li><li>justify-content：设置主轴上的子元素排列方式</li><li>flex-wrap：设置子元素是否换行</li><li>align-content：设置侧轴上的子元素的排列方式（多行）</li><li>align-items：设置侧轴上的子元素排列方式（单行）</li><li>flex-flow：复合属性，相当于同时设置了 flex-direction 和 flex-wrap</li></ul><h2 id="3-2-flex-direction-设置主轴的方向-★"><a href="#3-2-flex-direction-设置主轴的方向-★" class="headerlink" title="3.2 flex-direction 设置主轴的方向 ★"></a>3.2 flex-direction 设置主轴的方向 ★</h2><p><strong>1.主轴与侧轴</strong></p><p>在 flex 布局中，是分为主轴和侧轴两个方向，同样的叫法：行和列、x 轴和y 轴。</p><ul><li>默认主轴的方向就是 x 轴方向，水平向右</li><li>默认侧轴方向就是 y 轴方向，水平向下</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142104779.png"></p><p><strong>2.属性值</strong></p><p>flex-direction 属性决定主轴的方向（即项目的排列方向）</p><p>注意：主轴和侧轴是会变化的，就看 flex-direction 设置谁为主轴，剩下的就是侧轴。而我们的子元素是跟着主轴来排列的</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td><strong>row</strong></td><td><strong>默认值从左到右</strong></td></tr><tr><td>row-reverse</td><td>从右到左</td></tr><tr><td><strong>column</strong></td><td><strong>从上到下</strong></td></tr><tr><td>column-reverse</td><td>从下到上</td></tr></tbody></table><h2 id="3-3justify-content-设置主轴上的子元素排列方式-★"><a href="#3-3justify-content-设置主轴上的子元素排列方式-★" class="headerlink" title="3.3justify-content 设置主轴上的子元素排列方式 ★"></a>3.3justify-content 设置主轴上的子元素排列方式 ★</h2><p>justify-content 属性定义了项目在主轴上的对齐方式</p><p><strong>注意：使用这个属性之前一定要确定好主轴是哪个</strong></p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td><strong>flex-start</strong></td><td><strong>默认值  从头部开始  如果主轴是x轴，则从左到右</strong></td></tr><tr><td>flex-end</td><td>从尾部开始排列</td></tr><tr><td><strong>center</strong></td><td><strong>在主轴居中对齐（如果主轴是x轴则 水平居中）</strong></td></tr><tr><td><strong>space-around</strong></td><td><strong>平分剩余空间</strong></td></tr><tr><td><strong>space-between</strong></td><td><strong>先两边贴边  再平分剩余空间（重要）</strong></td></tr></tbody></table><h2 id="3-4flex-wrap-设置子元素是否换行-★"><a href="#3-4flex-wrap-设置子元素是否换行-★" class="headerlink" title="3.4flex-wrap 设置子元素是否换行 ★"></a>3.4flex-wrap 设置子元素是否换行 ★</h2><p>默认情况下，项目都排列在一条线（又称”轴线”）上。flex-wrap属性定义，flex布局中默认是不换行的。</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>nowrap</td><td>默认值，不换行</td></tr><tr><td><strong>wrap</strong></td><td><strong>换行</strong></td></tr></tbody></table><h2 id="3-5align-items-设置侧轴上的子元素排列方式（单行）★"><a href="#3-5align-items-设置侧轴上的子元素排列方式（单行）★" class="headerlink" title="3.5align-items 设置侧轴上的子元素排列方式（单行）★"></a>3.5align-items 设置侧轴上的子元素排列方式（单行）★</h2><p>该属性是控制子项在侧轴（默认是y轴）上的排列方式  在子项为单项（单行）的时候使用</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td><strong>flex-start</strong></td><td><strong>默认值  从上到下</strong></td></tr><tr><td>flex-end</td><td>从下到上</td></tr><tr><td><strong>center</strong></td><td><strong>挤在一起居中（垂直居中）</strong></td></tr><tr><td><strong>stretch</strong></td><td><strong>拉伸</strong></td></tr></tbody></table><h2 id="3-6align-content-设置侧轴上的子元素的排列方式（多行）"><a href="#3-6align-content-设置侧轴上的子元素的排列方式（多行）" class="headerlink" title="3.6align-content 设置侧轴上的子元素的排列方式（多行）"></a>3.6align-content 设置侧轴上的子元素的排列方式（多行）</h2><p>设置子项在侧轴上的排列方式  并且只能用于子项出现 <strong>换行</strong> 的情况（多行），在单行下是没有效果的。</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值在侧轴的头部开始排列</td></tr><tr><td>flex-end</td><td>在侧轴的尾部开始排列</td></tr><tr><td>center</td><td>在侧轴中间显示</td></tr><tr><td>space-around</td><td>子项在侧轴平分剩余空间</td></tr><tr><td>space-between</td><td>子项在侧轴先分布在两头，再平分剩余空间</td></tr><tr><td>stretch</td><td>设置子项元素高度平分父元素高度</td></tr></tbody></table><h2 id="3-7align-content-和-align-items-区别"><a href="#3-7align-content-和-align-items-区别" class="headerlink" title="3.7align-content 和 align-items 区别"></a>3.7align-content 和 align-items 区别</h2><ul><li>align-items 适用于单行情况下，只有上对齐、下对齐、居中和拉伸</li><li>align-content 适用于换行（多行）的情况下（单行情况无效），可以设置 上对齐、下对齐、居中、拉伸以及平均分配剩余空间等属性值。</li><li>总结就是单行找 align-items 多行找 align-content</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142122254.png"></p><h2 id="3-8flex-flow"><a href="#3-8flex-flow" class="headerlink" title="3.8flex-flow"></a>3.8flex-flow</h2><p>flex-flow 属性是 flex-direction 和 flex-wrap 属性的复合属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-flow</span>: row wrap;</span><br></pre></td></tr></table></figure><ul><li>flex-diretion：设置主轴的方向</li><li>justify-content：设置主轴上的子元素排列方式</li><li>flex-wrap：设置子元素是否换行</li><li>align-content：设置侧轴上的子元素排列方式（多行）</li><li>align-items：设置侧轴上子的子元素排列方式（单行）</li><li>flex-flow：复合属性，相当于同时设置了 flex-dretion 和 flex-wrap</li></ul><h1 id="4-flex布局子项常见属性"><a href="#4-flex布局子项常见属性" class="headerlink" title="4.flex布局子项常见属性"></a>4.flex布局子项常见属性</h1><ul><li>flex 子项目占的份数</li><li>align-self 控制子项自己在侧轴的排列方式</li><li>order属性定义子项的排列方式（前后顺序）</li></ul><h2 id="4-1flex属性-★"><a href="#4-1flex属性-★" class="headerlink" title="4.1flex属性 ★"></a>4.1flex属性 ★</h2><p>flex属性定义子项目分配剩余空间，用flex来表示占多少<strong>份数</strong>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.itme</span> &#123;    </span><br><span class="line"><span class="attribute">flex</span>: &lt;number&gt;; <span class="comment">/* default 0 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-2align-self-控制子项自己在侧轴山的排列方式"><a href="#4-2align-self-控制子项自己在侧轴山的排列方式" class="headerlink" title="4.2align-self 控制子项自己在侧轴山的排列方式"></a>4.2align-self 控制子项自己在侧轴山的排列方式</h2><p>align-self 属性允许单个项目与其他项目不一样的对齐方式，可覆盖 align-items 属性。</p><p>默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line"><span class="comment">/* 设置自己在侧轴上的排列方式 */</span></span><br><span class="line"><span class="attribute">align-self</span>: flex end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3order属性定义项目的排列顺序"><a href="#4-3order属性定义项目的排列顺序" class="headerlink" title="4.3order属性定义项目的排列顺序"></a>4.3order属性定义项目的排列顺序</h2><p>数值越小，排列越靠前，默认为0。</p><p>注意：和 z-index 不一样。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line"><span class="attribute">order</span>: &lt;number&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-携程网首页案例制作"><a href="#5-携程网首页案例制作" class="headerlink" title="5.携程网首页案例制作"></a>5.携程网首页案例制作</h1><h2 id="案例：携程网移动端首页"><a href="#案例：携程网移动端首页" class="headerlink" title="案例：携程网移动端首页"></a>案例：携程网移动端首页</h2><p>访问地址：m.ctrip.com</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142135731.jpg"></p><h3 id="1-技术选型"><a href="#1-技术选型" class="headerlink" title="1.技术选型"></a>1.技术选型</h3><p>方案：我们采取单独制作移动页面方案<br>技术：布局采取flex布局</p><h3 id="2-搭建相关文件夹结构"><a href="#2-搭建相关文件夹结构" class="headerlink" title="2.搭建相关文件夹结构"></a>2.搭建相关文件夹结构</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142136509.jpg"></p><h3 id="3-设置视口标签以及引入初始化样式"><a href="#3-设置视口标签以及引入初始化样式" class="headerlink" title="3.设置视口标签以及引入初始化样式"></a>3.设置视口标签以及引入初始化样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/normalize.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/index.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-常用初始化样式"><a href="#4-常用初始化样式" class="headerlink" title="4.常用初始化样式"></a>4.常用初始化样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">540px</span>;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">320px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">font</span>: normal <span class="number">14px</span>/<span class="number">1.5</span> Tahoma,<span class="string">&quot;Lucida Grande&quot;</span>,Verdana,<span class="string">&quot;Microsoft Yahei STXihei,hei</span></span><br><span class="line"><span class="string">    color: #000;</span></span><br><span class="line"><span class="string">    background: #f2f2f2;</span></span><br><span class="line"><span class="string">    overflow-x: hidden;</span></span><br><span class="line"><span class="string">    -webkit-tap-highlight-color: transparent;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5-常见模块命名"><a href="#5-常见模块命名" class="headerlink" title="5.常见模块命名"></a>5.常见模块命名</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142142522.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142142747.jpg"></p><h3 id="6-常见-flex-布局思路"><a href="#6-常见-flex-布局思路" class="headerlink" title="6.常见 flex 布局思路"></a>6.常见 flex 布局思路</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142143452.png"></p><h3 id="7-背景线性渐变"><a href="#7-背景线性渐变" class="headerlink" title="7.背景线性渐变"></a>7.背景线性渐变</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142143034.jpg"></p><p><strong>语法1：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">linear-gradient</span>( 起始方向 颜色 <span class="number">1</span>, 颜色 <span class="number">2</span>, ...);</span><br><span class="line"><span class="attribute">background</span>: -webkit linear <span class="built_in">gradient</span>(left, red , blue);</span><br><span class="line"><span class="attribute">background</span>: -webkit linear <span class="built_in">gradient</span>(left top, red , blue);</span><br></pre></td></tr></table></figure><p>背景渐变必须添加浏览器私有前缀</p><p>起始方向可以是：方位名词 或者 度数 如果省略默认就是 top</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
            <tag> css </tag>
            
            <tag> 移动web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动web开发学习第一天笔记【持续更新】</title>
      <link href="/2021/09/14/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/"/>
      <url>/2021/09/14/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>第一天学习大纲：</strong></p><ul><li>移动端基础</li><li>视口</li><li>二倍图</li><li>移动端调试</li><li>移动端技术解决方案</li><li>移动端常见布局</li><li>移动端开发之流式布局</li></ul><span id="more"></span><h1 id="1-移动端基础"><a href="#1-移动端基础" class="headerlink" title="1. 移动端基础"></a>1. 移动端基础</h1><h2 id="1-1浏览器现状"><a href="#1-1浏览器现状" class="headerlink" title="1.1浏览器现状"></a>1.1浏览器现状</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141929297.jpg"></p><p>国内的UC和QQ，百度等手机浏览器都是根据Webkit修改过来的内核，国内尚无自主研发的内核，就像国内的手机操作系统都是基于Android修改开发的一样。</p><p><strong>总结：兼容移动端主流浏览器，处理Webkit内核浏览器即可。</strong></p><h2 id="1-2-手机屏幕的现状"><a href="#1-2-手机屏幕的现状" class="headerlink" title="1.2 手机屏幕的现状"></a>1.2 手机屏幕的现状</h2><ul><li>移动端设备屏幕尺寸非常多，碎片化严重。</li><li>Android设备有多种分辨率：480x800, 480x854, 540x960, 720x1280，1080x1920等，还有传说中的2K，4k屏。</li><li>近年来iPhone的碎片化也加剧了，其设备的主要分辨率有：640x960, 640x1136, 750x1334, 1242x2208等。</li><li>作为开发者无需关注这些分辨率，因为我们常用的尺寸单位是 px 。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141929298.png"></p><h2 id="1-3常见移动端屏幕尺寸"><a href="#1-3常见移动端屏幕尺寸" class="headerlink" title="1.3常见移动端屏幕尺寸"></a>1.3常见移动端屏幕尺寸</h2><table><thead><tr><th>设备</th><th>尺寸（英寸）</th><th>开发尺寸（px）</th><th>物理像素比（dpr）</th></tr></thead><tbody><tr><td>iPhone3G</td><td>3.5</td><td>320*480</td><td>1.0</td></tr><tr><td>iPhone4/4s</td><td>3.5</td><td>320*480</td><td>2.0</td></tr><tr><td>iPhone5/5s/5c</td><td>4.0</td><td>320*568</td><td>2.0</td></tr><tr><td>HTC One M8</td><td>4.5</td><td>360*640</td><td>3.0</td></tr><tr><td>iPhone6</td><td>4.7</td><td>375*667</td><td>2.0</td></tr><tr><td>Nexus 4</td><td>4.7</td><td>384*640</td><td>2.0</td></tr><tr><td>Nexus 5x</td><td>5.2</td><td>411*731</td><td>2.6</td></tr><tr><td>iPhone6 Plus</td><td>5.5</td><td>414*736</td><td>3.0</td></tr><tr><td>Samsung Galaxy Note 4</td><td>5.7</td><td>480*853</td><td>3.0</td></tr><tr><td>Sony Xperia Z Ultra</td><td>6.4</td><td>540*960</td><td>2.0</td></tr><tr><td>Nexus 7(‘12)</td><td>7.0</td><td>600*960</td><td>1.3</td></tr><tr><td>iPad Mini</td><td>7.9</td><td>768*1024</td><td>1.0</td></tr></tbody></table><p>注：以上数据均参考自<a href="https://material.io/devices/%E3%80%82">https://material.io/devices/。</a></p><p>注：作为前端开发，不建议大家去纠结dp，dpi，pt，ppi等单位。</p><h2 id="1-4移动端调试方法"><a href="#1-4移动端调试方法" class="headerlink" title="1.4移动端调试方法"></a>1.4移动端调试方法</h2><ul><li>Chrome DevTools（谷歌浏览器）的模拟手机调试</li><li>搭建本地web服务器，手机和服务器一个局域网内，通过手机访问服务器</li><li>使用外网服务器，直接IP或域名访问</li></ul><h2 id="1-5总结"><a href="#1-5总结" class="headerlink" title="1.5总结"></a>1.5总结</h2><ul><li>移动端浏览器我们主要对webkit内核进行兼容</li><li>我们现在开发的移动端主要针对手机端开发</li><li>现在移动端碎片化比较严重，分辨率和屏幕尺寸大小不一</li><li>学会用谷歌浏览器模拟手机界面以及调试</li></ul><h1 id="2-0-视口"><a href="#2-0-视口" class="headerlink" title="2.0 视口"></a>2.0 视口</h1><p><strong>视口（viewport）</strong>就是浏览器显示页面内容的屏幕区域。 视口可以分为布局视口、视觉视口和理想视口</p><h2 id="2-1-布局视口-layout-viewport"><a href="#2-1-布局视口-layout-viewport" class="headerlink" title="2.1 布局视口 layout viewport"></a>2.1 布局视口 layout viewport</h2><ul><li><p>一般移动设备的浏览器都默认设置了一个布局视口，用于解决早期的PC端页面在手机上显示的问题。</p></li><li><p>iOS, Android基本都将这个视口分辨率设置为 980px，所以PC上的网页大多都能在手机上呈现，只不过元素看上去很小，一般默认可以通过手动缩放网页。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141929295.png"></p><h2 id="2-2视觉视口-visual-viewport"><a href="#2-2视觉视口-visual-viewport" class="headerlink" title="2.2视觉视口 visual viewport"></a>2.2视觉视口 visual viewport</h2><ul><li><p>字面意思，它是用户正在看到的网站的区域。<strong>注意：是网站的区域。</strong></p></li><li><p>我们可以通过缩放去操作视觉视口，但不会影响布局视口，布局视口仍保持原来的宽度。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141929811.png"></p><h2 id="2-3理想视口-ideal-viewport"><a href="#2-3理想视口-ideal-viewport" class="headerlink" title="2.3理想视口 ideal viewport"></a>2.3理想视口 ideal viewport</h2><ul><li><p>为了使网站在移动端有最理想的浏览和阅读宽度而设定</p></li><li><p>理想视口，对设备来讲，是最理想的视口尺寸</p></li><li><p>需要手动添写meta视口标签通知浏览器操作</p></li><li><p>meta视口标签的主要目的：布局视口的宽度应该与理想视口的宽度一致，简单理解就是设备有多宽，我们布局的视口就多宽</p></li></ul><h2 id="2-4总结"><a href="#2-4总结" class="headerlink" title="2.4总结"></a>2.4总结</h2><ul><li>视口就是浏览器显示页面内容的屏幕区域</li><li>视口分为布局视口、视觉视口和理想视口</li><li>我们移动端布局想要的是理想视口就是手机屏幕有多宽，我们的布局视口就有多宽</li><li>想要理想视口，我们需要给我们的移动端页面添加meta视口标签</li></ul><h2 id="2-5meta标签"><a href="#2-5meta标签" class="headerlink" title="2.5meta标签"></a>2.5meta标签</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, user-scalable=no, initial-scale=<span class="number">1.0</span>, maximum-scale=<span class="number">1.0</span>, minimum-scale=<span class="number">1.0</span>&quot;&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>解释说明</th></tr></thead><tbody><tr><td>width</td><td>宽度设置的是viewport宽度，可以设置device-width特殊值</td></tr><tr><td>initial-scale</td><td>初始缩放比，大于0的数字</td></tr><tr><td>maximum-scale</td><td>最大缩放比，大于0的数字</td></tr><tr><td>minimum-scale</td><td>最小缩放比，大于0的数字</td></tr><tr><td>user-scalable</td><td>用户是否可以缩放，yes或no（1或0）</td></tr></tbody></table><h2 id="2-6标准的viewport设置"><a href="#2-6标准的viewport设置" class="headerlink" title="2.6标准的viewport设置"></a>2.6标准的viewport设置</h2><ul><li>视口宽度和设备保持一致</li><li>视口的默认缩放比例1.0</li><li>不允许用户自行缩放</li><li>最大允许的缩放比例1.0</li><li>最小允许的缩放比例1.0</li></ul><h1 id="3-二倍图"><a href="#3-二倍图" class="headerlink" title="3.二倍图"></a>3.二倍图</h1><h2 id="3-1物理像素-amp-物理像素比"><a href="#3-1物理像素-amp-物理像素比" class="headerlink" title="3.1物理像素&amp;物理像素比"></a>3.1物理像素&amp;物理像素比</h2><ul><li><p>物理像素点指的是屏幕显示的最小颗粒，是物理真实存在的。这是厂商在出厂时就设置好了，比如苹果 6\7\8 是  750* 1334</p></li><li><p>我们开发时候的1px 不是一定等于1个物理像素的</p></li><li><p>PC端页面，1个px等于1个物理像素的，但是移动端就不尽相同</p></li><li><p>一个px的能显示的物理像素点的个数，称为物理像素比或屏幕像素比</p></li><li></li></ul><table><thead><tr><th>设备</th><th>尺寸（英寸）</th><th>开发尺寸（px）</th><th>物理像素比（dpr）</th></tr></thead><tbody><tr><td>iPhone3G</td><td>3.5</td><td>320*480</td><td>1.0</td></tr><tr><td>iPhone4/4s</td><td>3.5</td><td>320*480</td><td>2.0</td></tr><tr><td>iPhone5/5s/5c</td><td>4.0</td><td>320*568</td><td>2.0</td></tr><tr><td>HTC One M8</td><td>4.5</td><td>360*640</td><td>3.0</td></tr><tr><td>iPhone6</td><td>4.7</td><td>375*667</td><td>2.0</td></tr><tr><td>Nexus 4</td><td>4.7</td><td>384*640</td><td>2.0</td></tr><tr><td>Nexus 5x</td><td>5.2</td><td>411*731</td><td>2.6</td></tr><tr><td>iPhone6 Plus</td><td>5.5</td><td>414*736</td><td>3.0</td></tr><tr><td>Samsung Galaxy Note 4</td><td>5.7</td><td>480*853</td><td>3.0</td></tr><tr><td>Sony Xperia Z Ultra</td><td>6.4</td><td>540*960</td><td>2.0</td></tr><tr><td>Nexus 7(‘12)</td><td>7.0</td><td>600*960</td><td>1.3</td></tr><tr><td>iPad Mini</td><td>7.9</td><td>768*1024</td><td>1.0</td></tr></tbody></table><ul><li><p>如果把1张100*100的图片放到手机里面会按照物理像素比给我们缩放</p></li><li><p>Retina（视网膜屏幕）是一种显示技术，可以将把更多的物理像素点压缩至一块屏幕里，从而达到更高的分辨率，并提高屏幕显示的细腻程度。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141929299.png"></p><h2 id="3-2多倍图"><a href="#3-2多倍图" class="headerlink" title="3.2多倍图"></a>3.2多倍图</h2><ul><li><p>对于一张 50px * 50px 的图片,在手机或 Retina 屏中打开，按照刚才的物理像素比会放大倍数，这样会造成图片模糊</p></li><li><p>在标准的viewport设置中，使用倍图来提高图片质量，解决在高清设备中的模糊问题</p></li><li><p>通常使用二倍图， 因为iPhone 6\7\8 的影响，但是现在还存在3倍图4倍图的情况，这个看实际开发公司需求</p></li><li><p>背景图片 注意缩放问题</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 在 iPhone8 下面 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="comment">/* 原始图片100*100px */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="comment">/* 原始图片100*100px */</span></span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">50px</span> <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3背景缩放background-size"><a href="#3-3背景缩放background-size" class="headerlink" title="3.3背景缩放background-size"></a>3.3背景缩放background-size</h2><p>background-size 属性规定背景图像的尺寸</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-size: 背景图片宽度 背景图片高度;</span><br></pre></td></tr></table></figure><ul><li><p>单位： 长度 | 百分比 | cover | contain;</p></li><li><p>cover把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。</p></li><li><p>contain把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域</p></li></ul><h2 id="3-4多被图切图-cutterman"><a href="#3-4多被图切图-cutterman" class="headerlink" title="3.4多被图切图 cutterman"></a>3.4多被图切图 cutterman</h2><ul><li>@3X 3倍图</li><li>@2X 2倍图</li><li>@1X 1倍原图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141941445.png"></p><h1 id="4-移动开发选择"><a href="#4-移动开发选择" class="headerlink" title="4.移动开发选择"></a>4.移动开发选择</h1><h2 id="4-1移动端主流方案"><a href="#4-1移动端主流方案" class="headerlink" title="4.1移动端主流方案"></a>4.1移动端主流方案</h2><p>1.单独制作<strong>移动端</strong>页面（主流）</p><p>京东商城手机版</p><p>淘宝触屏版</p><p>苏宁易购手机版</p><p>…</p><p>2.<strong>响应式</strong>页面兼容移动端（其次）</p><p>三星手机官网</p><p>…</p><h2 id="4-2单独移动端页面（主流）"><a href="#4-2单独移动端页面（主流）" class="headerlink" title="4.2单独移动端页面（主流）"></a>4.2单独移动端页面（主流）</h2><p>通常情况下，网址域名前面加 <strong>m(mobile)<strong>可以打开移动端。通过判断设备，如果是移动设备打开，则跳到</strong>移动端页面</strong>。  </p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141947463.png"></p><p>也就是说，PC端和移动端为两套网站，pc端是pc断的样式，移动端在写一套，专门针对移动端适配的一套网站</p><p>京东pc端：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141954328.png"></p><p>京东移动端：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141954329.jpg"></p><h2 id="4-3响应式兼容PC移动端"><a href="#4-3响应式兼容PC移动端" class="headerlink" title="4.3响应式兼容PC移动端"></a>4.3响应式兼容PC移动端</h2><p>三星电子官网：<a href="http://www.samsung.com/cn/">www.samsung.com/cn/</a> ，通过判断屏幕宽度来改变样式，以适应不同终端。</p><p><strong>缺点</strong>：<strong>制作麻烦</strong>，需要花费很大精力去调整<strong>兼容性</strong>问题</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141954330.jpg"></p><p>响应式网站：即pc和移动端共用一套网站，只不过在不同屏幕下，样式会自动适配</p><h2 id="4-4总结"><a href="#4-4总结" class="headerlink" title="4.4总结"></a>4.4总结</h2><p>现在市场常见的移动端开发有 单独制作移动端页面 和 响应式页面 两种方案</p><p>现在市场主流的选择还是单独制作移动端页面</p><h1 id="5-移动端技术解决方案"><a href="#5-移动端技术解决方案" class="headerlink" title="5. 移动端技术解决方案"></a>5. 移动端技术解决方案</h1><h2 id="5-1移动端浏览器"><a href="#5-1移动端浏览器" class="headerlink" title="5.1移动端浏览器"></a>5.1移动端浏览器</h2><p>移动端浏览器基本以webkit内核为主，因此我们就考虑webkit兼容性问题。</p><p>我们可以放心使用 H5 标签和 CSS3 样式。</p><p>同时我们浏览器的私有前缀我们只需要考虑添加 webkit 即可</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109141953113.png"></p><h2 id="5-2CSS初始化-normalize-css"><a href="#5-2CSS初始化-normalize-css" class="headerlink" title="5.2CSS初始化 normalize.css"></a>5.2CSS初始化 normalize.css</h2><p>移动端 CSS 初始化推荐使用 normalize.css/</p><ul><li><p>Normalize.css：保护了有价值的默认值</p></li><li><p>Normalize.css：修复了浏览器的bug</p></li><li><p>Normalize.css：是模块化的</p></li><li><p>Normalize.css：拥有详细的文档</p></li></ul><p>官网地址： <a href="http://necolas.github.io/normalize.css/">http://necolas.github.io/normalize.css/</a></p><h2 id="5-3CSS3盒子模型-box-sizing"><a href="#5-3CSS3盒子模型-box-sizing" class="headerlink" title="5.3CSS3盒子模型 box-sizing"></a>5.3CSS3盒子模型 box-sizing</h2><ul><li><p>传统模式宽度计算：盒子的宽度 = CSS中设置的width + border + padding</p></li><li><p>CSS3盒子模型：       盒子的宽度 =  CSS中设置的宽度width 里面包含了 border 和 padding </p></li></ul><p>也就是说，我们的CSS3中的盒子模型， padding 和 border 不会撑大盒子了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*CSS3盒子模型*/</span></span><br><span class="line"><span class="attribute">box-sizing</span>: border-box;</span><br><span class="line"><span class="comment">/*传统盒子模型*/</span></span><br><span class="line"><span class="attribute">box-sizing</span>: content-box;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>传统 or CSS3盒子模型？</strong></p><ul><li><p>移动端可以全部CSS3 盒子模型</p></li><li><p>PC端如果完全需要兼容，我们就用传统模式，如果不考虑兼容性，我们就选择 CSS3 盒子模型</p></li></ul><h2 id="5-4特殊样式"><a href="#5-4特殊样式" class="headerlink" title="5.4特殊样式"></a>5.4特殊样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">/*CSS3盒子模型*/</span></span><br><span class="line">   <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">   -webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">   <span class="comment">/*点击高亮我们需要清除清除  设置为transparent 完成透明*/</span></span><br><span class="line">   -webkit-tap-highlight-<span class="attribute">color</span>: transparent;</span><br><span class="line">   <span class="comment">/*在移动端浏览器默认的外观在iOS上加上这个属性才能给按钮和输入框自定义样式*/</span></span><br><span class="line">   -webkit-appearance: none;</span><br><span class="line">   <span class="comment">/*禁用长按页面时的弹出菜单*/</span></span><br><span class="line">   <span class="selector-tag">img</span>,<span class="selector-tag">a</span> &#123; -webkit-touch-callout: none; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="6-移动端常见布局"><a href="#6-移动端常见布局" class="headerlink" title="6.移动端常见布局"></a>6.移动端常见布局</h1><h2 id="6-0移动端技术选型"><a href="#6-0移动端技术选型" class="headerlink" title="6.0移动端技术选型"></a>6.0移动端技术选型</h2><p>移动端布局和以前我们学的PC端有所区别：</p><p>1.<strong>单独制作移动端页面（主流）</strong></p><ul><li>流式布局（百分比布局）</li><li>flex 弹性布局（强烈推荐）</li><li>less+rem+媒体查询布局</li><li>混合布局</li></ul><p>2.<strong>响应式页面兼容移动端（其次）</strong></p><ul><li>媒体查询</li><li>bootstarp</li></ul><h2 id="6-1流式布局（百分比布局）"><a href="#6-1流式布局（百分比布局）" class="headerlink" title="6.1流式布局（百分比布局）"></a>6.1流式布局（百分比布局）</h2><ul><li><p>流式布局，就是百分比布局，也称非固定像素布局。</p></li><li><p>通过盒子的宽度设置成百分比来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。</p></li><li><p>流式布局方式是移动web开发使用的比较常见的布局方式。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109142005566.png"></p><ul><li>max-width  最大宽度（ max-height 最大高度 ）</li><li>min-width   最小宽度（ min-height 最小高度 ）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
            <tag> css </tag>
            
            <tag> 移动web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5 和 CSS3 的新特性</title>
      <link href="/2021/09/12/HTML5-%E5%92%8C-CSS3-%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/"/>
      <url>/2021/09/12/HTML5-%E5%92%8C-CSS3-%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p><strong>大纲：</strong></p><ul><li>HTML5的新特性</li><li>CSS3的新特性</li></ul><h1 id="1-HTML5-的新特性"><a href="#1-HTML5-的新特性" class="headerlink" title="1.HTML5 的新特性"></a>1.HTML5 的新特性</h1><blockquote><p><strong>HTML5</strong> 的新增特性主要是针对于以前的不足，增加了一些<strong>新的标签</strong>、<strong>新的表单</strong>和<strong>新的表单属性</strong>等。<br>这些新特性都有兼容性问题，基本是 IE9+ 以上版本的浏览器才支持，如果不考虑兼容性问题，可以大量使用这些新特性。</p></blockquote><p><strong>声明：新特性增加了很多，但是我们专注于开发常用的新特性。</strong></p><h2 id="1-1HTML5-新增的语义化标签"><a href="#1-1HTML5-新增的语义化标签" class="headerlink" title="1.1HTML5 新增的语义化标签"></a>1.1HTML5 新增的语义化标签</h2><p>以前布局，我们基本用 div 来做。div 对于搜索引擎来说，是没有语义的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“header”</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“nav”</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“content”</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“footer”</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>HTML5 新增的语义化标签：</p><ul><li><code>&lt;header&gt;</code>：头部标签</li><li><code>&lt;nav&gt;</code>：导航标签</li><li><code>&lt;article&gt;</code>：内容标签</li><li><code>&lt;section&gt;</code>：定义文档某个区域</li><li><code>&lt;aside&gt;</code>：侧边栏标签</li><li><code>&lt;footer&gt;</code>：尾部标签</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121350788.jpg"></p><p><strong>注意：</strong></p><ul><li>这种语义化标准主要是针对<strong>搜索引擎</strong>的</li><li>这些新标签页面中可以使用<strong>多次</strong></li><li>在 IE9 中，需要把这些元素转换为<strong>块级元素</strong></li><li>其实，我们移动端更喜欢使用这些标签</li><li>HTML5 还增加了很多其他标签，我们后面再慢慢学</li></ul><h2 id="1-2HTML5-新增的多媒体标签"><a href="#1-2HTML5-新增的多媒体标签" class="headerlink" title="1.2HTML5 新增的多媒体标签"></a>1.2HTML5 新增的多媒体标签</h2><p>新增的多媒体标签主要包含两个：</p><ol><li>音频：<code>&lt;audio&gt;</code></li><li>视频：<code>&lt;video&gt;</code></li></ol><p>使用它们可以很方便的在页面中嵌入音频和视频，而不再去使用 flash 和其他浏览器插件。</p><p>HTML5 在不使用插件的情况下，也可以原生的支持视频格式文件的播放，当然，支持的格式是有限的。</p><h3 id="视频-video-标签"><a href="#视频-video-标签" class="headerlink" title="视频 video 标签"></a>视频 video 标签</h3><p>当前<code> &lt;video&gt;</code> 元素支持三种视频格式： 尽量使用 mp4格式</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121353450.jpg"></p><p><strong>语法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;文件地址&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;move.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/ogg&quot;</span> &gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;move.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span> &gt;</span> </span><br><span class="line">您的浏览器暂不支持 <span class="tag">&lt;<span class="name">video</span>&gt;</span> 标签播放视频 </span><br><span class="line">&lt;/ video &gt;</span><br></pre></td></tr></table></figure><p>视频<code>&lt;video&gt;</code>——常见属性</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>视频就绪自动播放（谷歌浏览器需要添加muted来解决自动播放问题）</td></tr><tr><td>controls</td><td>controls</td><td>向用户显示播放控件</td></tr><tr><td>width</td><td>pixels（像素）</td><td>设置播放器宽度</td></tr><tr><td>height</td><td>pixels（像素）</td><td>设置播放器高度</td></tr><tr><td>loop</td><td>loop</td><td>播放完是否继续播放该视频，循环播放</td></tr><tr><td>preload</td><td>auto（预先加载视频）<br />none（不应加载视频）</td><td>规定是否预加载视频（如果有了autoplay 就忽略该属性）</td></tr><tr><td>src</td><td>url</td><td>视频url地址</td></tr><tr><td>poster</td><td>lmgurl</td><td>加载等待的画面图片</td></tr><tr><td>muted</td><td>muted</td><td>静音播放</td></tr></tbody></table><h3 id="音频-audio-标签"><a href="#音频-audio-标签" class="headerlink" title="音频 audio 标签"></a>音频 audio 标签</h3><p>当前 <code>&lt;audio&gt; </code>元素支持三种音频格式：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121401851.jpg"></p><p><strong>语法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;文件地址&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt; audio controls=&quot;controls&quot; &gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;happy.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mpeg&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;happy.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span> &gt;</span></span><br><span class="line">您的浏览器暂不支持 <span class="tag">&lt;<span class="name">audio</span>&gt;</span> 标签。</span><br><span class="line">&lt;/ audio&gt;</span><br></pre></td></tr></table></figure><p><strong>常见属性</strong></p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>如果出现该属性，则音频在就绪后马上播放。</td></tr><tr><td>controls</td><td>controls</td><td>如果出现该属性，则向用户显示控件，比如播放按钮。</td></tr><tr><td>loop</td><td>loop</td><td>如果出现该属性，则每当音频结束时重新开始播放。</td></tr><tr><td>src</td><td>url</td><td>要播放的音频 URL。</td></tr></tbody></table><p><strong>注意：谷歌浏览器把音频和视频自动播放禁止了</strong></p><h3 id="多媒体标签总结"><a href="#多媒体标签总结" class="headerlink" title="多媒体标签总结"></a>多媒体标签总结</h3><ul><li>音频标签和视频标签使用方式基本一致</li><li>浏览器支持情况不同</li><li>谷歌浏览器把音频和视频自动播放禁止了</li><li>我们可以给视频标签添加 muted 属性来静音播放视频，音频不可以（可以通过JavaScript解决）</li><li>视频标签是重点，我们经常设置自动播放，不使用 controls 控件，循环和设置大小属性</li></ul><h2 id="1-3HTML5-新增的-input-类型"><a href="#1-3HTML5-新增的-input-类型" class="headerlink" title="1.3HTML5 新增的 input 类型"></a>1.3HTML5 新增的 input 类型</h2><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>type=”email”</td><td>限制用户输入必须为Email类型</td></tr><tr><td>type=”url”</td><td>限制用户输入必须为URL类型</td></tr><tr><td>type=”date”</td><td>限制用户输入必须为日期类型</td></tr><tr><td>type=”time”</td><td>限制用户输入必须为时间类型</td></tr><tr><td>type=”month”</td><td>限制用户输入必须为月类型</td></tr><tr><td>type=”week”</td><td>限制用户输入必须为周类型</td></tr><tr><td>type=”number”</td><td>限制用户输入必须为数字类型</td></tr><tr><td>type=”tel”</td><td>手机号码</td></tr><tr><td>type=”search”</td><td>搜索框</td></tr><tr><td>type=”color”</td><td>生成一个颜色选择表单</td></tr></tbody></table><p><strong>重点记住：number tel search 这三个</strong></p><h2 id="1-4HTML5-新增的表单属性"><a href="#1-4HTML5-新增的表单属性" class="headerlink" title="1.4HTML5 新增的表单属性"></a>1.4HTML5 新增的表单属性</h2><table><thead><tr><th>属性</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>required</td><td>表单拥有该属性表示其内容不能为空，必填</td></tr><tr><td><strong>placeholder</strong></td><td>提示文本</td><td>表单的提示信息，存在默认值将不显示</td></tr><tr><td>autofocus</td><td>autofocus</td><td>自动聚焦属性，页面加载完成自动聚焦到指定表单</td></tr><tr><td>autocomplete</td><td>off / on</td><td>当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项。<br />默认已经打开，如 autocomplete=””</td></tr><tr><td><strong>multiple</strong></td><td>multiple</td><td>可以多选文件提交</td></tr></tbody></table><p><strong>可以通过以下设置方式修改placeholder里面的字体颜色：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-CSS3-的新特性"><a href="#2-CSS3-的新特性" class="headerlink" title="2.CSS3 的新特性"></a>2.CSS3 的新特性</h1><h2 id="2-1CSS3-的现状"><a href="#2-1CSS3-的现状" class="headerlink" title="2.1CSS3 的现状"></a>2.1CSS3 的现状</h2><ul><li>新增的CSS3特性有兼容性问题，ie9+才支持</li><li>移动端支持优于 PC 端</li><li>不断改进中</li><li>应用相对广泛</li><li>现阶段主要学习：<strong>新增选择器</strong>和<strong>盒子模型</strong>以及<strong>其他特性</strong></li></ul><h2 id="2-2CSS3-新增选择器"><a href="#2-2CSS3-新增选择器" class="headerlink" title="2.2CSS3 新增选择器"></a>2.2CSS3 新增选择器</h2><p>CSS3 给我们新增了选择器，可以更加便捷，更加自由的选择目标元素。</p><ul><li>属性选择器</li><li>结构伪类选择器</li><li>伪元素选择器</li></ul><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><p>属性选择器可以根据元素特定属性的来选择元素。 这样就可以不用借助于类或者id选择器。</p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>E[att]</td><td>选择具有 att 属性的 E 元素</td></tr><tr><td>E[att=”val”]</td><td>选择具有 att 属性且属性值等于 val 的 E 元素</td></tr><tr><td>E[att^=”val”]</td><td>匹配具有att 属性且属性值以 val 开头 的 E 元素</td></tr><tr><td>E[att$=”val”]</td><td>匹配具有att 属性且属性值以 val 结尾 的 E 元素</td></tr><tr><td>E[att*=”val”]</td><td>匹配具有att 属性且属性值中含有 val 的 E 元素</td></tr></tbody></table><p><strong>注意：类选择器、属性选择器、伪类选择器，权重为 10。</strong></p><p>例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, initial-scale=<span class="number">1.0</span>&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; <span class="attribute">content</span>=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS3新增属性选择器&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">/* 必须是input 但是同时具有 value这个属性 选择这个元素  [] */</span></span><br><span class="line">        <span class="comment">/* input[value] &#123;</span></span><br><span class="line"><span class="comment">            color:pink;</span></span><br><span class="line"><span class="comment">        &#125; */</span></span><br><span class="line">        <span class="comment">/* 只选择 type =text 文本框的input 选取出来 */</span></span><br><span class="line">        <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* 选择首先是div 然后 具有class属性 并且属性值 必须是 icon开头的这些元素 */</span></span><br><span class="line">        <span class="selector-tag">div</span><span class="selector-attr">[class^=icon]</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">section</span><span class="selector-attr">[class$=data]</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: blue;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span><span class="selector-class">.icon1</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* 类选择器和属性选择器 伪类选择器 权重都是 10 */</span></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;!-- <span class="number">1</span>. 利用属性选择器就可以不用借助于类或者id选择器 --&gt;</span><br><span class="line">    &lt;!-- &lt;<span class="selector-tag">input</span> type=&quot;text&quot; value=&quot;请输入用户名&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">input</span> type=&quot;text&quot;&gt; --&gt;</span><br><span class="line">    &lt;!-- <span class="number">2</span>. 属性选择器还可以选择属性=值的某些元素 重点务必掌握的 --&gt;</span><br><span class="line">    &lt;<span class="selector-tag">input</span> type=&quot;text&quot; name=&quot;&quot; id=&quot;&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">input</span> type=&quot;password&quot; name=&quot;&quot; id=&quot;&quot;&gt;</span><br><span class="line">    &lt;!-- <span class="number">3</span>. 属性选择器可以选择属性值开头的某些元素 --&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;icon1&quot;&gt;小图标<span class="number">1</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;icon2&quot;&gt;小图标<span class="number">2</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;icon3&quot;&gt;小图标<span class="number">3</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;icon4&quot;&gt;小图标<span class="number">4</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span>&gt;我是打酱油的&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;!-- <span class="number">4</span>. 属性选择器可以选择属性值结尾的某些元素 --&gt;</span><br><span class="line">    &lt;<span class="selector-tag">section</span> class=&quot;icon1-data&quot;&gt;我是安其拉&lt;/<span class="selector-tag">section</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">section</span> class=&quot;icon2-data&quot;&gt;我是哥斯拉&lt;/<span class="selector-tag">section</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">section</span> class=&quot;icon3-ico&quot;&gt;哪我是谁&lt;/<span class="selector-tag">section</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="结构为类选择器"><a href="#结构为类选择器" class="headerlink" title="结构为类选择器"></a>结构为类选择器</h3><p>结构伪类选择器主要根据<strong>文档结构</strong>来选择器元素， 常用于根据父级选择器里面的子元素</p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>D E:first-child</td><td>匹配父元素D中的第一个子元素 E</td></tr><tr><td>D E:last-child</td><td>匹配父元素D中的最后一个 E 元素</td></tr><tr><td>D E:nth-child(n)</td><td>匹配父元素D中第 n 个子元素 E</td></tr><tr><td>D E:first-of-type</td><td>指定类型 E 的第一个</td></tr><tr><td>D E:last-of-type</td><td>指定类型 E 的最后一个</td></tr><tr><td>D E:nth-of-type(n)</td><td>指定类型 E 的第 n 个</td></tr></tbody></table><p><strong>注意：类选择器、属性选择器、伪类选择器，权重为 10。</strong></p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, initial-scale=<span class="number">1.0</span>&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; <span class="attribute">content</span>=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS3新增结构伪类选择器&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">/* 1. 选择ul里面的第一个孩子 小li */</span></span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* 2. 选择ul里面的最后一个孩子 小li */</span></span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="comment">/* 3. 选择ul里面的第2个孩子 小li */</span></span><br><span class="line">         <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">1</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">2</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">3</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">4</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">5</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">6</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">7</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">8</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>nth-child（n）</strong> 选择某个父元素的一个或多个特定的子元素（重点）</p><ul><li><strong>n 可以是数字，关键字和公式</strong></li><li>n 如果是数字，就是选择第 n 个子元素， 里面数字从1开始…</li><li>n 可以是关键字：even 偶数，odd 奇数</li><li>n 可以是公式：常见的公式如下 ( 如果n是公式，则从0开始计算，但是第 0 个元素或者超出了元素的个数会被忽略 )</li></ul><p>例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, initial-scale=<span class="number">1.0</span>&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; <span class="attribute">content</span>=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS3新增结构伪类选择器-nth-child&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">/* 1.把所有的偶数 even的孩子选出来 */</span></span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(even) &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 2.把所有的奇数 odd的孩子选出来 */</span></span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(odd) &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: gray;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* 3.nth-child(n) 从0开始 每次加1 往后面计算  这里面必须是n 不能是其他的字母 选择了所有的孩子*/</span></span><br><span class="line">        <span class="comment">/* ol li:nth-child(n) &#123;</span></span><br><span class="line"><span class="comment">            background-color: pink;</span></span><br><span class="line"><span class="comment">        &#125; */</span></span><br><span class="line">        <span class="comment">/* 4.nth-child(2n)母选择了所有的偶数孩子 等价于 even*/</span></span><br><span class="line">        <span class="comment">/* ol li:nth-child(2n) &#123;</span></span><br><span class="line"><span class="comment">            background-color: pink;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        ol li:nth-child(2n+1) &#123;</span></span><br><span class="line"><span class="comment">            background-color: skyblue;</span></span><br><span class="line"><span class="comment">        &#125; */</span></span><br><span class="line">        <span class="comment">/* ol li:nth-child(n+3) &#123;</span></span><br><span class="line"><span class="comment">            background-color: pink;</span></span><br><span class="line"><span class="comment">        &#125; */</span></span><br><span class="line">        <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(-n+<span class="number">3</span>) &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">1</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">2</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">3</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">4</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">5</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">6</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">7</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">8</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">ol</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">1</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">2</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">3</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">4</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">5</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">6</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">7</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">8</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">ol</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>公式</th><th>取值</th></tr></thead><tbody><tr><td>2n</td><td>偶数</td></tr><tr><td>2n+1</td><td>奇数</td></tr><tr><td>5n</td><td>5  10  15 …</td></tr><tr><td>n+5</td><td>从第5个开始（包含第五个）到最后</td></tr><tr><td>-n+5</td><td>前5个（包含第5个）…</td></tr></tbody></table><p><strong>nth-of-type(n)</strong> 选择某个父元素的一个或多个特定的子元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, initial-scale=<span class="number">1.0</span>&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; <span class="attribute">content</span>=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS3新增选择器nth-type-of&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-of-type &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-of-type</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type</span>(even) &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* nth-child 会把所有的盒子都排列序号 */</span></span><br><span class="line">        <span class="comment">/* 执行的时候首先看  :nth-child(1) 之后回去看 前面 div */</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="comment">/* nth-of-type 会把指定元素的盒子排列序号 */</span></span><br><span class="line">        <span class="comment">/* 执行的时候首先看  div指定的元素  之后回去看 :nth-of-type(1) 第几个孩子 */</span></span><br><span class="line">        <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">1</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">2</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">3</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">4</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">5</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">6</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">7</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我是第<span class="number">8</span>个孩子&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">    &lt;!-- 区别 --&gt;</span><br><span class="line">    &lt;<span class="selector-tag">section</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">p</span>&gt;光头强&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">div</span>&gt;熊大&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">div</span>&gt;熊二&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">section</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>区别：</strong></p><ol><li><strong>nth-child 对父元素里面所有孩子排序选择（序号是固定的） 先找到第n个孩子，然后看看是否和E匹配</strong></li><li><strong>nth-of-type 对父元素里面指定子元素进行排序选择。 先去匹配E ，然后再根据E 找第n个孩子</strong></li></ol><p><strong>小结：</strong></p><ul><li>结构伪类选择器一般用于选择父级里面的第几个孩子</li><li>nth-child 对父元素里面所有孩子排序选择（序号是固定的） 先找到第n个孩子，然后看看是否和E匹配</li><li>nth-of-type 对父元素里面指定子元素进行排序选择。 先去匹配E ，然后再根据E 找第n个孩子</li><li>关于 nth-child（n） 我们要知道 n 是从 0 开始计算的，要记住常用的公式</li><li>如果是无序列表，我们肯定用 nth-child 更多</li><li>类选择器、属性选择器、伪类选择器，权重为 10。</li></ul><h3 id="伪元素选择器（重点）"><a href="#伪元素选择器（重点）" class="headerlink" title="伪元素选择器（重点）"></a>伪元素选择器（重点）</h3><p>伪元素选择器可以帮助我们利用CSS创建新标签元素，而不需要HTML标签，从而简化HTML结构。</p><table><thead><tr><th align="left">选择符</th><th>简介</th></tr></thead><tbody><tr><td align="left">::before</td><td>在元素内部的前面插入内容</td></tr><tr><td align="left">::after</td><td>在元素内部的后面插入内容</td></tr></tbody></table><p><strong>注意：</strong></p><ul><li><strong>before</strong> 和 <strong>after</strong> 创建一个元素，但是属于行内元素</li><li>新创建的这个元素在文档树中是找不到的，所以我们称为<strong>伪元素</strong></li><li><strong>语法： element::before {}</strong></li><li>before 和 after 必须有 <strong>content 属性</strong></li><li>before 在父元素内容的前面创建元素，after 在父元素内容的后面插入元素</li><li><strong>伪元素选择器和标签选择器</strong>一样，权重为 1</li></ul><h4 id="伪元素选择器使用场景1：伪元素字体图标"><a href="#伪元素选择器使用场景1：伪元素字体图标" class="headerlink" title="伪元素选择器使用场景1：伪元素字体图标"></a>伪元素选择器使用场景1：伪元素字体图标</h4><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121626602.jpg"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;\e91e&#x27;</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="伪元素选择器使用场景2：仿土豆效果"><a href="#伪元素选择器使用场景2：仿土豆效果" class="headerlink" title="伪元素选择器使用场景2：仿土豆效果"></a>伪元素选择器使用场景2：仿土豆效果</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 当我们鼠标经过了 土豆这个盒子，就让里面before遮罩层显示出来 */</span></span><br><span class="line"><span class="selector-class">.tudou</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line"><span class="comment">/* 而是显示元素 */</span></span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="伪元素选择器使用场景3：伪元素清除浮动"><a href="#伪元素选择器使用场景3：伪元素清除浮动" class="headerlink" title="伪元素选择器使用场景3：伪元素清除浮动"></a>伪元素选择器使用场景3：伪元素清除浮动</h4><ol><li>额外标签法也称为隔墙法，是 W3C 推荐的做法。</li><li>父级添加 overflow 属性</li><li><strong>父级添加after伪元素</strong></li><li><strong>父级添加双伪元素</strong></li></ol><p>1.额外标签法也称为隔墙法，是 W3C 推荐的做法。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121626115.png"></p><p>注意： 要求这个新的空标签必须是块级元素。</p><p>后面两种伪元素清除浮动算是第一种额外标签法的一个升级和优化。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121628858.png"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121629553.png"></p><h3 id="2-3CSS3-盒子模型"><a href="#2-3CSS3-盒子模型" class="headerlink" title="2.3CSS3 盒子模型"></a>2.3CSS3 盒子模型</h3><blockquote><p>CSS3 中可以通过 box-sizing 来指定盒模型，有2个值：即可指定为 content-box、border-box，这样我们计算盒子大小的方式就发生了改变。</p></blockquote><p>可以分成两种情况：</p><ol><li>box-sizing: content-box 盒子大小为 width + padding + border （以前默认的）</li><li>box-sizing: border-box 盒子大小为 width</li></ol><p>如果盒子模型我们改为了box-sizing: border-box ， 那padding和border就不会撑大盒子了（前提padding和border不会超过width宽度）</p><h3 id="2-4CSS3-其他特性（了解）"><a href="#2-4CSS3-其他特性（了解）" class="headerlink" title="2.4CSS3 其他特性（了解）"></a>2.4CSS3 其他特性（了解）</h3><ul><li>图片变模糊</li><li>计算盒子宽度 width: calc 函数</li></ul><h4 id="CSS3滤镜filter"><a href="#CSS3滤镜filter" class="headerlink" title="CSS3滤镜filter:"></a>CSS3滤镜filter:</h4><p>filter CSS属性将模糊或颜色偏移等图形效果应用于元素。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">filter</span>: 函数(); 例如： <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>); blur模糊处理 数值越大越模糊</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121631041.png"></p><h4 id="CSS3-calc-函数"><a href="#CSS3-calc-函数" class="headerlink" title="CSS3 calc 函数:"></a>CSS3 calc 函数:</h4><p>calc() 此CSS函数让你在声明CSS属性值时执行一些计算。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">80px</span>);</span><br></pre></td></tr></table></figure><p>括号里面可以使用 + - * / 来进行计算。</p><p>CSS3 还增加了一些 动画 2D 3D 等新特性，后续会更新</p><h3 id="2-5CSS3-过渡（重点）"><a href="#2-5CSS3-过渡（重点）" class="headerlink" title="2.5CSS3 过渡（重点）"></a>2.5CSS3 过渡（重点）</h3><blockquote><p>过渡（transition)是CSS3中具有颠覆性的特征之一，我们可以在不使用 Flash 动画或 JavaScript 的情况下，当元素从一种样式变换为另一种样式时为元素添加效果。</p></blockquote><p>过渡动画： 是从一个状态 渐渐的过渡到另外一个状态</p><p>可以让我们页面更好看，更动感十足，虽然 低版本浏览器不支持（ie9以下版本） 但是不会影响页面布局。</p><p><strong>我们现在经常和 :hover 一起 搭配使用。</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition</span>: 要过渡的属性 花费时间 运动曲线 何时开始;</span><br></pre></td></tr></table></figure><p>1.<strong>属性</strong> : 想要变化的 css 属性， 宽度高度 背景颜色 内外边距都可以 。如果想要所有的属性都变化过渡， 写一个all 就可以。</p><p>2.<strong>花费时间</strong> : 单位是 秒（必须写单位） 比如 0.5s</p><p>3.<strong>运动曲线</strong> : 默认是 ease （可以省略）</p><p>4.<strong>何时开始</strong> : 单位是 秒（必须写单位）可以设置延迟触发时间 默认是 0s （可以省略）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121635646.jpg"></p><p><strong>记住过渡的使用口诀： 谁做过渡给谁加</strong></p><h4 id="进度条案例"><a href="#进度条案例" class="headerlink" title="进度条案例"></a>进度条案例</h4><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121635763.jpg"></p><ol><li>进度条如何布局</li><li>过渡的使用</li></ol><h4 id="课后作业"><a href="#课后作业" class="headerlink" title="课后作业"></a>课后作业</h4><ol><li>布局右侧模块</li><li>利用过渡的制作小米logo效果</li></ol><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121636283.png"></p><h1 id="3-狭义的HTML5-CSS3"><a href="#3-狭义的HTML5-CSS3" class="headerlink" title="3.狭义的HTML5 CSS3"></a>3.狭义的HTML5 CSS3</h1><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121637199.png"></p><h1 id="4-广义的HTML5"><a href="#4-广义的HTML5" class="headerlink" title="4.广义的HTML5"></a>4.广义的HTML5</h1><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109121638629.png"></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/HTML">https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/HTML</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端开发规范手册</title>
      <link href="/2021/09/09/Web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/"/>
      <url>/2021/09/09/Web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="一、规范目的"><a href="#一、规范目的" class="headerlink" title="一、规范目的"></a>一、规范目的</h1><h2 id="1-1概述"><a href="#1-1概述" class="headerlink" title="1.1概述"></a>1.1概述</h2><blockquote><p>为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档, 特制订此文档。</p><p>本规范文档一经确认, 前端开发人员必须按本文档规范进行前台页面开发。</p><p>本文档如有不对或者不合适的地方请及时提出, 经讨论决定后可以更改此文档。</p></blockquote><h1 id="二、文件规范"><a href="#二、文件规范" class="headerlink" title="二、文件规范"></a>二、文件规范</h1><h2 id="2-1文件命名规则"><a href="#2-1文件命名规则" class="headerlink" title="2.1文件命名规则"></a>2.1文件命名规则</h2><blockquote><p>文件名称<strong>统一用小写</strong>的英文字母、数字和下划线的组合，其中<strong>不得包含汉字、空格和特殊字符</strong>。</p><p>命名原则的指导思想一是使得你自己和工作组的每一个成员能够方便的理解每一个文件的意义，二是当我们在文件夹中使用“按名称排例”的命令时，同一种大类的文件能够排列在一起，以便我们查找、修改、替换、计算负载量等等操作。</p></blockquote><h3 id="HTML的命名原则"><a href="#HTML的命名原则" class="headerlink" title="HTML的命名原则"></a>HTML的命名原则</h3><blockquote><p>引文件统一使用<strong>index.htm index.html index.asp</strong>文件名（小写）</p><p>各子页命名的原则首先应该以栏目名的英语翻译取单一单词为名称。</p></blockquote><p>例如： </p><ul><li><p>关于我们 \ aboutus </p></li><li><p>信息反馈 \ feedback </p></li><li><p>产 品 \ product</p></li></ul><p> 如果栏目名称多而复杂并不好以英文单词命名，则统一使用该栏目名称拼音或拼音的首字母表示；</p><p> 每一个目录中应该包含一个<strong>缺省</strong>的html 文件，文件名统一用<strong>index.htm index.html index.asp</strong>；</p><h3 id="图片的命名原则"><a href="#图片的命名原则" class="headerlink" title="图片的命名原则"></a>图片的命名原则</h3><p><strong>图片的名称分为头尾两部分，用下划线隔开，头部分表示此图片的大类性质</strong></p><p> 例如：广告、标志、菜单、按钮等等。</p><ul><li><p>放置在页面顶部的广告、装饰图案等长方形的图片取名： banner</p></li><li><p>标志性的图片取名为： logo</p></li><li><p>在页面上位置不固定并且带有链接的小图片我们取名为 button </p></li><li><p>在页面上某一个位置连续出现，性质相同的链接栏目的图片我们取名： menu </p></li><li><p>装饰用的照片我们取名： pic</p></li></ul><p><strong>不带链接表示标题的图片我们取名： title</strong> </p><p> 范例：</p><ul><li><strong>banner_sohu.gif</strong></li><li><strong>banner_sina.gif</strong></li><li><strong>menu_aboutus.gif</strong> </li><li><strong>menu_job.gif</strong></li><li><strong>title_news.gif</strong></li><li><strong>logo_police.gif</strong> </li><li><strong>logo_national.gif</strong></li><li><strong>pic_people.jpg</strong></li></ul><p><strong>鼠标感应效果图片命名规范为”图片名+_+on/off”。</strong></p><p>例如： </p><ul><li>**menu1_on.gif **</li><li><strong>menu1_off.gif</strong></li></ul><h3 id="javascript的命名原则"><a href="#javascript的命名原则" class="headerlink" title="javascript的命名原则"></a>javascript的命名原则</h3><p>例如：</p><ul><li>广告条的javascript文件名为 <strong>ad.js</strong> </li><li>弹出窗口的javascript文件名为 <strong>pop.js</strong></li></ul><h3 id="动态语言文件命名原则"><a href="#动态语言文件命名原则" class="headerlink" title="动态语言文件命名原则"></a>动态语言文件命名原则</h3><p><strong>以性质_描述，描述可以有多个单词，用“_”隔开，性质一般是该页面得概要。</strong></p><p>范例：</p><ul><li>**register_form.asp  **</li><li>**register_post.asp  **</li><li><strong>topic_lock.asp</strong></li></ul><h2 id="2-2文件存放位置规范"><a href="#2-2文件存放位置规范" class="headerlink" title="2.2文件存放位置规范"></a>2.2文件存放位置规范</h2><table><thead><tr><th>cn</th><th>存放中文HTML文件</th></tr></thead><tbody><tr><td>en</td><td>存放英文HTML文件</td></tr><tr><td>flash</td><td>存放Flash文件</td></tr><tr><td>images</td><td>存放图片文件</td></tr><tr><td>imagestudio</td><td>存放PSD源文件</td></tr><tr><td>flashstudio</td><td>存放flash源文件</td></tr><tr><td>inc</td><td>存放include文件</td></tr><tr><td>library</td><td>存放DW库文件</td></tr><tr><td>media</td><td>存放多媒体文件</td></tr><tr><td>project</td><td>存放工程项目资料</td></tr><tr><td>temp</td><td>存放客户原始资料</td></tr><tr><td>js</td><td>存放JavaScript脚本</td></tr><tr><td>css</td><td>存放CSS文件</td></tr></tbody></table><h2 id="2-3CSS-书写规范"><a href="#2-3CSS-书写规范" class="headerlink" title="2.3CSS 书写规范"></a>2.3CSS 书写规范</h2><p><strong>基本原则：</strong></p><p>CSS样式可细分为3类：自定义样式、重新定义HTML样式、链接状态样式。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 规范手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css第六天学习笔记【已完结】</title>
      <link href="/2021/09/06/css%E7%AC%AC%E5%85%AD%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E5%B7%B2%E5%AE%8C%E7%BB%93%E3%80%91/"/>
      <url>/2021/09/06/css%E7%AC%AC%E5%85%AD%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E5%B7%B2%E5%AE%8C%E7%BB%93%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>CSS第六天大纲：</strong></p><ul><li>精灵图</li><li>字体图标</li><li>CSS三角</li><li>CSS用户界面样式</li><li>vertical-align属性应用</li><li>溢出文字省略号显示</li><li>常见布局技巧</li></ul><span id="more"></span><h1 id="1-精灵图"><a href="#1-精灵图" class="headerlink" title="1.精灵图"></a>1.精灵图</h1><ol><li>为什么需要精灵图？</li><li>精灵图的使用</li><li>精灵图课堂案例</li></ol><h2 id="1-1为什么需要精灵图"><a href="#1-1为什么需要精灵图" class="headerlink" title="1.1为什么需要精灵图"></a>1.1为什么需要精灵图</h2><blockquote><p>一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。</p><p>因此，<strong>为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度，</strong>出现了<code> CSS 精灵技术</code>（也称 CSS Sprites、CSS 雪碧）。</p></blockquote><p><strong>核心原理：将网页中的一些小背景图像整合到一张大图中 ，这样服务器只需要一次请求就可以了。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062115811.png"></p><p><strong>精灵技术目的：</strong>为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度。</p><h2 id="1-2精灵图（sprites）的使用"><a href="#1-2精灵图（sprites）的使用" class="headerlink" title="1.2精灵图（sprites）的使用"></a>1.2精灵图（sprites）的使用</h2><p><strong>使用精灵图核心：</strong></p><ol><li>精灵技术主要针对于背景图片使用。就是把多个小背景图片整合到一张大图片中。</li><li>这个大图片也称为 sprites 精灵图 或者 雪碧图</li><li>移动背景图片位置， 此时可以使用 <strong>background-position</strong> 。</li><li>移动的距离就是这个目标图片的 <strong>x</strong> 和 <strong>y</strong> 坐标。注意网页中的坐标有所不同</li><li>因为一般情况下都是往上往左移动，所以数值是负值。</li><li>使用精灵图的时候需要精确测量，每个小背景图片的大小和位置。</li></ol><p><strong>使用精灵图核心总结：</strong></p><ol><li>精灵图主要针对于小的背景图片使用。</li><li>主要借助于背景位置来实现—<strong>background-position</strong> 。</li><li>一般情况下精灵图都是负值。（千万注意网页中的坐标： x轴右边走是正值，左边走是负值， y轴同理。）</li></ol><h2 id="案例：拼出自己名字"><a href="#案例：拼出自己名字" class="headerlink" title="案例：拼出自己名字"></a>案例：拼出自己名字</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062117384.jpg"></p><h1 id="2-字体图标"><a href="#2-字体图标" class="headerlink" title="2.字体图标"></a>2.字体图标</h1><h2 id="2-1字体图标的产生"><a href="#2-1字体图标的产生" class="headerlink" title="2.1字体图标的产生"></a>2.1字体图标的产生</h2><p>字体图标使用场景： 主要用于显示网页中通用、常用的一些小图标。</p><p>精灵图是有诸多优点的，但是缺点很明显：</p><ol><li>图片文件还是比较大的。</li><li>图片本身放大和缩小会失真。</li><li>一旦图片制作完毕想要更换非常复杂。</li></ol><p>此时，有一种技术的出现很好的解决了以上问题，就是<strong>字体图标 iconfont</strong>。</p><p><strong>字体图标</strong>可以为前端工程师提供一种方便高效的图标使用方式，<strong>展示的是图标，本质属于字体。</strong></p><h2 id="2-2字体图标的优点"><a href="#2-2字体图标的优点" class="headerlink" title="2.2字体图标的优点"></a>2.2字体图标的优点</h2><ul><li>轻量级：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器请求</li><li>灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等</li><li>兼容性：几乎支持所有的浏览器，请放心使用</li></ul><p>注意： 字体图标不能替代精灵技术，只是对工作中图标部分技术的提升和优化。</p><p><strong>总结：</strong></p><ol><li>如果遇到一些结构和样式比较简单的小图标，就用字体图标。</li><li>如果遇到一些结构和样式复杂一点的小图片，就用精灵图。</li></ol><p>字体图标是一些网页常见的小图标，我们直接网上下载即可。 因此使用可以分为：</p><ol><li>字体图标的下载</li><li>字体图标的引入 （引入到我们html页面中）</li><li>字体图标的追加 （以后添加新的小图标）</li></ol><h2 id="2-3字体图标的下载"><a href="#2-3字体图标的下载" class="headerlink" title="2.3字体图标的下载"></a>2.3字体图标的下载</h2><p><strong>推荐下载网站：</strong></p><ul><li><strong>icomoon 字库</strong> <a href="http://icomoon.io/">http://icomoon.io</a> 推荐指数 ★★★★★</li></ul><blockquote><p>IcoMoon 成立于 2011 年，推出了第一个自定义图标字体生成器，它允许用户选择所需要的图标，使它们成一字型。该字库内容种类繁多，非常全面，唯一的遗憾是国外服务器，打开网速较慢。</p></blockquote><ul><li><strong>阿里 iconfont 字库</strong> <a href="http://www.iconfont.cn/">http://www.iconfont.cn/</a> 推荐指数 ★★★★★</li></ul><blockquote><p>这个是阿里妈妈 M2UX 的一个 iconfont 字体图标字库，包含了淘宝图标库和阿里妈妈图标库。可以使用 AI制作图标上传生成。 重点是，免费！</p></blockquote><h2 id="2-4字体图标的引入"><a href="#2-4字体图标的引入" class="headerlink" title="2.4字体图标的引入"></a>2.4字体图标的引入</h2><p><strong>下载完毕之后，注意原先的文件不要删，后面会用。</strong></p><p>把下载包里面的 <strong>fonts</strong> 文件夹放入页面根目录下</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062123256.png"></p><p>1.<strong>字体文件格式</strong></p><p>不同浏览器所支持的字体格式是不一样的，字体图标之所以兼容，就是因为包含了主流浏览器支持的字体文件。</p><ul><li><p>TureType(<strong>.ttf</strong>)格式.ttf字体是Windows和Mac的最常见的字体，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome4+、Safari3+、Opera10+、iOS Mobile、Safari4.2+；</p></li><li><p>Web Open Font Format(<strong>.woff</strong>)格式woff字体，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome6+、Safari3.6+、Opera11.1+；</p></li><li><p>Embedded Open Type(<strong>.eot</strong>)格式.eot字体是IE专用字体，支持这种字体的浏览器有IE4+；</p></li><li><p>SVG(<strong>.svg</strong>)格式.svg字体是基于SVG字体渲染的一种格式，支持这种字体的浏览器有Chrome4+、Safari3.1+、Opera10.0+、iOS Mobile Safari3.2+；</p></li></ul><p>2.<strong>在 CSS 样式中全局声明字体： 简单理解把这些字体文件通过css引入到我们页面中。</strong></p><p>一定注意字体文件路径的问题。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&#x27;icomoon&#x27;</span>;</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?7kkyc2&#x27;</span>);</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?7kkyc2#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.ttf?7kkyc2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.woff?7kkyc2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.svg?7kkyc2#icomoon&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span><br><span class="line"><span class="attribute">font-weight</span>: normal;</span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.<strong>html 标签内添加小图标。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062129658.jpg"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">span</span>&gt; &lt;/<span class="selector-tag">span</span>&gt;</span><br></pre></td></tr></table></figure><p>4.<strong>给标签定义字体。</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;icomoon&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>务必保证 这个字体和上面@font-face里面的字体保持一致</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062130444.jpg"></p><h2 id="2-5字体图标的追加"><a href="#2-5字体图标的追加" class="headerlink" title="2.5字体图标的追加"></a>2.5字体图标的追加</h2><p>如果工作中，原来的字体图标不够用了，我们需要添加新的字体图标到原来的字体文件中。</p><p>把压缩包里面的 <strong>selection.json 从新上传</strong>，然后选中自己想要新的图标，从新下载压缩包，并替换原来的文件即可。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062131079.jpg"></p><h1 id="3-CSS-三角"><a href="#3-CSS-三角" class="headerlink" title="3.CSS 三角"></a>3.CSS 三角</h1><p>网页中常见一些三角形，使用 CSS 直接画出来就可以，不必做成图片或者字体图标。</p><p>一张图， 你就知道 CSS 三角是怎么来的了, 做法如下：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062132285.jpg"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-left-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="案例：京东三角"><a href="#案例：京东三角" class="headerlink" title="案例：京东三角"></a>案例：京东三角</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062133030.png"></p><h2 id="课堂案例：完成如下图像"><a href="#课堂案例：完成如下图像" class="headerlink" title="课堂案例：完成如下图像"></a>课堂案例：完成如下图像</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062134419.png"></p><h1 id="4-CSS-用户界面样式"><a href="#4-CSS-用户界面样式" class="headerlink" title="4.CSS 用户界面样式"></a>4.CSS 用户界面样式</h1><h2 id="4-1什么是界面样式"><a href="#4-1什么是界面样式" class="headerlink" title="4.1什么是界面样式"></a>4.1什么是界面样式</h2><p>所谓的<strong>界面样式</strong>，就是更改一些用户操作样式，以便提高更好的用户体验。</p><ul><li>更改用户的鼠标样式</li><li>表单轮廓</li><li>防止表单域拖拽</li></ul><h2 id="4-2鼠标样式-cursor"><a href="#4-2鼠标样式-cursor" class="headerlink" title="4.2鼠标样式 cursor"></a>4.2鼠标样式 cursor</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;<span class="attribute">cursor</span>: pointer; &#125;</span><br></pre></td></tr></table></figure><p>设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>default</td><td>小白  默认</td></tr><tr><td>pointer</td><td>小手</td></tr><tr><td>move</td><td>移动</td></tr><tr><td>text</td><td>文本</td></tr><tr><td>not-allowed</td><td>禁止</td></tr></tbody></table><h2 id="4-3轮廓线-outline"><a href="#4-3轮廓线-outline" class="headerlink" title="4.3轮廓线 outline"></a>4.3轮廓线 outline</h2><p>给表单添加 outline: 0; 或者 outline: none; 样式之后，就可以去掉默认的蓝色边框。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123;<span class="attribute">outline</span>: none; &#125;</span><br></pre></td></tr></table></figure><h2 id="4-4防止拖拽文本域-resize"><a href="#4-4防止拖拽文本域-resize" class="headerlink" title="4.4防止拖拽文本域 resize"></a>4.4防止拖拽文本域 resize</h2><p>实际开发中，我们文本域右下角是不可以拖拽的。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">textarea</span>&#123; <span class="attribute">resize</span>: none;&#125;</span><br></pre></td></tr></table></figure><h1 id="5-vertical-align-属性应用"><a href="#5-vertical-align-属性应用" class="headerlink" title="5.vertical-align 属性应用"></a>5.vertical-align 属性应用</h1><blockquote><p>CSS 的 <strong>vertical-align</strong> 属性使用场景： 经常用于设置图片或者表单(行内块元素）和文字垂直对齐。</p><p>官方解释： 用于设置一个元素的<strong>垂直对齐方式</strong>，但是它只针对于<strong>行内元素或者行内块元素</strong>有效。</p></blockquote><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vertical-align</span> : baseline | top | middle | bottom</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>baseline</td><td>默认。元素放置在父元素的基线上</td></tr><tr><td>top</td><td>把元素的顶端与行中最高元素的顶端对齐。</td></tr><tr><td>middle</td><td>把此元素放置在父元素的中部。</td></tr><tr><td>bottom</td><td>把元素的顶端与行中最低的元素的顶部对齐。</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062143856.jpg"></p><h2 id="5-1图片、表单和文字对齐"><a href="#5-1图片、表单和文字对齐" class="headerlink" title="5.1图片、表单和文字对齐"></a>5.1图片、表单和文字对齐</h2><p>图片、表单都属于行内块元素，默认的 vertical-align 是基线对齐。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062146005.jpg"></p><p>此时可以给图片、表单这些行内块元素的 <strong>vertical-align 属性设置为 middle</strong> 就可以让文字和图片垂直居中对齐了。</p><h2 id="5-2解决图片底部默认空白缝隙问题"><a href="#5-2解决图片底部默认空白缝隙问题" class="headerlink" title="5.2解决图片底部默认空白缝隙问题"></a>5.2解决图片底部默认空白缝隙问题</h2><p>bug：图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐。</p><p><strong>主要解决方法有两种：</strong></p><ol><li>给图片添加 <strong>vertical-align:middle | top| bottom</strong> 等。 （提倡使用的）</li><li>把图片转换为块级元素 <strong>display: block;</strong></li></ol><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062148435.png"></p><h1 id="6-溢出的文字省略号显示"><a href="#6-溢出的文字省略号显示" class="headerlink" title="6.溢出的文字省略号显示"></a>6.溢出的文字省略号显示</h1><h2 id="单行文本溢出显示省略号"><a href="#单行文本溢出显示省略号" class="headerlink" title="单行文本溢出显示省略号"></a>单行文本溢出显示省略号</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062149584.jpg"></p><p><strong>单行文本溢出显示省略号–必须满足三个条件</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1. 先强制一行内显示文本*/</span> </span><br><span class="line"><span class="attribute">white-space</span>: nowrap; （ 默认 <span class="attribute">normal</span> 自动换行） </span><br><span class="line"><span class="comment">/*2. 超出的部分隐藏*/</span> </span><br><span class="line"><span class="attribute">overflow</span>: hidden; </span><br><span class="line"><span class="comment">/*3. 文字用省略号替代超出的部分*/</span> </span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br></pre></td></tr></table></figure><h2 id="多行文本溢出显示省略号"><a href="#多行文本溢出显示省略号" class="headerlink" title="多行文本溢出显示省略号"></a><strong>多行文本溢出显示省略号</strong></h2><p>多行文本溢出显示省略号，有较大兼容性问题， 适合于webKit浏览器或移动端（移动端大部分是webkit内核）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"><span class="comment">/* 弹性伸缩盒子模型显示 */</span></span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line"><span class="comment">/* 限制在一个块元素显示的文本的行数 */</span></span><br><span class="line">-webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line"><span class="comment">/* 设置或检索伸缩盒对象的子元素的排列方式 */</span></span><br><span class="line">-webkit-box-orient: vertical;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062150212.jpg"></p><p><strong>更推荐让后台人员来做这个效果，因为后台人员可以设置显示多少个字，操作更简单。</strong></p><h1 id="7-常见布局技巧"><a href="#7-常见布局技巧" class="headerlink" title="7.常见布局技巧"></a>7.常见布局技巧</h1><p><strong>巧妙利用一个技术更快更好的布局：</strong></p><ol><li>margin负值的运用</li><li>文字围绕浮动元素</li><li>行内块的巧妙运用</li><li>CSS三角强化</li></ol><h2 id="1-margin负值运用"><a href="#1-margin负值运用" class="headerlink" title="1.margin负值运用"></a>1.margin负值运用</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062154337.png"></p><ol><li>让每个盒子margin 往左侧移动 -1px 正好压住相邻盒子边框</li><li>鼠标经过某个盒子的时候，提高当前盒子的层级即可（如果没有有定位，则加相对定位（保留位置），如果有定位，则加z-index）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062154125.png"></p><h2 id="2-文字围绕浮动元素"><a href="#2-文字围绕浮动元素" class="headerlink" title="2.文字围绕浮动元素"></a>2.文字围绕浮动元素</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062156386.png"></p><h2 id="3-行内块巧妙运用"><a href="#3-行内块巧妙运用" class="headerlink" title="3.行内块巧妙运用"></a>3.行内块巧妙运用</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062156591.jpg"></p><p><strong>页码在页面中间显示:</strong></p><ol><li>把这些链接盒子转换为行内块， 之后给父级指定 text-align: center;</li><li>利用行内块元素中间有缝隙，并且给父级添加 text-align: center; 行内块元素会水平会居中</li></ol><h2 id="4-CSS-三角强化"><a href="#4-CSS-三角强化" class="headerlink" title="4.CSS 三角强化"></a>4.CSS 三角强化</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062158921.png"></p><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border-color</span>: transparent red transparent transparent;</span><br><span class="line"><span class="attribute">border-style</span>: solid;</span><br><span class="line"><span class="attribute">border-width</span>: <span class="number">22px</span> <span class="number">8px</span> <span class="number">0</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h1 id="8-CSS-初始化"><a href="#8-CSS-初始化" class="headerlink" title="8.CSS 初始化"></a>8.CSS 初始化</h1><blockquote><p>不同浏览器对有些标签的默认值是不同的，为了消除不同浏览器对HTML文本呈现的差异，照顾浏览器的兼容，我们需要对CSS 初始化。</p><p>简单理解： CSS初始化是指重设浏览器的样式。 (也称为CSS reset）</p><p>每个网页都必须首先进行 CSS初始化。</p></blockquote><p>这里我们以 京东CSS初始化代码为例。</p><p><strong>Unicode编码字体：</strong></p><p>把中文字体的名称用相应的Unicode编码来代替，这样就可以有效的避免浏览器解释CSS代码时候出现乱码的问题。</p><p>比如：</p><p>黑体 \9ED1\4F53</p><p>宋体 \5B8B\4F53</p><p>微软雅黑 \5FAE\8F6F\96C5\9ED1</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css第五天学习笔记【持续更新】</title>
      <link href="/2021/09/06/css%E7%AC%AC%E4%BA%94%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/"/>
      <url>/2021/09/06/css%E7%AC%AC%E4%BA%94%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>CSS第五天大纲：</strong></p><ul><li><strong>定位</strong></li><li>综合案例</li><li>网页布局总结</li><li>元素的显示与隐藏</li></ul><span id="more"></span><h1 id="1-定位"><a href="#1-定位" class="headerlink" title="1.定位"></a>1.定位</h1><h2 id="1-1为什么需要定位"><a href="#1-1为什么需要定位" class="headerlink" title="1.1为什么需要定位"></a>1.1为什么需要定位</h2><p>提问： 以下情况使用标准流或者浮动能实现吗？</p><p>1.<strong>某个元素可以自由的在一个盒子内移动位置，并且压住其他盒子</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061909948.jpg"></p><p><strong>2.当我们滚动窗口的时候，盒子是固定屏幕某个位置的。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061910060.jpg"></p><p>以上效果，标准流或浮动都无法快速实现，此时<strong>需要定位来实现</strong>。</p><p>所以：</p><ol><li>浮动可以让多个块级盒子一行没有缝隙排列显示， 经常用于横向排列盒子。</li><li>定位则是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子。</li></ol><h2 id="1-2定位组成"><a href="#1-2定位组成" class="headerlink" title="1.2定位组成"></a>1.2定位组成</h2><p><strong>定位</strong>：将盒子<strong>定</strong>在某一个<strong>位</strong>置，所以<strong>定位也是在摆放盒子</strong>， <strong>按照定位的方式移动盒子</strong>。</p><p>定位 = 定位模式 + 边偏移 。</p><p><strong>定位模式</strong>用于指定一个元素在文档中的定位方式。<strong>边偏移</strong>则决定了该元素的最终位置。</p><h3 id="1-定位模式"><a href="#1-定位模式" class="headerlink" title="1.定位模式"></a>1.定位模式</h3><p>定位模式决定元素的定位方式 ，它通过 CSS 的 <strong>position</strong> 属性来设置，其值可以分为四个：</p><table><thead><tr><th>值</th><th>语义</th></tr></thead><tbody><tr><td>static</td><td><strong>静态</strong>定位</td></tr><tr><td>relative</td><td><strong>相对</strong>定位</td></tr><tr><td>absolute</td><td><strong>绝对</strong>定位</td></tr><tr><td>fixed</td><td><strong>固定</strong>定位</td></tr></tbody></table><h3 id="2-边偏移"><a href="#2-边偏移" class="headerlink" title="2.边偏移"></a>2.边偏移</h3><p>边偏移就是定位的盒子移动到最终位置。有 top、bottom、left 和 right 4 个属性。</p><table><thead><tr><th>边偏移属性</th><th>示例</th><th>描述</th></tr></thead><tbody><tr><td>top</td><td>top: 80px</td><td><strong>顶端</strong>偏移量，定义元素相对于其父元素<strong>上边线的距离</strong>。</td></tr><tr><td>bottom</td><td>bottom: 80px</td><td><strong>底部</strong>偏移量，定义元素相对于其父元素<strong>下边线的距离</strong>。</td></tr><tr><td>left</td><td>left: 80px</td><td><strong>左侧</strong>偏移量，定义元素相对于其父元素左<strong>边线的距离</strong>。</td></tr><tr><td>right</td><td>right: 80px</td><td><strong>右侧</strong>偏移量，定义元素相对于其父元素<strong>右边线的距离</strong>。</td></tr></tbody></table><h3 id="1-3静态定位-static（了解）"><a href="#1-3静态定位-static（了解）" class="headerlink" title="1.3静态定位 static（了解）"></a>1.3静态定位 static（了解）</h3><p>静态定位是元素的<strong>默认定位方式，无定位的意思</strong>。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: static; &#125;</span><br></pre></td></tr></table></figure><ul><li>静态定位按照标准流特性摆放位置，它没有边偏移</li><li>静态定位在布局时很少用到</li></ul><h3 id="1-4相对定位-relative（重要）"><a href="#1-4相对定位-relative（重要）" class="headerlink" title="1.4相对定位 relative（重要）"></a>1.4相对定位 relative（重要）</h3><p><code>相对定位</code>是元素在移动位置的时候，是相对于它<strong>原来的位置</strong>来说的（自恋型）。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: relative; &#125;</span><br></pre></td></tr></table></figure><p>相对定位的特点：（务必记住）</p><ol><li>它是相对于自己原来的位置来移动的（移动位置的时候参照点是自己原来的位置）。</li><li><strong>原来</strong>在标准流的<strong>位置</strong>继续占有，后面的盒子仍然以标准流的方式对待它。</li></ol><p>因此，相对定位并没有脱标。它最典型的应用是给绝对定位当爹的。。。</p><h3 id="1-5绝对定位-absolute（重要）"><a href="#1-5绝对定位-absolute（重要）" class="headerlink" title="1.5绝对定位 absolute（重要）"></a>1.5绝对定位 absolute（重要）</h3><p><code>绝对定位</code>是元素在移动位置的时候，是相对于它<strong>祖先元素</strong>来说的（拼爹型）。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: absolute; &#125;</span><br></pre></td></tr></table></figure><p>绝对定位的特点：（务必记住）</p><ol><li>如果<strong>没有祖先元素</strong>或者<strong>祖先元素没有定位</strong>，则以浏览器为准定位（Document 文档）。</li><li>如果祖先元素有定位（相对、绝对、固定定位），则以最近一级的有定位祖先元素为参考点移动位置。</li><li>绝对定位<strong>不再占有原先的位置</strong>。（脱标）</li></ol><p>所以绝对定位是脱离标准流的。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol><li>绝对定位和相对定位到底有什么使用场景呢？</li><li>为什么说相对定位给绝对定位当爹的呢？</li></ol><h3 id="1-6-子绝父相的由来"><a href="#1-6-子绝父相的由来" class="headerlink" title="1.6 子绝父相的由来"></a>1.6 子绝父相的由来</h3><p>弄清楚这个口诀，就明白了绝对定位和相对定位的使用场景。</p><p>这个“子绝父相”太重要了，是我们学习定位的口诀，是定位中最常用的一种方式这句话的意思是：<strong>子级是绝对定位的话，父级要用相对定位</strong>。</p><ol><li>子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子。</li><li>父盒子需要加定位限制子盒子在父盒子内显示。</li><li>父盒子布局时，需要占有位置，因此父亲只能是相对定位。</li></ol><p>这就是子绝父相的由来，所以<strong>相对定位经常用来作为绝对定位的父级</strong>。</p><p>总结： <strong>因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位</strong><br>当然，子绝父相不是永远不变的，如果父元素不需要占有位置，<strong>子绝父绝</strong>也会遇到。</p><h3 id="案例：-学成在线-hot-new模块添加"><a href="#案例：-学成在线-hot-new模块添加" class="headerlink" title="案例： 学成在线-hot new模块添加"></a>案例： 学成在线-hot new模块添加</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061923455.jpg"></p><h3 id="1-7固定定位-fixed-（重要）"><a href="#1-7固定定位-fixed-（重要）" class="headerlink" title="1.7固定定位 fixed （重要）"></a>1.7固定定位 fixed （重要）</h3><p><code>固定定位</code>是元素<strong>固定于浏览器可视区的位置</strong>。主要使用场景： 可以在浏览器页面滚动时元素的位置不会改变。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: fixed; &#125;</span><br></pre></td></tr></table></figure><p>固定定位的特点：（务必记住）</p><p>1.以浏览器的可视窗口为参照点移动元素。</p><ul><li>跟父元素没有任何关系</li><li>不随滚动条滚动。</li></ul><p>2.固定定位<strong>不在占有原先的位置</strong>。</p><p>固定定位也是脱标的，其实固定定位也可以看做是一种特殊的绝对定位。</p><h4 id="课后作业：两侧固定的广告"><a href="#课后作业：两侧固定的广告" class="headerlink" title="课后作业：两侧固定的广告"></a>课后作业：两侧固定的广告</h4><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061928067.jpg"></p><p>​    </p><p><strong>固定定位小技巧： 固定在版心右侧位置。</strong></p><p>小算法：</p><ol><li>让固定定位的盒子 left: 50%. 走到浏览器可视区（也可以看做版心） 的一半位置。</li><li>让固定定位的盒子 margin-left: 版心宽度的一半距离。多走版心宽度的一半位置就可以让固定定位的盒子贴着版心右侧对齐了。</li></ol><h3 id="1-8粘性定位-sticky（了解）"><a href="#1-8粘性定位-sticky（了解）" class="headerlink" title="1.8粘性定位 sticky（了解）"></a>1.8粘性定位 sticky（了解）</h3><p><code>粘性定位</code>可以被认为是相对定位和固定定位的混合。 Sticky 粘性的</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: sticky; <span class="attribute">top</span>: <span class="number">10px</span>; &#125;</span><br></pre></td></tr></table></figure><p>粘性定位的特点：</p><ol><li>以浏览器的可视窗口为参照点移动元素（固定定位特点）</li><li>粘性定位<strong>占有原先的位置</strong>（相对定位特点）</li><li>必须添加 top 、left、right、bottom 其中一个才有效，跟页面滚动搭配使用。 兼容性较差，IE 不支持。</li></ol><h3 id="1-9定位的总结"><a href="#1-9定位的总结" class="headerlink" title="1.9定位的总结"></a>1.9定位的总结</h3><table><thead><tr><th align="center">定位模式</th><th align="center">是否脱标</th><th align="center">移动位置</th><th align="center">是否常用</th></tr></thead><tbody><tr><td align="center">static 静态定位</td><td align="center">否</td><td align="center">不能使用边偏移</td><td align="center">很少</td></tr><tr><td align="center"><strong>relative 相对定位</strong></td><td align="center"><strong>否 (占有位置)</strong></td><td align="center"><strong>相对于自身位置移动</strong></td><td align="center"><strong>常用</strong></td></tr><tr><td align="center"><strong>absolute绝对定位</strong></td><td align="center"><strong>是（不占有位置）</strong></td><td align="center"><strong>带有定位的父级</strong></td><td align="center"><strong>常用</strong></td></tr><tr><td align="center">fixed 固定定位****</td><td align="center"><strong>是（不占有位置）</strong></td><td align="center"><strong>浏览器可视区</strong></td><td align="center"><strong>常用</strong></td></tr><tr><td align="center">sticky 粘性定位</td><td align="center">否 (占有位置)</td><td align="center">浏览器可视区</td><td align="center">当前阶段少</td></tr></tbody></table><ol><li>一定记住 相对定位、固定定位、绝对定位 两个大的特点： 1. 是否占有位置（脱标否） 2. 以谁为基准点移动位置。</li><li>学习定位重点学会子绝父相。</li></ol><h3 id="1-10定位叠放次序-z-index"><a href="#1-10定位叠放次序-z-index" class="headerlink" title="1.10定位叠放次序 z-index"></a>1.10定位叠放次序 z-index</h3><p>在使用定位布局时，可能会出现盒子重叠的情况。此时，可以使用 <strong>z-index</strong> 来控制盒子的前后次序 (z轴)</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">z-index</span>: <span class="number">1</span>; &#125;</span><br></pre></td></tr></table></figure><ul><li>数值可以是正整数、负整数或 0, 默认是 auto，数值越大，盒子越靠上</li><li>如果属性值相同，则按照书写顺序，后来居上</li><li>数字后面不能加单位</li><li>只有定位的盒子才有 z-index 属性</li></ul><h3 id="1-11定位的拓展"><a href="#1-11定位的拓展" class="headerlink" title="1.11定位的拓展"></a>1.11定位的拓展</h3><h4 id="1-绝对定位的盒子居中"><a href="#1-绝对定位的盒子居中" class="headerlink" title="1.绝对定位的盒子居中"></a>1.绝对定位的盒子居中</h4><p>加了绝对定位的盒子不能通过 <strong>margin:0 auto</strong> 水平居中，但是可以通过以下计算方法实现水平和垂直居中。</p><ol><li><p>left: 50%;：让盒子的左侧移动到父级元素的水平中心位置。</p></li><li><p>margin-left: -100px;：让盒子向左移动自身宽度的一半。</p></li></ol><h4 id="2-定位特殊特性"><a href="#2-定位特殊特性" class="headerlink" title="2.定位特殊特性"></a>2.定位特殊特性</h4><p>绝对定位和固定定位也和浮动类似。</p><ol><li>行内元素添加绝对或者固定定位，可以直接设置高度和宽度。</li><li>块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。</li></ol><h4 id="3-脱标的盒子不会触发外边距塌陷"><a href="#3-脱标的盒子不会触发外边距塌陷" class="headerlink" title="3.脱标的盒子不会触发外边距塌陷"></a>3.脱标的盒子不会触发外边距塌陷</h4><p>浮动元素、绝对定位(固定定位）元素的都不会触发外边距合并的问题。</p><h4 id="4-绝对定位（固定定位）会完全压住盒子"><a href="#4-绝对定位（固定定位）会完全压住盒子" class="headerlink" title="4.绝对定位（固定定位）会完全压住盒子"></a>4.绝对定位（固定定位）会完全压住盒子</h4><p>浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）</p><p>但是绝对定位（固定定位） 会压住下面标准流所有的内容。</p><p>浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。 文字会围绕浮动元素</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061937980.jpg"></p><h1 id="2-综合案例"><a href="#2-综合案例" class="headerlink" title="2.综合案例"></a>2.综合案例</h1><h2 id="案例：淘宝焦点图布局"><a href="#案例：淘宝焦点图布局" class="headerlink" title="案例：淘宝焦点图布局"></a>案例：淘宝焦点图布局</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061938740.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061938885.png"></p><h2 id="案例：淘宝焦点图布局制作"><a href="#案例：淘宝焦点图布局制作" class="headerlink" title="案例：淘宝焦点图布局制作"></a>案例：淘宝焦点图布局制作</h2><ol><li>大盒子我们类名为： tb-promo 淘宝广告</li><li>里面先放一张图片。</li><li>左右两个按钮 用链接就好了。 左箭头 prev 右箭头 next</li><li>底侧小圆点ul 继续做。 类名为 promo-nav</li></ol><h1 id="3-网页布局总结"><a href="#3-网页布局总结" class="headerlink" title="3.网页布局总结"></a>3.网页布局总结</h1><p>通过盒子模型，清楚知道大部分html标签是一个盒子。</p><p>通过CSS浮动、定位 可以让每个盒子排列成为网页。</p><p>一个完整的网页，是标准流、浮动、定位一起完成布局的，每个都有自己的专门用法。</p><p>1.标准流</p><p>可以让盒子上下排列或者左右排列，<strong>垂直的块级盒子显示就用标准流布局。</strong></p><p>2.浮动</p><p>可以让多个块级元素一行显示或者左右对齐盒子，<strong>多个块级盒子水平显示就用浮动布局。</strong></p><p>3.定位</p><p>定位最大的特点是有层叠的概念，就是可以让多个盒子前后叠压来显示。<strong>如果元素自由在某个盒子内移动就用定位布局。</strong></p><h1 id="4-元素的显示与隐藏"><a href="#4-元素的显示与隐藏" class="headerlink" title="4.元素的显示与隐藏"></a>4.元素的显示与隐藏</h1><p>类似网站广告，当我们点击关闭就不见了，但是我们重新刷新页面，会重新出现！</p><p>本质：<strong>让一个元素在页面中隐藏或者显示出来</strong>。</p><ol><li>display 显示隐藏</li><li>visibility 显示隐藏</li><li>overflow 溢出显示隐藏</li></ol><h2 id="4-1display-属性"><a href="#4-1display-属性" class="headerlink" title="4.1display 属性"></a>4.1display 属性</h2><p>display 属性用于设置一个元素应如何显示。</p><ul><li>display: none ；隐藏对象</li><li>display：block ；除了转换为块级元素之外，同时还有显示元素的意思</li></ul><p><strong>display 隐藏元素后，不再占有原来的位置。</strong></p><p>后面应用及其广泛，搭配 JS 可以做很多的网页特效。</p><h2 id="4-2visibility-可见性"><a href="#4-2visibility-可见性" class="headerlink" title="4.2visibility 可见性"></a>4.2visibility 可见性</h2><p><strong>visibility</strong> 属性用于指定一个元素应可见还是隐藏。</p><ul><li>visibility：visible ; 元素可视</li><li>visibility：hidden; 元素隐藏</li></ul><p><strong>visibility 隐藏元素后，继续占有原来的位置。</strong></p><p>如果隐藏元素想要原来位置， 就用 visibility：hidden</p><p>如果隐藏元素不想要原来位置， 就用 display：none (用处更多 重点）</p><h2 id="4-3overflow-溢出"><a href="#4-3overflow-溢出" class="headerlink" title="4.3overflow 溢出"></a>4.3overflow 溢出</h2><p><strong>overflow</strong> 属性指定了如果内容溢出一个元素的框（超过其指定高度及宽度） 时，会发生什么。</p><table><thead><tr><th><strong>属性值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><strong>visible</strong></td><td>不剪切内容也不添加滚动条</td></tr><tr><td><strong>hidden</strong></td><td>不显示超过对象尺寸的内容，超出的部分隐藏掉</td></tr><tr><td><strong>scroll</strong></td><td>不管超出内容否，总是显示滚动条</td></tr><tr><td><strong>auto</strong></td><td>超出自动显示滚动条，不超出不显示滚动条</td></tr></tbody></table><p>一般情况下，我们都不想让溢出的内容显示出来，因为溢出的部分会影响布局。</p><p>但是如果有定位的盒子， 请慎用overflow:hidden 因为它会隐藏多余的部分。</p><ol><li>display 显示隐藏元素 但是不保留位置</li><li>visibility 显示隐藏元素 但是保留原来的位置</li><li>overflow 溢出显示隐藏 但是只是对于溢出的部分处理</li></ol><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><p><strong>案例：土豆网鼠标经过显示遮罩</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061958819.jpg"></p><ol><li>练习元素的显示与隐藏</li><li>练习元素的定位</li></ol><p>核心原理： </p><ul><li>原先半透明的黑色遮罩看不见， 鼠标经过 大盒子，就显示出来。</li><li>遮罩的盒子不占有位置， 就需要用绝对定位 和 display 配合使用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用油猴脚本刷网课、追剧、下资料</title>
      <link href="/2021/09/05/%E4%BD%BF%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%88%B7%E7%BD%91%E8%AF%BE%E3%80%81%E8%BF%BD%E5%89%A7%E3%80%81%E4%B8%8B%E8%B5%84%E6%96%99/"/>
      <url>/2021/09/05/%E4%BD%BF%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%88%B7%E7%BD%91%E8%AF%BE%E3%80%81%E8%BF%BD%E5%89%A7%E3%80%81%E4%B8%8B%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<p><strong>使用油猴脚本刷网课、追剧、下资料，支持超星（学习通）、智慧树、云课堂智慧职教、慕课MOOC等平台</strong></p><span id="more"></span><h1 id="什么是油猴脚本"><a href="#什么是油猴脚本" class="headerlink" title="什么是油猴脚本"></a>什么是油猴脚本</h1><blockquote><p>油猴脚本是一款免费的浏览器扩展和最为流行的用户脚本管理器，它适用于 Chrome, Microsoft Edge, Safari, Opera Next, 和 Firefox。</p><p>tampermonkey俗称油猴，油猴是一款免费实用且强悍的浏览器插件，它可以实现各种意想不到的功能。如观看VIP电影、解除网页防止复制粘贴功能、直接下载云盘大文件、自定义网盘分享密码、下载微软官网隐藏的ISO系统镜像等等。</p></blockquote><h1 id="安装油猴脚本"><a href="#安装油猴脚本" class="headerlink" title="安装油猴脚本"></a><strong>安装油猴脚本</strong></h1><p>打开网站：<a href="https://www.tampermonkey.net/">Tampermonkey • 首页</a></p><p>然后选择自己浏览器的版本安装，我这里以Win10自带的浏览器Edge为例</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720004.jpg" alt="下载油猴脚本"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720005.jpg" alt="获取"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720003.png" alt="添加扩展"></p><p>恭喜，到此你就已经成功为你的浏览器安装上了油猴脚本哦！</p><h1 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a><strong>安装脚本</strong></h1><p><strong>脚本很多，不只是刷网课，还可以下载文档，下载视频，甚至解锁b站大会员… 下面以刷网课为例演示，其他脚本同理。</strong></p><p>脚本下载平台：</p><ul><li><a href="https://www.userscript.zone/?utm_source=tm.net&utm_medium=scripts">Userscript.Zone Search</a></li><li><a href="https://gist.github.com/search?l=JavaScript&o=desc&q=%22==UserScript==%22&s=updated"> Github 和 Gist 中 </a></li><li><a href="https://openuserjs.org/">OpenUserJS</a> </li><li><a href="https://greasyfork.org/">GreasyFork</a></li></ul><p><strong>下面以比较常用的GreasyFork为例，其他同理。</strong></p><p>点击进入GreasyFork脚本下载平台</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720006.jpg" alt="获取新脚本"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720007.jpg" alt="打开GreasyFork"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720008.jpg"></p><p>刷网课的脚本有很多，这里给大家推荐两个我自用的，题库比较全，比较稳定的脚本，更多请百度哦：</p><ul><li>超星学习通小工具-可考试-可答题（稳定题库）</li><li><a href="https://greasyfork.org/zh-CN/scripts/418573-%E6%99%BA%E6%85%A7%E6%A0%91%E7%9F%A5%E5%88%B0%E7%BD%91%E8%AF%BE%E5%8A%A9%E6%89%8B-%E6%94%AF%E6%8C%81%E5%9B%BE%E7%89%87%E9%A2%98-%E5%8F%AF%E4%BD%9C%E4%B8%9A-%E5%8F%AF%E8%80%83%E8%AF%95">智慧树知到网课助手(支持图片题)(可作业)(可考试)</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720009.jpg" alt="选择脚本，打开"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720010.jpg" alt="安装此脚本"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720011.jpg" alt="安装"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720018.png" alt="成功安装"></p><p>恭喜，到此你就已经成功为油猴脚本安装上了自己喜欢脚本，下面快快跟我一起愉快的使用吧！</p><h1 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h1><p><strong>脚本很多，不只是刷网课，还可以下载文档，下载视频，甚至解锁b站大会员… 下面以刷网课为例演示，其他脚本同理。</strong></p><h2 id="刷视频"><a href="#刷视频" class="headerlink" title="刷视频"></a><strong>刷视频</strong></h2><p>接着就可以开始自动刷网课了，视频支持自动跳转哦~ </p><p>打开智慧树网站登录自己的账号：<a href="https://www.zhihuishu.com/">智慧树网_全球大型的学分课程运营服务平台 (zhihuishu.com)</a></p><p>打开我的课堂，选择要刷的课点进去</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720012.jpg" alt="从右上角打开我的课堂"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720013.jpg" alt="选择要刷的课点进去"></p><p>首次打开，如果弹出了下面这个界面，选择总是允许即可~</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051730955.png" alt="这个脚本名称不用在意，因为我不是第一次用，拿的别的图演示，都是一样的。"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720014.jpg" alt="到此就算成功进入刷视频了"></p><p>默认1.5倍速，静音播放，不过这些设置都是可以通过修改脚本设置来进行修改的，详见管理脚本。</p><p>然后就可以干其他事去了</p><h2 id="考试、作业"><a href="#考试、作业" class="headerlink" title="考试、作业"></a><strong>考试、作业</strong></h2><p>考试作业也是，打开作业考试的界面，脚本会自动响应并开启。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720013.jpg" alt="选择要刷的网课"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720019.png" alt="选择要刷的作业和考试内容"></p><p>脚本会自动答题，不用自己点提交，两分钟后自动提交（避免时间太短判断为作弊）。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720015.jpg"></p><p>题库正确率90%以上，基本都是满分，下面是效果图。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720020.png"></p><h2 id="其他操作同理"><a href="#其他操作同理" class="headerlink" title="其他操作同理"></a>其他操作同理</h2><p><strong>脚本很多，不只是刷网课，还可以下载文档，下载视频，甚至解锁b站大会员… 下面以刷网课为例演示，其他脚本同理。</strong></p><h1 id="管理脚本"><a href="#管理脚本" class="headerlink" title="管理脚本"></a>管理脚本</h1><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720016.jpg" alt="选择管理面板"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051720017.jpg"></p><h1 id="更新脚本"><a href="#更新脚本" class="headerlink" title="更新脚本"></a>更新脚本</h1><p>一般每次你打开浏览器的时候，油猴脚本都会自动检测一下当前已安装的脚本是不是最新，如果不是的话会提示你更新，你点击更新就可以啦。由于目前我没有要更新的脚本，就不演示啦~~ 不懂得评论区留言哦~</p><h1 id="更多内容"><a href="#更多内容" class="headerlink" title="更多内容"></a>更多内容</h1><p>更多内容，可以自行百度，b站，或者等我更新…</p>]]></content>
      
      
      <categories>
          
          <category> 油猴脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 油猴脚本 </tag>
            
            <tag> tampermonkey </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css第四天学习笔记【持续更新】</title>
      <link href="/2021/09/05/css%E7%AC%AC%E5%9B%9B%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/"/>
      <url>/2021/09/05/css%E7%AC%AC%E5%9B%9B%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>CSS第四天大纲：</strong></p><ul><li><strong>浮动</strong></li><li>常见页面布局</li><li>清除浮动</li><li>PS 切图</li><li>学成在线案例</li></ul><span id="more"></span><h1 id="1-浮动（float"><a href="#1-浮动（float" class="headerlink" title="1.浮动（float)"></a>1.浮动（float)</h1><h2 id="1-1传统网页布局的三种方式"><a href="#1-1传统网页布局的三种方式" class="headerlink" title="1.1传统网页布局的三种方式"></a>1.1传统网页布局的三种方式</h2><p>网页布局的本质——用 CSS 来摆放盒子。 把盒子摆放到相应位置。</p><p>CSS 提供了三种传统布局方式(简单说,就是盒子如何进行排列顺序)：</p><ul><li>普通流（标准流）</li><li>浮动</li><li>定位</li></ul><h2 id="1-2标准流（普通流-文档流）"><a href="#1-2标准流（普通流-文档流）" class="headerlink" title="1.2标准流（普通流/文档流）"></a>1.2标准流（普通流/文档流）</h2><p><strong>所谓的标准流: 就是标签按照规定好默认方式排列。</strong></p><p>1.块级元素会独占一行，从上向下顺序排列。</p><ul><li>常用元素：div、hr、p、h1~h6、ul、ol、dl、form、table</li></ul><p>2.行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行。</p><ul><li>常用元素：span、a、i、em 等</li></ul><p>以上都是标准流布局，我们前面学习的就是标准流，<strong>标准流是最基本的布局方式</strong>。</p><p>这三种布局方式都是用来摆放盒子的，盒子摆放到合适位置，布局自然就完成了。</p><p><strong>注意：实际开发中，一个页面基本都包含了这三种布局方式（后面移动端学习新的布局方式） 。</strong></p><h2 id="1-3为什么需要浮动？"><a href="#1-3为什么需要浮动？" class="headerlink" title="1.3为什么需要浮动？"></a>1.3为什么需要浮动？</h2><p>提问：我们用标准流能很方便的实现如下效果吗？</p><p>1.如何让多个块级盒子(div)水平排列成一行？</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051429587.jpg"></p><p>比较难，虽然转换为行内块元素可以实现一行显示，但是他们之间会有大的空白缝隙，很难控制。</p><p>2.如何实现两个盒子的左右对齐？</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051430958.jpg"></p><p><strong>总结：</strong></p><p>有很多的布局效果，标准流没有办法完成，此时就可以利用浮动完成布局。 因为浮动可以改变元素标签默认的排列方式。</p><p>浮动最典型的应用：可以让多个块级元素一行内排列显示。</p><p>网页布局第一准则：<strong>多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动</strong>。</p><h2 id="1-4什么是浮动？"><a href="#1-4什么是浮动？" class="headerlink" title="1.4什么是浮动？"></a>1.4什么是浮动？</h2><p><strong>float</strong> 属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">float</span>: 属性值; &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><strong>none</strong></td><td>元素不浮动（<strong>默认值</strong>）</td></tr><tr><td><strong>left</strong></td><td>元素向<strong>左</strong>浮动</td></tr><tr><td>right</td><td>元素向<strong>右</strong>浮动</td></tr></tbody></table><h2 id="1-5浮动特性（重难点）"><a href="#1-5浮动特性（重难点）" class="headerlink" title="1.5浮动特性（重难点）"></a>1.5浮动特性（重难点）</h2><p>加了浮动之后的元素,会具有很多特性,需要我们掌握的。</p><ul><li><strong>浮动元素会脱离标准流(脱标)</strong></li><li>浮动的元素会一行内显示并且元素顶部对齐</li><li>浮动的元素会具有行内块元素的特性</li></ul><p>1.设置了浮动（float）的元素最重要特性：</p><ul><li>脱离标准普通流的控制（浮） 移动到指定位置（动）, （俗称<strong>脱标</strong>）</li><li>浮动的盒子<strong>不再保留原先的位置</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051436228.png"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051437854.png"></p><p>2.如果多个盒子都设置了浮动，则它们会按照属性值<strong>一行内显示并且顶端对齐排列</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051438405.png"></p><p><strong>注意：</strong> 浮动的元素是互相贴靠在一起的（不会有缝隙），如果父级宽度装不下这些浮动的盒子， 多出的盒子会另起一行对齐。</p><p>3.浮动元素会具有行内块元素特性。</p><p>任何元素都可以浮动。不管原先是什么模式的元素，添加浮动之后具有<strong>行内块元素</strong>相似的特性。</p><ul><li>如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定</li><li>浮动的盒子中间是没有缝隙的，是紧挨着一起的</li><li>行内元素同理</li></ul><h2 id="1-6浮动元素经常和标准流父级搭配使用"><a href="#1-6浮动元素经常和标准流父级搭配使用" class="headerlink" title="1.6浮动元素经常和标准流父级搭配使用"></a>1.6浮动元素经常和标准流父级搭配使用</h2><p>为了约束浮动元素位置, 我们网页布局一般采取的策略是:</p><p><strong>先用标准流的父元素排列上下位置, 之后内部子元素采取浮动排列左右位置. 符合网页布局第一准侧。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051440424.png"></p><h2 id="案例：小米布局案例"><a href="#案例：小米布局案例" class="headerlink" title="案例：小米布局案例"></a>案例：小米布局案例</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051441034.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051441511.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051442434.jpg"></p><p><strong>网页布局第二准侧：先设置盒子的大小, 之后设置盒子的位置。</strong></p><h1 id="2-常见网页布局"><a href="#2-常见网页布局" class="headerlink" title="2.常见网页布局"></a>2.常见网页布局</h1><h2 id="2-1常见网页布局"><a href="#2-1常见网页布局" class="headerlink" title="2.1常见网页布局"></a>2.1常见网页布局</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051443682.png"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051444071.jpg"></p><h2 id="2-2浮动布局注意点"><a href="#2-2浮动布局注意点" class="headerlink" title="2.2浮动布局注意点"></a>2.2浮动布局注意点</h2><ol><li><p>浮动和标准流的父盒子搭配。</p><p><strong>先用标准流的父元素排列上下位置, 之后内部子元素采取浮动排列左右位置</strong></p></li><li><p>一个元素浮动了，理论上其余的兄弟元素也要浮动。</p><p>一个盒子里面有多个子盒子，如果其中一个盒子浮动了，那么其他兄弟也应该浮动，以防止引起问题。</p><p><strong>浮动的盒子只会影响浮动盒子后面的标准流,不会影响前面的标准流。</strong></p></li></ol><p><strong>思考题:</strong></p><p>我们前面浮动元素有一个标准流的父元素, 他们有一个共同的特点,都是有高度的。</p><p>但是, 所有的父盒子都必须有高度吗?</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051446494.png"></p><p>理想中的状态, 让子盒子撑开父亲. 有多少孩子,我父盒子就有多高。</p><p>但是不给父盒子高度会有问题吗?…..</p><h1 id="3-清除浮动"><a href="#3-清除浮动" class="headerlink" title="3.清除浮动"></a>3.清除浮动</h1><h2 id="3-1为什么需要清除浮动？"><a href="#3-1为什么需要清除浮动？" class="headerlink" title="3.1为什么需要清除浮动？"></a>3.1为什么需要清除浮动？</h2><p>由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的标准流盒子。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051447758.png"></p><ul><li>由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响</li></ul><h2 id="3-2清除浮动本质"><a href="#3-2清除浮动本质" class="headerlink" title="3.2清除浮动本质"></a>3.2清除浮动本质</h2><ul><li>清除浮动的本质是清除浮动元素造成的影响</li><li>如果父盒子本身有高度，则不需要清除浮动</li><li><strong>清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了</strong></li></ul><h2 id="3-3清除浮动"><a href="#3-3清除浮动" class="headerlink" title="3.3清除浮动"></a>3.3清除浮动</h2><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器&#123;<span class="attribute">clear</span>:属性值;&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>left</td><td>不允许左侧有浮动元素（清除左侧浮动的影响）</td></tr><tr><td>right</td><td>不允许右侧有浮动元素（清除右侧浮动的影响）</td></tr><tr><td>both</td><td>同时清除左右两侧浮动的影响</td></tr></tbody></table><p>我们实际工作中， 几乎只用 <strong>clear: both;</strong></p><p><strong>清除浮动的策略是: 闭合浮动。</strong></p><h3 id="清除浮动方法"><a href="#清除浮动方法" class="headerlink" title="清除浮动方法"></a><strong>清除浮动方法</strong></h3><ul><li><code>额外标签法</code>也称为隔墙法，是 W3C 推荐的做法。</li><li><strong>父级添加 overflow 属性</strong></li><li><strong>父级添加after伪元素</strong></li><li><strong>父级添加双伪元素</strong></li></ul><h4 id="1-清除浮动-——-额外标签法"><a href="#1-清除浮动-——-额外标签法" class="headerlink" title="1.清除浮动 —— 额外标签法"></a>1.清除浮动 —— 额外标签法</h4><p><code>额外标签法</code>也称为<strong>隔墙法</strong>，是 W3C 推荐的做法。</p><p><code>额外标签法</code>会在浮动元素末尾添加一个空的标签。例如<code> &lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;</code>，或者其他标签（如<code>&lt;br /&gt;</code>等）。</p><ul><li>优点： 通俗易懂，书写方便</li><li>缺点： 添加许多无意义的标签，结构化较差</li></ul><p><strong>注意： 要求这个新的空标签必须是块级元素。</strong></p><p><strong>总结:</strong></p><ol><li><p>清除浮动本质是?</p><p><strong>清除浮动的本质是清除浮动元素脱离标准流造成的影响</strong></p></li><li><p>清除浮动策略是?</p><p><strong>闭合浮动， 只让浮动在父盒子内部影响,不影响父盒子外面的其他盒子。</strong></p></li><li><p>额外标签法?</p><p><strong>隔墙法，就是在最后一个浮动的子元素后面添加一个额外标签，添加 清除浮动样式。</strong></p><p><strong>实际工作可能会遇到,但是不常用</strong></p></li></ol><h4 id="2-清除浮动-——-父级添加-overflow"><a href="#2-清除浮动-——-父级添加-overflow" class="headerlink" title="2.清除浮动 —— 父级添加 overflow"></a>2.清除浮动 —— 父级添加 overflow</h4><p>可以给父级添加 <strong>overflow</strong> 属性，将其属性值设置为 <strong>hidden</strong>、 <strong>auto</strong> 或 <strong>scroll</strong> 。</p><p>子不教,父之过,注意是给父元素添加代码</p><ul><li>优点：代码简洁</li><li>缺点：无法显示溢出的部分</li></ul><h4 id="3-清除浮动-——-after-伪元素法"><a href="#3-清除浮动-——-after-伪元素法" class="headerlink" title="3.清除浮动 —— :after 伪元素法"></a>3.清除浮动 —— :after 伪元素法</h4><p><strong>:after</strong> 方式是额外标签法的升级版。也是给父元素添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123; <span class="comment">/* IE6、7 专有 */</span></span><br><span class="line">*zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>优点：没有增加标签，结构更简单</li><li>缺点：照顾低版本浏览器</li><li>代表网站： 百度、淘宝网、网易等</li></ul><h4 id="4-清除浮动-——-双伪元素清除浮动"><a href="#4-清除浮动-——-双伪元素清除浮动" class="headerlink" title="4.清除浮动 —— 双伪元素清除浮动"></a>4.清除浮动 —— 双伪元素清除浮动</h4><p>也是给给父元素添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>:table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">*zoom:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>优点：代码更简洁</li><li>缺点：照顾低版本浏览器</li><li>代表网站：小米、腾讯等</li></ul><h2 id="3-4清除浮动总结"><a href="#3-4清除浮动总结" class="headerlink" title="3.4清除浮动总结"></a>3.4清除浮动总结</h2><p><strong>为什么需要清除浮动？</strong></p><p>①  父级没高度。</p><p>②  子盒子浮动了。</p><p>③  影响下面布局了，我们就应该清除浮动了。</p><table><thead><tr><th>清除浮动的方式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>额外标签法（隔墙法）</td><td>通俗易懂，书写方便</td><td>添加许多无意义的标签，结构化较差。</td></tr><tr><td>父级overflow: hidden;</td><td>书写简单</td><td>溢出隐藏</td></tr><tr><td>父级after 伪元素法</td><td>结构语义化正确</td><td>由于IE6-7不支持: after，兼容性问题</td></tr><tr><td>父级双伪元素</td><td>结构语义化正确</td><td>由于IE6-7不支持: after，兼容性问题</td></tr></tbody></table><h1 id="4-PS-切图"><a href="#4-PS-切图" class="headerlink" title="4.PS 切图"></a>4.PS 切图</h1><p>PS 有很多的切图方式：图层切图、切片切图、PS 插件切图等。</p><h2 id="4-1图层切图"><a href="#4-1图层切图" class="headerlink" title="4.1图层切图"></a>4.1图层切图</h2><p>最简单的切图方式：右击图层 → 导出 PNG 切片。</p><h2 id="4-2切片切图"><a href="#4-2切片切图" class="headerlink" title="4.2切片切图"></a>4.2切片切图</h2><h3 id="1-利用切片选中图片"><a href="#1-利用切片选中图片" class="headerlink" title="1.利用切片选中图片"></a>1.利用切片选中图片</h3><ul><li>利用切片工具手动划出</li></ul><h3 id="2-导出选中的图片"><a href="#2-导出选中的图片" class="headerlink" title="2.导出选中的图片"></a>2.导出选中的图片</h3><ul><li>文件菜单 → 存储为 web 设备所用格式 →选择我们要的图片格式 → 存储 。</li></ul><h2 id="4-3PS-插件切图"><a href="#4-3PS-插件切图" class="headerlink" title="4.3PS 插件切图"></a>4.3PS 插件切图</h2><p><strong>Cutterman</strong> 是一款运行在 <strong>Photoshop</strong> 中的插件，能够自动将你需要的图层进行输出，以替代传统的手工 “导出 web 所用格式” 以及使用切片工具进行挨个切图的繁琐流程。</p><p>官网：<a href="http://www.cutterman.cn/zh/cutterman">http://www.cutterman.cn/zh/cutterman</a></p><p><strong>注意：Cutterman 插件要求你的 PS 必须是完整版，不能是绿色版，所以大家需要安装完整版本。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051526546.jpg"></p><h1 id="5-学成在线案例"><a href="#5-学成在线案例" class="headerlink" title="5.学成在线案例"></a>5.学成在线案例</h1><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051527746.jpg"></p><h2 id="5-1准备素材和工具"><a href="#5-1准备素材和工具" class="headerlink" title="5.1准备素材和工具"></a>5.1准备素材和工具</h2><ol><li>学成在线 PSD 源文件。</li><li>开发工具 = PS（切图） + sublime（代码） + chrome（测试）。</li></ol><h2 id="5-2案例准备工作"><a href="#5-2案例准备工作" class="headerlink" title="5.2案例准备工作"></a>5.2案例准备工作</h2><p><strong>我们本次采取结构与样式相分离思想：</strong></p><ol><li>创建 study 目录文件夹 (用于存放我们这个页面的相关内容)。</li><li>study 目录内新建 images 文件夹，用于保存图片。</li><li>新建首页文件 index.html（以后我们的网站首页统一规定为 index.html )。</li><li>新建 style.css 样式文件。我们本次采用外链样式表。</li><li>将样式引入到我们的 HTML 页面文件中。</li><li>样式表写入清除内外边距的样式，来检测样式表是否引入成功。</li></ol><h2 id="5-3CSS-属性书写顺序-重点"><a href="#5-3CSS-属性书写顺序-重点" class="headerlink" title="5.3CSS 属性书写顺序(重点)"></a>5.3CSS 属性书写顺序(重点)</h2><p><strong>建议遵循以下顺序：</strong></p><ol><li>布局定位属性：display / position / float / clear / visibility / overflow（建议 display 第一个写，毕竟关系到模式）</li><li>自身属性：width / height / margin / padding / border / background</li><li>文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word</li><li>其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, <span class="string">&#x27;Helvetica Neue&#x27;</span>, Helvetica, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4页面布局分析"><a href="#5-4页面布局分析" class="headerlink" title="5.4页面布局分析"></a>5.4页面布局分析</h2><p><strong>为了提高网页制作的效率，布局时通常有以下的布局流程：</strong></p><ol><li>必须确定页面的版心（可视区），我们测量可得知。</li><li>分析页面中的行模块，以及每个行模块中的列模块。其实页面布局，就是一行行罗列而成的。</li><li>制作 HTML 结构。我们还是遵循，先有结构，后有样式的原则。结构永远最重要。</li><li>开始运用盒子模型的原理，通过 DIV+CSS 布局来控制网页的各个模块。</li></ol><h2 id="5-5确定版心"><a href="#5-5确定版心" class="headerlink" title="5.5确定版心"></a>5.5确定版心</h2><p>这个页面的版心是 1200 像素，每个版心都要水平居中对齐，可以定义版心为公共类：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-6头部制作"><a href="#5-6头部制作" class="headerlink" title="5.6头部制作"></a>5.6头部制作</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051530409.jpg"></p><ul><li>1 号是版心盒子 header 1200 * 42 的盒子水平居中对齐，上下给一个 margin 值就可以</li><li>版心盒子里面包含 2 号盒子 logo</li><li>版心盒子里面包含 3 号盒子 nav 导航栏</li><li>版心盒子里面包含 4 号盒子 search 搜索框</li><li>版心盒子里面包含 5 号盒子 user 个人信息</li><li>注意：要求里面的 4 个盒子必须都是浮动</li></ul><h2 id="5-7banner-制作"><a href="#5-7banner-制作" class="headerlink" title="5.7banner 制作"></a>5.7banner 制作</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051531271.jpg"></p><ul><li>1 号盒子是通栏的大盒子 banner，不给宽度，给高度，给一个蓝色背景</li><li>2 号盒子是版心，要水平居中对齐</li><li>3 号盒子版心内，左对齐 subnav 侧导航栏</li><li>4 号盒子版心内，右对齐 course 课程</li></ul><h2 id="5-8精品推荐小模块"><a href="#5-8精品推荐小模块" class="headerlink" title="5.8精品推荐小模块"></a>5.8精品推荐小模块</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051532411.jpg"></p><ul><li>大盒子水平居中 goods 精品，注意此处有个盒子阴影</li><li>1 号盒子是标题 H3 左侧浮动</li><li>2 号盒子里面放链接左侧浮动， goods-item 距离可以控制链接的左右外边距（注意行内元素只给左右内外边距）</li><li>3 号盒子右浮动 mod 修改</li></ul><h2 id="5-9精品推荐大模块"><a href="#5-9精品推荐大模块" class="headerlink" title="5.9精品推荐大模块"></a>5.9精品推荐大模块</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051533200.jpg"></p><ul><li>1 号盒子为最大的盒子， box 版心水平居中对齐</li><li>2 号盒子为上面部分，box-hd – 里面左侧标题 H3 左浮动，右侧链接 a 右浮动</li><li>3 号盒子为底下部分，box-bd – 里面是无序列表，有 10 个小 li 组成</li><li>小 li 外边距的问题，这里有个小技巧：给 box-hd 宽度为 1215 就可以一行装开 5 个 li</li></ul><p><strong>复习点：</strong>我们用到清除浮动，因为 box-hd 里面的盒子个数不一定是多少，所以我们就不给高度了，但是里面的盒子浮动会影响下面的布局，因此需要清除浮动。</p><h2 id="5-10底部模块"><a href="#5-10底部模块" class="headerlink" title="5.10底部模块"></a>5.10底部模块</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109051534789.jpg"></p><ul><li>1 号盒子是通栏大盒子，底部 footer 给高度，底色是白色</li><li>2 号盒子版心水平居中</li><li>3 号盒子版权 copyright 左对齐</li><li>4 号盒子链接组 links 右对齐</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css第三天学习笔记【持续更新】</title>
      <link href="/2021/09/04/css%E7%AC%AC%E4%B8%89%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/"/>
      <url>/2021/09/04/css%E7%AC%AC%E4%B8%89%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>CSS第三天大纲：</strong></p><ul><li><strong>盒子模型</strong></li><li>PS基本操作</li><li>综合案例</li><li>圆角边框</li><li>盒子阴影</li><li>文字阴影</li></ul><span id="more"></span><h1 id="1-盒子模型"><a href="#1-盒子模型" class="headerlink" title="1.盒子模型"></a>1.盒子模型</h1><p>页面布局要学习三大核心, 盒子模型, 浮动 和 定位. 学习好盒子模型能非常好的帮助我们布局页面。</p><h2 id="1-1看透网页布局的本质"><a href="#1-1看透网页布局的本质" class="headerlink" title="1.1看透网页布局的本质"></a>1.1看透网页布局的本质</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109031142426.jpg"></p><p><strong>网页布局过程：</strong></p><ol><li>先准备好相关的网页元素，网页元素基本都是盒子 Box 。</li><li>利用 CSS 设置好盒子样式，然后摆放到相应位置。</li><li>往盒子里面装内容。</li></ol><p><strong>网页布局的核心本质： 就是利用 CSS 摆盒子。</strong></p><h2 id="1-2盒子模型（Box-Model）组成"><a href="#1-2盒子模型（Box-Model）组成" class="headerlink" title="1.2盒子模型（Box Model）组成"></a>1.2盒子模型（Box Model）组成</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109031146520.jpg"></p><p>所谓 <strong>盒子模型</strong>：就是把 HTML 页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。</p><p>CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，它包括：边框、外边距、内边距、和 实际内容</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109031147922.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109031148840.jpg"></p><h2 id="1-3边框（border）"><a href="#1-3边框（border）" class="headerlink" title="1.3边框（border）"></a>1.3边框（border）</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109031149245.jpg"></p><p>border可以设置元素的边框。边框有三部分组成:边框宽度(粗细) 边框样式 边框颜色</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span> : border-width || border-style || border-color</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>border-width</td><td>定义边框粗细，单位是px</td></tr><tr><td>border-style</td><td>边框的样式</td></tr><tr><td>border-color</td><td>边框颜色</td></tr></tbody></table><p>CSS 边框属性允许你指定一个元素边框的<strong>样式</strong>和<strong>颜色</strong>。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span> : border-width || border-style || border-color</span><br></pre></td></tr></table></figure><p><strong>边框样式 border-style 可以设置如下值：</strong></p><ul><li>none：没有边框即忽略所有边框的宽度（默认值）</li><li>solid：边框为单实线(最为常用的)</li><li>dashed：边框为虚线</li><li>dotted：边框为点线</li></ul><p><strong>边框简写：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red; 没有顺序</span><br></pre></td></tr></table></figure><p><strong>边框分开写法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid red; <span class="comment">/* 只设定上边框， 其余同理 */</span></span><br></pre></td></tr></table></figure><p>课堂要求：请给一个 200*200 的盒子，设置上边框为红色，其余边框为蓝色（提示：一定注意边框的层叠性）</p><h2 id="1-4表格的细线边框"><a href="#1-4表格的细线边框" class="headerlink" title="1.4表格的细线边框"></a>1.4表格的细线边框</h2><p><strong>border-collapse</strong> 属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>:collapse;</span><br></pre></td></tr></table></figure><ul><li>collapse 单词是合并的意思</li><li>border-collapse: collapse; 表示相邻边框合并在一起</li></ul><h2 id="1-5边框会影响盒子实际大小"><a href="#1-5边框会影响盒子实际大小" class="headerlink" title="1.5边框会影响盒子实际大小"></a>1.5边框会影响盒子实际大小</h2><p><strong>边框会额外增加盒子的实际大小。因此我们有两种方案解决:</strong></p><ol><li>测量盒子大小的时候,不量边框</li><li>如果测量的时候包含了边框,则需要 width/height 减去边框宽度</li></ol><h2 id="1-6内边距（padding）"><a href="#1-6内边距（padding）" class="headerlink" title="1.6内边距（padding）"></a>1.6内边距（padding）</h2><p><strong>padding</strong> 属性用于设置内边距，即边框与内容之间的距离。</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>padding-top</td><td>上内边距</td></tr><tr><td>padding-bottom</td><td>下内边距</td></tr><tr><td>padding-left</td><td>左内边距</td></tr><tr><td>padding-right</td><td>右内边距</td></tr></tbody></table><p><strong>padding</strong> 属性（简写属性）可以有一到四个值。</p><table><thead><tr><th>值的个数</th><th>表达意思</th></tr></thead><tbody><tr><td>padding: 5px;</td><td>1个值，代表上下左右都有5像素内边距；</td></tr><tr><td>padding: 5px 10px;</td><td>2个值，代表上下内边距是5像素  左右内边距是10像素；</td></tr><tr><td>padding: 5px 10px 20px;</td><td>3个值，代表上内边距是5像素  左右内边距是10像素  下内边距20像素；</td></tr><tr><td>padding: 5px 10px 20px 30px;</td><td>4个值，上是5像素  右10像素  下20像素  左30像素  顺时针</td></tr></tbody></table><p>以上 4 种情况，我们实际开发都会遇到。</p><p>当我们给盒子指定 <strong>padding</strong> 值之后，发生了 2 件事情：</p><ol><li>内容和边框有了距离，添加了内边距</li><li>padding影响了盒子实际大小。</li></ol><p>也就是说，如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子。</p><p><strong>解决方案：</strong></p><p>如果保证盒子跟效果图大小保持一致，则让 <strong>width/height 减去多出来的内边距大小</strong>即可。</p><h3 id="案例：新浪导航案例-padding影响盒子好处"><a href="#案例：新浪导航案例-padding影响盒子好处" class="headerlink" title="案例：新浪导航案例-padding影响盒子好处"></a>案例：新浪导航案例-padding影响盒子好处</h3><p>padding内边距可以撑开盒子,我们可以做非常巧妙的运用。</p><p>因为每个导航栏里面的字数不一样多,我们可以不用给每个盒子宽度了,直接给padding最合适。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109031513566.jpg"></p><p>相关取值:</p><ol><li>上边框为3像素, 颜色为 #ff8500</li><li>下边框为1像素 颜色为 #edeef0</li><li>盒子高度为 41像素, 背景颜色为 #fcfcfc</li><li>文字颜色为 #4c4c4c</li></ol><p><strong>注意：</strong></p><ul><li><p>padding内边距可以撑开盒子, 有时候,也会让我们去修改宽度</p></li><li><p>如何盒子本身没有指定width/height属性, 则此时padding不会撑开盒子大小.</p></li></ul><h2 id="1-7外边距（margin）"><a href="#1-7外边距（margin）" class="headerlink" title="1.7外边距（margin）"></a>1.7外边距（margin）</h2><p><strong>margin</strong> 属性用于设置外边距，即控制盒子和盒子之间的距离。</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>margin-top</td><td>上外边距</td></tr><tr><td>margin-bottom</td><td>下外边距</td></tr><tr><td>margin-left</td><td>左外边距</td></tr><tr><td>margin-right</td><td>右外边距</td></tr></tbody></table><p>margin 简写方式代表的意义跟 padding 完全一致。</p><h3 id="外边距典型应用"><a href="#外边距典型应用" class="headerlink" title="外边距典型应用"></a>外边距典型应用</h3><p>外边距可以让块级盒子<strong>水平居中</strong>，但是必须满足两个条件：</p><ol><li>盒子必须指定了宽度（width）。</li><li>盒子<strong>左右的外边距</strong>都设置为 auto 。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span>&#123; <span class="attribute">width</span>:<span class="number">960px</span>; <span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span><br></pre></td></tr></table></figure><p>常见的写法，以下三种都可以：</p><ul><li>margin-left: auto; margin-right: auto;</li><li>margin: auto;</li><li><strong>margin: 0 auto;</strong></li></ul><p><strong>注意：</strong>以上方法是让块级元素水平居中，<strong>行内元素或者行内块元素水平居中给其父元素添加 text-align:center 即可</strong>。</p><h2 id="1-8外边距合并"><a href="#1-8外边距合并" class="headerlink" title="1.8外边距合并"></a>1.8外边距合并</h2><p>使用 <strong>margin</strong> 定义块元素的<strong>垂直外边距</strong>时，可能会出现外边距的合并。</p><p><strong>主要有两种情况:</strong></p><ol><li>相邻块元素垂直外边距的合并</li><li>嵌套块元素垂直外边距的塌陷</li></ol><h3 id="1-相邻块元素垂直外边距的合并"><a href="#1-相邻块元素垂直外边距的合并" class="headerlink" title="1.相邻块元素垂直外边距的合并"></a>1.相邻块元素垂直外边距的合并</h3><p>当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距 margin-bottom，下面的元素有上外边距 margin-top ，则他们之间的垂直间距不是 margin-bottom 与 margin-top 之和。</p><p><strong>取两个值中的较大者这种现象被称为<code>相邻块元素垂直外边距的合并</code>。</strong></p><p><strong>解决方案：</strong></p><p>尽量只给一个盒子添加 margin 值。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109031936757.png"></p><h3 id="2-嵌套块元素垂直外边距的塌陷"><a href="#2-嵌套块元素垂直外边距的塌陷" class="headerlink" title="2.嵌套块元素垂直外边距的塌陷"></a>2.嵌套块元素垂直外边距的塌陷</h3><p>对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。</p><p><strong>解决方案：</strong></p><ol><li>可以为父元素定义上边框。</li><li>可以为父元素定义上内边距。</li><li>可以为父元素添加 overflow:hidden。</li></ol><p>还有其他方法，比如浮动、固定，绝对定位的盒子不会有塌陷问题，后面咱们再总结。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109042355278.jpg"></p><h2 id="1-9清除内外边距"><a href="#1-9清除内外边距" class="headerlink" title="1.9清除内外边距"></a>1.9清除内外边距</h2><p>网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">0</span>; <span class="comment">/* 清除内边距 */</span></span><br><span class="line"><span class="attribute">margin</span>:<span class="number">0</span>; <span class="comment">/* 清除外边距 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距。但是转换为块级和行内块元素就可以了</p><h1 id="2-PS-基本操作"><a href="#2-PS-基本操作" class="headerlink" title="2.PS 基本操作"></a>2.PS 基本操作</h1><p>因为网页美工大部分效果图都是利用 <strong>PS（Photoshop）</strong>来做的，所以以后我们大部分切图工作都是在 <strong>PS</strong> 里面完成。</p><ul><li><strong>文件 → 打开</strong> ：可以打开我们要测量的图片</li><li><strong>Ctrl+R</strong>：可以打开标尺，或者 <strong>视图 → 标尺</strong></li><li>右击标尺，把里面的单位改为<strong>像素</strong></li><li>**Ctrl+ 加号(+)**可以放大视图， **Ctrl+ 减号(-)**可以缩小视图</li><li><strong>按住空格键</strong>，鼠标可以变成小手，拖动 PS 视图</li><li>用<strong>选区</strong>拖动 可以测量大小</li><li><strong>Ctrl+ D</strong> 可以取消选区，或者在<strong>旁边空白处点击一下</strong>也可以取消选区</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109050010308.jpg"></p><h1 id="3-综合案例"><a href="#3-综合案例" class="headerlink" title="3.综合案例"></a>3.综合案例</h1><h2 id="案例1：产品模块"><a href="#案例1：产品模块" class="headerlink" title="案例1：产品模块"></a>案例1：产品模块</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109050014210.png"></p><p><strong>总结：</strong></p><ol><li><p>布局为啥用不同盒子,我只想用div？</p><p><strong>标签都是有语义的, 合理的地方用合理的标签。比如产品标题 就用 h, 大量文字段落就用p</strong></p></li><li><p>为啥用辣么多类名？</p><p><strong>类名就是给每个盒子起了一个名字,可以更好的找到这个盒子, 选取盒子更容易,后期维护也方便。</strong></p></li><li><p>到底用 margin 还是 padding？</p><p><strong>大部分情况两个可以混用，两者各有优缺点，但是根据实际情况，总是有更简单的方法实现。</strong></p></li><li><p>自己做没有思路？</p><p><strong>布局有很多种实现方式，同学们可以开始先模仿我的写法，然后再做出自己的风格。</strong></p></li><li><p>最后同学们一定多运用辅助工具,比如屏幕画笔,ps等等</p></li></ol><h2 id="案例2：快报模块"><a href="#案例2：快报模块" class="headerlink" title="案例2：快报模块"></a>案例2：快报模块</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109050020692.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109050021322.png"></p><p><strong>新知识点: 去掉 li 前面的 项目符号(小圆点)</strong></p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">list-style</span>: none;</span><br></pre></td></tr></table></figure><h1 id="4-圆角边框"><a href="#4-圆角边框" class="headerlink" title="4.圆角边框"></a>4.圆角边框</h1><p>在 CSS3 中，新增了<strong>圆角边框</strong>样式，这样我们的盒子就可以变圆角了。</p><p><strong>border-radius</strong> 属性用于设置元素的外边框圆角。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>:length;</span><br></pre></td></tr></table></figure><ul><li>参数值可以为<strong>数值</strong>或<strong>百分比</strong>的形式</li><li>如果是<strong>正方形</strong>，想要设置为一个圆，把数值修改为<strong>高度或者宽度的一半</strong>即可，或者直接写为 <strong>50%</strong></li><li>该属性是一个<strong>简写属性</strong>，可以跟四个值，分别代表<strong>左上角、右上角、右下角、左下角</strong></li><li>分开写：<strong>border-top-left-radius、border-top-right-radius、border-bottom-right-radius 和 border-bottom-left-radius</strong></li><li><strong>兼容性 ie9+ 浏览器支持, 但是不会影响页面布局,可以放心使用</strong></li></ul><h1 id="5-盒子阴影"><a href="#5-盒子阴影" class="headerlink" title="5.盒子阴影"></a>5.盒子阴影</h1><p>CSS3 中新增了盒子阴影，我们可以使用 <strong>box-shadow</strong> 属性为盒子添加阴影。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: h-shadow v-shadow blur spread color inset;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>h-shadow</td><td>必需。水平阴影的位置。允许负值。</td></tr><tr><td>v-shadow</td><td>必需。垂直阴影的位置。允许负值。</td></tr><tr><td>blur</td><td>可选。模糊距离。</td></tr><tr><td>spread</td><td>可选。阴影的尺寸。</td></tr><tr><td>color</td><td>可选。阴影的颜色。请参阅CSS颜色值。</td></tr><tr><td>inset</td><td>可选。将外部阴影 (outset) 改为内部阴影</td></tr></tbody></table><p><strong>注意：</strong></p><ol><li>默认的是外阴影(outset), 但是不可以写这个单词,否则造成阴影无效</li><li><strong>盒子阴影不占用空间，不会影响其他盒子排列</strong></li></ol><h1 id="6-文字阴影"><a href="#6-文字阴影" class="headerlink" title="6.文字阴影"></a>6.文字阴影</h1><p>在 CSS3 中，我们可以使用 <strong>text-shadow</strong> 属性将阴影应用于文本。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: h-shadow v-shadow blur color;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>h-shadow</td><td>必需。水平阴影的位置。允许负值。</td></tr><tr><td>v-shadow</td><td>必需。垂直阴影的位置。允许负值。</td></tr><tr><td>blur</td><td>可选。模糊距离。</td></tr><tr><td>color</td><td>可选。阴影的颜色。请参阅CSS颜色值。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css第二天学习笔记【持续更新】</title>
      <link href="/2021/09/02/css%E7%AC%AC%E4%BA%8C%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/"/>
      <url>/2021/09/02/css%E7%AC%AC%E4%BA%8C%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>CSS第二天大纲：</strong></p><ul><li><strong>CSS的复合选择器</strong></li><li>CSS的元素显示模式</li><li>CSS的背景</li><li>CSS的三大特性</li><li>CSS的注释</li></ul><span id="more"></span><h1 id="1-CSS-的复合选择器"><a href="#1-CSS-的复合选择器" class="headerlink" title="1.CSS 的复合选择器"></a>1.CSS 的复合选择器</h1><h2 id="1-1什么是复合选择器"><a href="#1-1什么是复合选择器" class="headerlink" title="1.1什么是复合选择器"></a>1.1什么是复合选择器</h2><p>在 CSS 中，可以根据选择器的类型把选择器分为<strong>基础选择器</strong>和<strong>复合选择器</strong>，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的。</p><ul><li>复合选择器可以更准确、更高效的选择目标元素（标签）</li><li>复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的</li><li>常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器等等</li></ul><h2 id="1-2后代选择器-重要）"><a href="#1-2后代选择器-重要）" class="headerlink" title="1.2后代选择器 (重要）"></a>1.2后代选择器 (重要）</h2><p><code>后代选择器</code>又称为<strong>包含选择器</strong>，可以选择父元素里面子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span> 元素<span class="number">2</span> &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示<strong>选择元素 1 里面的所有元素 2</strong> (后代元素)。</p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; 样式声明 &#125; <span class="comment">/* 选择 ul 里面所有的 li标签元素 */</span></span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用<strong>空格隔开</strong></li><li>元素1 是父级，元素2 是子级，最终选择的是<strong>元素2</strong></li><li>元素2 可以是儿子，也可以是孙子等，只要是元素1 的后代即可</li><li>元素1 和 元素2 可以是任意基础选择器</li></ul><h2 id="1-3-子选择器-重要）"><a href="#1-3-子选择器-重要）" class="headerlink" title="1.3 子选择器 (重要）"></a>1.3 子选择器 (重要）</h2><p><strong>子元素选择器（子选择器）</strong>只能选择作为某元素的最近一级子元素。简单理解就是选亲儿子元素。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span> &gt; 元素<span class="number">2</span> &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示<strong>选择元素1 里面的所有直接后代(子元素) 元素2</strong>。</p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">p</span> &#123; 样式声明 &#125; <span class="comment">/* 选择 div 里面所有最近一级 p 标签元素 */</span></span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用 <strong>大于号</strong> 隔开</li><li>元素1 是父级，元素2 是子级，<strong>最终选择的是</strong><code>元素2</code></li></ul><p>元素2 必须是<strong>亲儿子</strong>，其孙子、重孙之类都不归他管. 你也可以叫他 亲儿子选择器</p><h3 id="课堂提问"><a href="#课堂提问" class="headerlink" title="课堂提问"></a>课堂提问</h3><p><strong>1.请将下面的链接文字修改为红色。</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;<span class="selector-tag">nav</span>&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;&lt;<span class="selector-tag">a</span> href=&quot;#&quot;&gt;百度&lt;/<span class="selector-tag">a</span>&gt;&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;&lt;<span class="selector-tag">a</span> href=&quot;#&quot;&gt;百度&lt;/<span class="selector-tag">a</span>&gt;&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.请将下面的大肘子文字修改为红色。</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;hot&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;#&quot;&gt;大肘子&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;&lt;<span class="selector-tag">a</span> href=&quot;#&quot;&gt;猪头&lt;/<span class="selector-tag">a</span>&gt;&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;&lt;<span class="selector-tag">a</span> href=&quot;#&quot;&gt;猪尾巴&lt;/<span class="selector-tag">a</span>&gt;&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hot</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4并集选择器-重要）"><a href="#1-4并集选择器-重要）" class="headerlink" title="1.4并集选择器 (重要）"></a>1.4并集选择器 (重要）</h2><p><strong>并集选择器可以选择多组标签, 同时为他们定义相同的样式。</strong>通常用于集体声明。</p><p><code>并集选择器</code>是各选择器<strong>通过英文逗号（,）连接而成</strong>，任何形式的选择器都可以作为并集选择器的一部分。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>,元素<span class="number">2</span> &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示<strong>选择元素1 和 元素2</strong>。</p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">div</span> &#123; 样式声明 &#125; <span class="comment">/* 选择 ul 和 div标签元素 */</span></span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用<strong>逗号隔开</strong></li><li>逗号可以理解为<strong>和</strong>的意思</li><li>并集选择器通常用于集体声明</li></ul><h2 id="1-5伪类选择器"><a href="#1-5伪类选择器" class="headerlink" title="1.5伪类选择器"></a>1.5伪类选择器</h2><p><strong>伪类选择器</strong>用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素。<br>伪类选择器书写最大的特点是<strong>用冒号（:）表示</strong>，比如 :hover 、 :first-child 。<br>因为伪类选择器很多，比如有链接伪类、结构伪类等，所以这里先给大家讲解常用的链接伪类选择器。</p><h2 id="1-6链接伪类选择器"><a href="#1-6链接伪类选择器" class="headerlink" title="1.6链接伪类选择器"></a>1.6链接伪类选择器</h2><ol><li>链接伪类选择器注意事项.</li><li>链接伪类选择器实际开发中的写法.</li></ol><p><strong>链接伪类选择器注意事项:</strong></p><ul><li>为了确保生效，请按照 LVHA 的循顺序声明 :link－:visited－:hover－:active。</li><li>记忆法：love hate 或者 lv 包包 hao 。</li><li>因为 a 链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式。</li></ul><p><strong>链接伪类选择器实际工作开发中的写法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* a 是标签选择器 所有的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: gray;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* :hover 是链接伪类选择器 鼠标经过 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red; <span class="comment">/* 鼠标经过的时候，由原来的 灰色 变成了红色 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-7-focus-伪类选择器"><a href="#1-7-focus-伪类选择器" class="headerlink" title="1.7:focus 伪类选择器"></a>1.7:focus 伪类选择器</h2><p><strong>:focus 伪类选择器</strong>用于选取获得焦点的表单元素。</p><p>焦点就是光标，一般情况<code> &lt;input&gt;</code> 类表单元素才能获取，因此这个选择器也主要针对于表单元素来说。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-8复合选择器总结"><a href="#1-8复合选择器总结" class="headerlink" title="1.8复合选择器总结"></a>1.8复合选择器总结</h2><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符号及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>可以是子孙后代</td><td>较多</td><td>符号是<strong>空格</strong> .nav a</td></tr><tr><td>子代选择器</td><td>选择最近一级元素</td><td>只选亲儿子</td><td>较少</td><td>符号是<strong>大于</strong> .nav&gt;p</td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>符号是<strong>逗号</strong> .nav,.header</td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>跟链接相关</td><td>较多</td><td>重点记住 a{} 和 a:hover 实际开发的写法</td></tr><tr><td>:focus选择器</td><td>选择获得光标的表单</td><td>跟表单相关</td><td>较少</td><td>input: focus  记住这个写法</td></tr></tbody></table><h1 id="2-CSS-的元素显示模式"><a href="#2-CSS-的元素显示模式" class="headerlink" title="2.CSS 的元素显示模式"></a>2.CSS 的元素显示模式</h1><p>了解元素的显示模式可以更好的让我们布局页面。</p><ol><li>什么是元素的显示模式</li><li>元素显示模式的分类</li><li>元素显示模式的转换</li></ol><h2 id="2-1什么是元素显示模式"><a href="#2-1什么是元素显示模式" class="headerlink" title="2.1什么是元素显示模式"></a>2.1什么是元素显示模式</h2><p><strong>世界上离不开男人女人,根据不同特点,通力合作共建美好家园。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109022236965.jpg"></p><p>作用：网页的标签非常多，在不同地方会用到不同类型的标签，了解他们的特点<strong>可以更好的布局我们的网页</strong>。</p><p>元素显示模式就是<strong>元素（标签）以什么方式进行显示</strong>，比如<code>&lt;div&gt;</code>自己占一行，比如一行可以放多个<code>&lt;span&gt;</code>。</p><p>HTML 元素一般分为<strong>块元素</strong>和<strong>行内元素</strong>两种类型。</p><h2 id="2-2块元素"><a href="#2-2块元素" class="headerlink" title="2.2块元素"></a>2.2块元素</h2><p>常见的块元素有<code>&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;</code>等，其中<code>&lt;div&gt;</code>标签是<strong>最典型的块元素</strong>。</p><p><strong>块级元素的特点：</strong></p><ul><li>比较霸道，自己独占一行。</li><li>高度，宽度、外边距以及内边距都可以控制。</li><li>宽度默认是容器（父级宽度）的100%。</li><li>是一个容器及盒子，里面可以放行内或者块级元素。</li></ul><p><strong>注意：</strong></p><ul><li><p>文字类的元素内不能使用块级元素</p></li><li><p><code>&lt;p&gt; </code>标签主要用于存放文字，因此 <code>&lt;p&gt;</code> 里面不能放块级元素，特别是不能放<code>&lt;div&gt;</code></p></li><li><p>同理，<code> &lt;h1&gt;~&lt;h6&gt;</code>等都是文字类块级标签，里面也不能放其他块级元素</p></li></ul><h2 id="2-3行内元素"><a href="#2-3行内元素" class="headerlink" title="2.3行内元素"></a>2.3行内元素</h2><p>常见的行内元素有<code> &lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;</code>等，其中<code>&lt;span&gt;</code> 标签是<strong>最典型的行内元素</strong>。有的地方也将行内元素称为<strong>内联元素</strong>。</p><p><strong>行内元素的特点：</strong></p><ul><li>相邻行内元素在一行上，一行可以显示多个。</li><li>高、宽直接设置是无效的。</li><li>默认宽度就是它本身内容的宽度。</li><li>行内元素只能容纳文本或其他行内元素。</li></ul><p><strong>注意：</strong></p><ul><li>链接里面不能再放链接</li><li>特殊情况链接<code>&lt;a&gt;</code> 里面可以放块级元素，但是给 <code>&lt;a&gt;</code> 转换一下块级模式最安全</li></ul><h2 id="2-4行内块元素"><a href="#2-4行内块元素" class="headerlink" title="2.4行内块元素"></a>2.4行内块元素</h2><p>在行内元素中有几个特殊的标签 —— <code>&lt;img /&gt;、&lt;input /&gt;、&lt;td&gt;</code>，它们<strong>同时具有块元素和行内元素的特点</strong>。有些资料称它们为<strong>行内块元素</strong>。</p><p><strong>行内块元素的特点：</strong></p><ul><li>和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。一行可以显示多个（行内元素特点）。</li><li>默认宽度就是它本身内容的宽度（行内元素特点）。</li><li>高度，行高、外边距以及内边距都可以控制（块级元素特点）。</li></ul><h2 id="2-5元素显示模式总结"><a href="#2-5元素显示模式总结" class="headerlink" title="2.5元素显示模式总结"></a>2.5元素显示模式总结</h2><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放一个块级元素</td><td>可以设置宽度和高度</td><td>容器的100%</td><td>容器级可以包含任何标签</td></tr><tr><td>行内元素</td><td>一行可以放多个行内元素</td><td>不可以设置宽度和高度</td><td>它本身内容的宽度</td><td>容纳文本或者其他行内元素</td></tr><tr><td>行内块元素</td><td>一行可以放多个行内块元素</td><td>可以设置宽度和高度</td><td>它本身内容的宽度</td><td></td></tr></tbody></table><p>学习元素显示模式的主要目的就是分清它们各自的特点，当我们网页布局的时候，在合适的地方用合适的标签元素。</p><h2 id="2-6元素显示模式转换"><a href="#2-6元素显示模式转换" class="headerlink" title="2.6元素显示模式转换"></a>2.6元素显示模式转换</h2><p>特殊情况下，我们需要元素模式的转换，简单理解: 一个模式的元素需要另外一种模式的特性<br>比如想要增加链接<code>&lt;a&gt;</code>的触发范围。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109022248496.jpg"></p><ul><li><strong>转换为块元素：display: block;</strong></li><li>转换为行内元素：display: inline;</li><li><strong>转换为行内块：display: inline-block;</strong></li></ul><h2 id="2-7一个小工具的使用-Snipaste"><a href="#2-7一个小工具的使用-Snipaste" class="headerlink" title="2.7一个小工具的使用 Snipaste"></a>2.7一个小工具的使用 Snipaste</h2><p>Snipaste 是一个简单但强大的截图工具，也可以让你将截图贴回到屏幕上。</p><p><strong>常用快捷方式:</strong></p><ul><li>F1 可以截图、同时测量大小, 设置箭头 书写文字等</li><li>F3 在桌面置顶显示，相当于贴纸的效果</li><li>点击图片, alt 可以取色 (按下shift 可以切换取色模式)</li><li>按下esc 取消图片显示</li></ul><h2 id="案例：简洁版小米侧边栏"><a href="#案例：简洁版小米侧边栏" class="headerlink" title="案例：简洁版小米侧边栏"></a>案例：简洁版小米侧边栏</h2><p>案例的核心思路分为两步:</p><ol><li>把链接a 转换为块级元素, 这样链接就可以单独占一行,并且有宽度和高度</li><li>鼠标经过a 给 链接设置背景颜色</li></ol><h2 id="2-8一个小技巧-单行文字垂直居中的代码"><a href="#2-8一个小技巧-单行文字垂直居中的代码" class="headerlink" title="2.8一个小技巧 单行文字垂直居中的代码"></a>2.8一个小技巧 单行文字垂直居中的代码</h2><p>CSS 没有给我们提供文字垂直居中的代码. 这里我们可以使用一个小技巧来实现。</p><p>解决方案: <strong>让文字的行高等于盒子的高度</strong> 就可以让文字在当前盒子内垂直居中。</p><h2 id="2-9单行文字垂直居中的原理"><a href="#2-9单行文字垂直居中的原理" class="headerlink" title="2.9单行文字垂直居中的原理"></a>2.9单行文字垂直居中的原理</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109022253350.png"></p><p>简单理解：行高的上空隙和下空隙把文字挤到中间了。是如果行高小于盒子高度，文字会偏上，如果行高大于盒子高度，则文字偏下。</p><h1 id="3-CSS-的背景"><a href="#3-CSS-的背景" class="headerlink" title="3.CSS 的背景"></a>3.CSS 的背景</h1><p>通过 CSS 背景属性，可以给页面元素添加背景样式。</p><p>背景属性可以设置背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等。</p><h2 id="3-1背景颜色"><a href="#3-1背景颜色" class="headerlink" title="3.1背景颜色"></a>3.1背景颜色</h2><p><strong>background-color</strong> 属性定义了元素的背景颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>:颜色值;</span><br></pre></td></tr></table></figure><p>一般情况下元素背景颜色默认值是 <strong>transparent</strong>（透明），我们也可以手动指定背景颜色为透明色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>:transparent;</span><br></pre></td></tr></table></figure><h2 id="3-2-背景图片"><a href="#3-2-背景图片" class="headerlink" title="3.2 背景图片"></a>3.2 背景图片</h2><p><strong>background-image</strong> 属性描述了元素的背景图像。实际开发常见于 logo 或者一些装饰性的小图片或者是超大的背景图片， 优点是非常便于控制位置。 (精灵图也是一种运用场景)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span> : none | url (url)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数值</th><th>作用</th></tr></thead><tbody><tr><td>none</td><td>无背景图（默认的）</td></tr><tr><td>url</td><td>使用绝对或相对地址指定背景图像</td></tr></tbody></table><p><strong>注意：背景图片后面的地址，千万不要忘记加 URL， 同时里面的路径不要加引号。</strong></p><h2 id="3-3背景平铺"><a href="#3-3背景平铺" class="headerlink" title="3.3背景平铺"></a>3.3背景平铺</h2><p>如果需要在 HTML 页面上对背景图像进行平铺，可以使用 <strong>background-repeat</strong> 属性。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: repeat | no-repeat | repeat-x | repeat-y</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数值</th><th>作用</th></tr></thead><tbody><tr><td>repeat</td><td>背景图像在纵向和横向上平铺（默认的）</td></tr><tr><td>no-repeat</td><td>背景图像不平铺</td></tr><tr><td>repeat-x</td><td>背景图像在横向上平铺</td></tr><tr><td>repeat-y</td><td>背景图像在纵向上平铺</td></tr></tbody></table><h2 id="3-4背景图片位置"><a href="#3-4背景图片位置" class="headerlink" title="3.4背景图片位置"></a>3.4背景图片位置</h2><p>利用 <strong>background-position</strong> 属性可以改变图片在背景中的位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: x y;</span><br></pre></td></tr></table></figure><p>参数代表的意思是：x 坐标和 y 坐标。 可以使用 <strong>方位名词</strong> 或者 <strong>精确单位</strong></p><table><thead><tr><th>参数值</th><th>说明</th></tr></thead><tbody><tr><td>length</td><td>百分数   |   由浮点数字和单位</td></tr><tr><td>position</td><td>top  |  center  |  bottom  |  left  |  right    方位名词</td></tr></tbody></table><p>1.参数是方位名词</p><ul><li>如果指定的两个值都是方位名词，则两个值前后顺序无关，比如 left top 和 top left 效果一致</li><li>如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐</li></ul><p>2.参数是精确单位</p><ul><li>如果参数值是精确坐标，那么第一个肯定是 x 坐标，第二个一定是 y 坐标</li><li>如果只指定一个数值，那该数值一定是 x 坐标，另一个默认垂直居中</li></ul><p>3.参数是混合单位</p><ul><li>如果指定的两个值是精确单位和方位名词混合使用，则第一个值是 x 坐标，第二个值是 y 坐标</li></ul><h2 id="3-5背景图像固定（背景附着）"><a href="#3-5背景图像固定（背景附着）" class="headerlink" title="3.5背景图像固定（背景附着）"></a>3.5背景图像固定（背景附着）</h2><p><code>background-attachment</code> 属性设置背景图像是否固定或者随着页面的其余部分滚动。</p><p><strong>background-attachment 后期可以制作视差滚动的效果。</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-attachment</span> : scroll | fixed</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>scroll</td><td>背景图像是随对象内容滚动</td></tr><tr><td>fixed</td><td>背景图像固定</td></tr></tbody></table><h2 id="3-6背景复合写法"><a href="#3-6背景复合写法" class="headerlink" title="3.6背景复合写法"></a>3.6背景复合写法</h2><p>为了简化背景属性的代码，我们可以将这些属性合并简写在同一个属性 <strong>background</strong> 中。从而节约代码量.<br>当使用简写属性时，没有特定的书写顺序,一般习惯约定顺序为：</p><p><strong>background: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置;</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: transparent <span class="built_in">url</span>(<span class="string">image.jpg</span>) repeat-y fixed top ;</span><br></pre></td></tr></table></figure><p><strong>这是实际开发中，我们更提倡的写法。</strong></p><h2 id="3-7背景色半透明"><a href="#3-7背景色半透明" class="headerlink" title="3.7背景色半透明"></a>3.7背景色半透明</h2><p>CSS3 为我们提供了背景颜色半透明的效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br></pre></td></tr></table></figure><ul><li>最后一个参数是 alpha 透明度，取值范围在 0~1之间</li><li>我们习惯把 0.3 的 0 省略掉，写为 background: rgba(0, 0, 0, .3);</li><li>注意：背景半透明是指盒子背景半透明，盒子里面的内容不受影响</li><li>CSS3 新增属性，是 IE9+ 版本浏览器才支持的</li><li>但是现在实际开发,我们不太关注兼容性写法了,可以放心使用</li></ul><h2 id="3-8背景总结"><a href="#3-8背景总结" class="headerlink" title="3.8背景总结"></a>3.8背景总结</h2><table><thead><tr><th>属性</th><th>作用</th><th>值</th></tr></thead><tbody><tr><td>background-color</td><td>背景颜色</td><td>预定义的颜色值/十六进制/RGB代码</td></tr><tr><td>background-image</td><td>背景图片</td><td>url(图片路径)</td></tr><tr><td>background-repeat</td><td>是否平铺</td><td>repeat/no-repeat/repeat-x/repeat-y</td></tr><tr><td>background-position</td><td>背景位置</td><td>length/position    分别是x  和  y坐标</td></tr><tr><td>background-attachment</td><td>背景附着</td><td>scroll（背景滚动）/fixed（背景固定）</td></tr><tr><td>背景简写</td><td>书写更简单</td><td>背景颜色  背景图片地址  背景平铺  背景滚动  背景位置;</td></tr><tr><td>背景色半透明</td><td>背景颜色半透明</td><td>background: rgba(0,0,0,0.3);    后面必须是4个值</td></tr></tbody></table><p>背景图片：实际开发常见于 logo 或者一些装饰性的小图片或者是超大的背景图片，优点是非常便于控制位置。(精灵图也是一种运用场景)</p><h1 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h1><h2 id="案例：五彩导航"><a href="#案例：五彩导航" class="headerlink" title="案例：五彩导航"></a>案例：五彩导航</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109022344467.jpg" alt="五彩导航"></p><p>练习价值：</p><ol><li>链接属于行内元素, 但是此时需要宽度高度,因此需要模式转换。</li><li>里面文字需要水平居中和垂直居中. 因此需要单行文字垂直居中的代码。</li><li>链接里面需要设置背景图片.因此需要用到背景的相关属性设置。</li><li>鼠标经过变化背景图片,因此需要用到链接伪类选择器。</li></ol><h1 id="4-CSS-的三大特性"><a href="#4-CSS-的三大特性" class="headerlink" title="4.CSS 的三大特性"></a>4.CSS 的三大特性</h1><p>CSS 有三个非常重要的三个特性：层叠性、继承性、优先级。</p><h2 id="4-1层叠性"><a href="#4-1层叠性" class="headerlink" title="4.1层叠性"></a>4.1层叠性</h2><p>相同选择器给设置相同的样式，此时一个样式就会<strong>覆盖（层叠）</strong>另一个冲突的样式。层叠性主要解决样式冲突的问题。</p><p><strong>层叠性原则：</strong></p><ul><li>样式冲突，遵循的原则是<strong>就近原则</strong>，哪个样式离结构近，就执行哪个样式</li><li>样式不冲突，不会层叠</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061113445.jpg"></p><p>CSS 层叠性口诀：<strong>长江后浪推前浪，前浪死在沙滩上</strong>。</p><h2 id="4-2继承性"><a href="#4-2继承性" class="headerlink" title="4.2继承性"></a>4.2继承性</h2><p>现实中的继承: 我们继承了父亲的姓</p><p>CSS中的继承: 子标签会继承父标签的某些样式，如文本颜色和字号。简单的理解就是：子承父业。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109061114707.jpg"></p><ul><li>恰当地使用继承可以简化代码，降低 CSS 样式的复杂性</li><li>子元素可以继承父元素的样式（text-，font-，line-这些元素开头的可以继承，以及color属性）</li><li>继承性口诀：<strong>龙生龙，凤生凤，老鼠生的孩子会打洞</strong></li></ul><p><strong>行高的继承性</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font</span>:<span class="number">12px</span>/<span class="number">1.5</span> Microsoft YaHei；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>行高可以跟单位也可以不跟单位</li><li>如果子元素没有设置行高，则会继承父元素的行高为 1.5</li><li>此时子元素的行高是：当前子元素的文字大小 * 1.5</li><li><strong>body 行高 1.5 这样写法最大的优势就是里面子元素可以根据自己文字大小自动调整行高</strong></li></ul><h2 id="4-3优先级"><a href="#4-3优先级" class="headerlink" title="4.3优先级"></a>4.3优先级</h2><p>当同一个元素指定多个选择器，就会有优先级的产生。</p><ul><li>选择器相同，则执行层叠性</li><li>选择器不同，则根据<strong>选择器权重</strong>执行</li></ul><p>选择器权重如下表所示。</p><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承  或者  *</td><td>0,0,0,0</td></tr><tr><td>元素选择器</td><td>0,0,0,1</td></tr><tr><td>类选择器，伪类选择器</td><td>0,0,1,0</td></tr><tr><td>ID选择器</td><td>0,1,0,0</td></tr><tr><td>行内样式 style=””</td><td>1,0,0,0</td></tr><tr><td>!important  重要的</td><td>∞  无穷大</td></tr></tbody></table><p><strong>优先级注意点:</strong></p><ul><li>权重是有4组数字组成,但是不会有进位。</li><li>可以理解为类选择器永远大于元素选择器, id选择器永远大于类选择器,以此类推..</li><li>等级判断从左向右，如果某一位数值相同，则判断下一位数值。</li><li>可以简单记忆法: 通配符和继承权重为0, 标签选择器为1,类(伪类)选择器为 10, id选择器 100, 行内样式表为 1000, !important 无穷大。</li><li><strong>继承的权重是0</strong>， 如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是 0。</li></ul><p><strong>权重叠加：</strong>如果是复合选择器，则会有权重叠加，需要计算权重。</p><ul><li>div ul li       —— &gt;       0,0,0,3</li><li>.nav ul li      —— &gt;      0,0,1,2</li><li>a:hover        —— &gt;      0,0,1,1</li><li>.nav a        —— &gt;        0,0,1,1</li></ul><h1 id="5-CSS-的注释"><a href="#5-CSS-的注释" class="headerlink" title="5.CSS 的注释"></a>5.CSS 的注释</h1><p>注释用于解释代码，它们会被浏览器忽略。CSS 中的注释以“ <code>/*</code> ”开头，以“<code> */</code> ”结尾。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 需要注释的内容 */</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css第一天学习笔记【持续更新】</title>
      <link href="/2021/09/02/css%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/"/>
      <url>/2021/09/02/css%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>CSS第一天大纲：</strong></p><ul><li><strong>CSS简介</strong></li><li>CSS基础选择器</li><li>CSS字体属性</li><li>CSS文本属性</li><li>CSS的引入方式</li><li>综合案例</li><li>Chrome调试工具</li></ul><span id="more"></span><h1 id="1-CSS-简介"><a href="#1-CSS-简介" class="headerlink" title="1.CSS 简介"></a>1.CSS 简介</h1><p>CSS 的主要使用场景就是美化网页,布局页面的。</p><ol><li>HTML 的局限性</li><li>CSS-网页的美容师</li></ol><h2 id="1-1-HTML-的局限性"><a href="#1-1-HTML-的局限性" class="headerlink" title="1.1 HTML 的局限性"></a>1.1 HTML 的局限性</h2><blockquote><p>说起 HTML，这其实是个非常单纯的家伙，他<strong>只关注内容的语义</strong>。比如 <code>&lt;h1&gt; </code>表明这是一个大标题，<code>&lt;p&gt;</code> 表明这是一个段落，<code>&lt;img&gt; </code>表明这儿有一个图片，<code>&lt;a&gt; </code>表示此处有链接。<br>很早的时候，世界上的网站虽然很多，但是他们都有一个共同的特点：<strong>丑</strong>。<br>虽然 HTML 可以做简单的样式，但是带来的是无尽的<strong>臃肿和繁琐</strong>……</p></blockquote><p>下面是用来形容没有加css修饰的html页面，就好比一只没有羽毛的鸟儿~</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109011602070.jpg" alt="没有加css修饰的html页面，就好比一只没有羽毛的鸟儿~"></p><h2 id="1-2CSS-网页的美容师"><a href="#1-2CSS-网页的美容师" class="headerlink" title="1.2CSS-网页的美容师"></a>1.2CSS-网页的美容师</h2><ul><li><strong>CSS</strong> 是<strong>层叠样式表 ( Cascading Style Sheets )</strong> 的简称。</li><li>有时我们也会称之为 <strong>CSS 样式表</strong>或<strong>级联样式表</strong>。</li><li>CSS 是也是一种标记语言。</li><li>CSS 主要用于设置 HTML 页面中的<strong>文本内容</strong>（字体、大小、对齐方式等）、<strong>图片的外形</strong>（宽高、边框样式、边距等）以及<strong>版面的布局和外观显示样式</strong>。</li><li>CSS 让我们的网页更加丰富多彩，布局更加灵活自如。简单理解：<strong>CSS 可以美化 HTML , 让 HTML 更漂亮， 让页面布局更简单</strong>。</li></ul><p><strong>总结：</strong></p><ol><li>HTML 主要做结构,显示元素内容。</li><li>CSS 美化 HTML ,布局网页。</li><li><strong>CSS 最大价值: 由 HTML 专注去做结构呈现，样式交给 CSS，即 结构 ( HTML ) 与样式( CSS ) 相分离。</strong></li></ol><h2 id="1-3CSS-语法规范"><a href="#1-3CSS-语法规范" class="headerlink" title="1.3CSS 语法规范"></a>1.3CSS 语法规范</h2><p>使用 HTML 时，需要遵从一定的规范，CSS 也是如此。要想熟练地使用 CSS 对网页进行修饰，首先需要了解CSS 样式规则。</p><p><strong>CSS 规则由两个主要的部分构成：选择器以及一条或多条声明。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109011611324.jpg"></p><ul><li><strong>选择器</strong>是用于指定 CSS 样式的 <strong>HTML 标签</strong>，花括号内是对该对象设置的具体样式</li><li>属性和属性值以“键值对”的形式出现</li><li>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等</li><li>属性和属性值之间用英文“**:**”分开</li><li>多个“键值对”之间用英文“**;**”进行区分</li></ul><p>所有的样式，都包含在 <code>&lt;style&gt;</code> 标签内，表示是样式表。<code>&lt;style&gt;</code> 一般写到 <code>&lt;/head&gt;</code> 上方。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="selector-tag">h4</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: blue;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><h2 id="1-4-CSS-代码风格"><a href="#1-4-CSS-代码风格" class="headerlink" title="1.4 CSS 代码风格"></a>1.4 CSS 代码风格</h2><p>以下代码书写风格不是强制规范,而是符合实际开发书写方式.</p><ol><li><strong>样式格式书写</strong></li><li><strong>样式大小写风格</strong></li><li><strong>样式空格风格</strong></li></ol><h3 id="1-样式格式书写"><a href="#1-样式格式书写" class="headerlink" title="1.样式格式书写"></a>1.样式格式书写</h3><p>① 紧凑格式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deeppink;<span class="attribute">font-size</span>: <span class="number">20px</span>;&#125;</span><br></pre></td></tr></table></figure><p>② 展开格式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: pink;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>强烈推荐第二种格式</strong>， 因为更直观。</p><h3 id="2-样式大小写"><a href="#2-样式大小写" class="headerlink" title="2.样式大小写"></a>2.样式大小写</h3><p>① 小写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>② 大写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">H3</span> &#123;</span><br><span class="line"><span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>强烈推荐样式选择器，属性名，属性值关键字<code>全部使用小写字母</code>，特殊情况除外。</p><h3 id="3-空格规范"><a href="#3-空格规范" class="headerlink" title="3.空格规范"></a>3.空格规范</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>① 属性值前面，冒号后面，保留一个空格</p><p>② 选择器（标签）和大括号中间保留空格</p><h1 id="2-CSS-基础选择器"><a href="#2-CSS-基础选择器" class="headerlink" title="2.CSS 基础选择器"></a>2.CSS 基础选择器</h1><h2 id="2-1CSS-选择器的作用"><a href="#2-1CSS-选择器的作用" class="headerlink" title="2.1CSS 选择器的作用"></a>2.1CSS 选择器的作用</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span>&gt;我是<span class="selector-tag">div</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;我是<span class="selector-tag">div</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;我是段落&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;我是<span class="selector-tag">ul</span>里面小<span class="selector-tag">li</span>哦&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">ol</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;我是<span class="selector-tag">ol</span>里面小<span class="selector-tag">li</span>哦&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ol</span>&gt;</span><br></pre></td></tr></table></figure><ol><li>我想把 div 里面的文字改为红色?</li><li>我想把第一个div 里面的文字改为红色?</li><li>我想把ul 里面的 li 文字改为红色?</li></ol><p>选择器(选择符)就是根据不同需求把不同的标签选出来这就是选择器的作用。 简单来说，就是<strong>选择标签用的</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109011625816.jpg"></p><p>以上 CSS 做了两件事：</p><ol><li>找到所有的 h1 标签。 选择器（选对人）。</li><li>设置这些标签的样式，比如颜色为红色（做对事）。</li></ol><h2 id="2-2选择器分类"><a href="#2-2选择器分类" class="headerlink" title="2.2选择器分类"></a>2.2选择器分类</h2><p><code>选择器</code>分为<strong>基础选择器</strong>和<strong>复合选择器</strong>两个大类，我们这里先讲解一下基础选择器。</p><ul><li>基础选择器是由<strong>单个选择器组成</strong>的</li><li>基础选择器又包括：<strong>标签选择器</strong>、<strong>类选择器</strong>、<strong>id 选择器</strong>和<strong>通配符选择器</strong></li></ul><h2 id="2-3标签选择器"><a href="#2-3标签选择器" class="headerlink" title="2.3标签选择器"></a>2.3标签选择器</h2><p><strong>标签选择器</strong>（元素选择器）<strong>是</strong>指用 <strong>HTML 标签名称</strong>作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。</p><p><strong>语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">标签名&#123;</span><br><span class="line">    </span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">属性<span class="number">2</span>: 属性值<span class="number">2</span>;</span><br><span class="line">属性<span class="number">3</span>: 属性值<span class="number">3</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>作用</strong></p><p>标签选择器可以把某一类标签全部选择出来，比如所有的 <code>&lt;div&gt; </code>标签和所有的 <code>&lt;span&gt; </code>标签。</p><p><strong>优点</strong></p><p>能快速为页面中同类型的标签统一设置样式。</p><p><strong>缺点</strong></p><p>不能设计差异化样式，只能选择全部的当前标签。</p><h2 id="2-4类选择器"><a href="#2-4类选择器" class="headerlink" title="2.4类选择器"></a>2.4类选择器</h2><p>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用<strong>类选择器</strong>。</p><p>类选择器在 HTML 中以 class 属性表示，在 CSS 中，类选择器以一个点“.”号显示。</p><p><strong>语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.类名 &#123;</span><br><span class="line"></span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如，将所有拥有 red 类的 HTML 元素均为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构需要用<strong>class属性</strong>来调用 class 类的意思</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=‘red’&gt; 变红色 &lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ol><li>类选择器使用“.”（英文点号）进行标识，后面紧跟类名（自定义，我们自己命名的）。</li><li>可以理解为给这个标签起了一个名字，来表示。</li><li>长名称或词组可以使用中横线来为选择器命名。</li><li>不要使用纯数字、中文等命名，尽量使用英文字母来表示。</li><li>命名要有意义，尽量使别人一眼就知道这个类名的目的。</li><li>命名规范：见附件（ Web 前端开发规范手册.doc）。</li></ol><p><code>记忆口诀</code>：样式<strong>点</strong>定义，结构<strong>类</strong>调用。一个或多个，开发最常用。</p><h3 id="类选择器-多类名"><a href="#类选择器-多类名" class="headerlink" title="类选择器-多类名"></a>类选择器-多类名</h3><p>我们可以给一个标签指定<strong>多个类名</strong>，从而达到更多的选择目的。 这些类名都可以选出这个标签。简单理解就是一个标签有多个名字。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109020935237.jpg"></p><h4 id="1-多类名使用方式"><a href="#1-多类名使用方式" class="headerlink" title="1.多类名使用方式"></a>1.多类名使用方式</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;red font20&quot;&gt;亚瑟&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><p>(1) 在标签class 属性中写 多个类名<br>(2) 多个类名中间必须用空格分开<br>(3) 这个标签就可以分别具有这些类名的样式</p><h4 id="2-多类名开发中使用场景"><a href="#2-多类名开发中使用场景" class="headerlink" title="2.多类名开发中使用场景"></a>2.多类名开发中使用场景</h4><p>(1) 可以把一些标签元素相同的样式(共同的部分)放到一个类里面<br>(2) 这些标签都可以调用这个公共的类,然后再调用自己独有的类<br>(3) 从而节省CSS代码,统一修改也非常方便</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;pink fontWeight font20&quot;&gt;亚瑟&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;font20&quot;&gt;刘备&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;font14 pink&quot;&gt;安其拉&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;font14&quot;&gt;貂蝉&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>各个类名中间用空格隔开</li><li>简单理解：就是给某个标签添加了多个类，或者这个标签有多个名字</li><li>这个标签就可以分别具有这些类名的样式</li><li>从而节省CSS代码,统一修改也非常方便.</li><li>多类名选择器在后期布局比较复杂的情况下，还是较多使用的</li></ul><h2 id="2-5id-选择器"><a href="#2-5id-选择器" class="headerlink" title="2.5id 选择器"></a>2.5id 选择器</h2><p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。<br>HTML 元素以 <strong>id 属性</strong>来设置 id 选择器，CSS 中 id 选择器以“#” 来定义。</p><p><strong>语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>名 &#123;</span><br><span class="line"></span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如，将 id 为 nav 元素中的内容设置为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav</span> &#123; </span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：id 属性只能在每个 HTML 文档中出现一次。口诀: 样式#定义,结构id调用, 只能调用一次, 别人切勿使用。</strong></p><h3 id="id-选择器和类选择器的区别"><a href="#id-选择器和类选择器的区别" class="headerlink" title="id 选择器和类选择器的区别"></a>id 选择器和类选择器的区别</h3><p>① 类选择器（class）好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用。<br>② id 选择器好比人的身份证号码，全中国是唯一的，不得重复。<br>③ id 选择器和类选择器最大的不同在于使用次数上。<br>④ 类选择器在修改样式中用的最多，id 选择器一般用于页面唯一性的元素上，经常和 JavaScript 搭配使用。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109020943341.jpg" alt="通过身份证，记住id 选择器和类选择器的区别"></p><h2 id="2-6通配符选择器"><a href="#2-6通配符选择器" class="headerlink" title="2.6通配符选择器"></a>2.6通配符选择器</h2><p>在 CSS 中，通配符选择器使用“*”定义，它表示选取页面中所有元素（标签）。</p><p><strong>语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line"></span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通配符选择器不需要调用， 自动就给所有的元素使用样式</li><li>特殊情况才使用，后面讲解使用场景(以下是清除所有的元素标签的内外边距,后期讲)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7基础选择器总结"><a href="#2-7基础选择器总结" class="headerlink" title="2.7基础选择器总结"></a>2.7基础选择器总结</h2><table><thead><tr><th>基础选择器</th><th>作用</th><th>特点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签，比如p</td><td>不能差异化选择</td><td>较多</td><td><code>p &#123; color: red;&#125;</code></td></tr><tr><td>类选择器</td><td>可以选出1个或者多个标签</td><td>可以根据需求选择</td><td>非常多</td><td><code>.nav &#123; color: red; &#125;</code></td></tr><tr><td>id选择器</td><td>一次只能选择一个标签</td><td>ID属性只能出现在每个HTML文档中出现一次</td><td>一般和js搭配</td><td><code>#nav &#123; color: red; &#125;</code></td></tr><tr><td>通配符选择器</td><td>选择所有的标签</td><td>选择的太多，有部分不需要</td><td>特殊情况使用</td><td><code>* &#123; color: red; &#125;</code></td></tr></tbody></table><ul><li>每个基础选择器都有使用场景，都需要掌握</li><li>如果是修改样式， 类选择器是使用最多的</li></ul><h1 id="3-CSS-字体属性"><a href="#3-CSS-字体属性" class="headerlink" title="3.CSS 字体属性"></a>3.CSS 字体属性</h1><p>CSS Fonts (字体)属性用于定义<strong>字体系列</strong>、大小、粗细、和文字样式（如斜体）。</p><h2 id="3-1字体系列"><a href="#3-1字体系列" class="headerlink" title="3.1字体系列"></a>3.1字体系列</h2><p>CSS 使用 <strong>font-family</strong> 属性定义文本的字体系列。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">font-family</span>:<span class="string">&quot;微软雅黑&quot;</span>;&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;<span class="attribute">font-family</span>: Arial,<span class="string">&quot;Microsoft Yahei&quot;</span>, <span class="string">&quot;微软雅黑&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><ul><li>各种字体之间必须使用英文状态下的逗号隔开</li><li>一般情况下,如果有空格隔开的多个单词组成的字体,加引号</li><li>尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示</li><li>最常见的几个字体：body {font-family: ‘Microsoft YaHei’,tahoma,arial,’Hiragino Sans GB’; }</li></ul><h2 id="3-2字体大小"><a href="#3-2字体大小" class="headerlink" title="3.2字体大小"></a>3.2字体大小</h2><p>CSS 使用 <strong>font-size</strong> 属性定义字体大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>px（像素）大小是我们网页的最常用的单位</li><li>谷歌浏览器默认的文字大小为16px</li><li>不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小</li><li>可以给 body 指定整个页面文字的大小</li></ul><h2 id="3-3字体粗细"><a href="#3-3字体粗细" class="headerlink" title="3.3字体粗细"></a>3.3字体粗细</h2><p>CSS 使用 <strong>font-weight</strong> 属性设置文本字体的粗细。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>默认值(不加粗的)</td></tr><tr><td>bold</td><td>定义粗体(加粗的)</td></tr><tr><td>100-900</td><td>400等同于normal，而700等同于bold，注意这个<strong>数字后面不跟单位！</strong></td></tr></tbody></table><ul><li>学会让加粗标签（比如 h 和 strong 等) 不加粗，或者其他标签加粗</li><li><strong>实际开发时，我们更喜欢用数字表示粗细</strong></li></ul><h2 id="3-4文字样式"><a href="#3-4文字样式" class="headerlink" title="3.4文字样式"></a>3.4文字样式</h2><p>CSS 使用 <strong>font-style</strong> 属性设置文本的风格。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>normal</td><td>默认值，浏览器会显示标准的字体样式 <code>font-style: normal;</code></td></tr><tr><td>italic</td><td>浏览器会显示斜体的字体样式。</td></tr></tbody></table><p><code>注意</code>： <strong>平时我们很少给文字加斜体，反而要给斜体标签（em，i）改为不倾斜字体。</strong></p><h2 id="3-5字体复合属性"><a href="#3-5字体复合属性" class="headerlink" title="3.5字体复合属性"></a>3.5字体复合属性</h2><p>字体属性可以把以上文字样式综合来写, 这样可以更节约代码:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font</span>: font-style font-weight font-size/line-height font-family;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用 font 属性时，必须按上面语法格式中的顺序书写，<strong>不能更换顺序</strong>，并且各个属性间以<strong>空格</strong>隔开</li><li>不需要设置的属性可以省略（取默认值），但<strong>必须保留 font-size 和 font-family 属性</strong>，否则 font 属性将不起作用</li></ul><h2 id="3-6字体属性总结"><a href="#3-6字体属性总结" class="headerlink" title="3.6字体属性总结"></a>3.6字体属性总结</h2><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>font-size</td><td>字号</td><td>我们通常用的单位是px像素，一定要跟上单位</td></tr><tr><td>font-family</td><td>字体</td><td>实际工作中按照团队约定来写字体</td></tr><tr><td>font-weight</td><td>字体粗细</td><td>记住加粗是 700 或者 bold 不加粗是 normal 或者 400 记住数字不要跟单位</td></tr><tr><td>font-style</td><td>字体样式</td><td>记住倾斜是 italic   不倾斜 是 normal   工作中我们最常用 normal</td></tr><tr><td>font</td><td>字体连写</td><td>1.字体连写是有顺序的 不能随意换位置 2.其中字号 和 字体 必须同时出现</td></tr></tbody></table><ul><li>字体复合属性如何写？里面有什么注意细节？</li><li>如果让加粗的文字不加粗显示，如何让倾斜的字体不倾斜显示？</li></ul><h1 id="4-CSS-文本属性"><a href="#4-CSS-文本属性" class="headerlink" title="4.CSS 文本属性"></a>4.CSS 文本属性</h1><p>CSS Text（文本）属性可定义文本的<strong>外观</strong>，比如文本的颜色、对齐文本、装饰文本、文本缩进、行间距等。</p><h2 id="4-1文本颜色"><a href="#4-1文本颜色" class="headerlink" title="4.1文本颜色"></a>4.1文本颜色</h2><p><strong>color</strong> 属性用于定义文本的颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>表示方法</th><th>属性值</th></tr></thead><tbody><tr><td>预定义的颜色值</td><td>red，green，blue，还有我们的御用色pink</td></tr><tr><td>十六进制</td><td>#FF0000，#FF6600，#29D794</td></tr><tr><td>RGB代码</td><td>rgb(255,0,0)或rgb(100%,0%,0%)</td></tr></tbody></table><p><strong>开发中最常用的是十六进制。</strong></p><h2 id="4-2对齐文本"><a href="#4-2对齐文本" class="headerlink" title="4.2对齐文本"></a>4.2对齐文本</h2><p><strong>text-align</strong> 属性用于设置元素内文本内容的水平对齐方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th align="left">解释</th></tr></thead><tbody><tr><td>left</td><td align="left">左对齐（默认值）</td></tr><tr><td>right</td><td align="left">右对齐</td></tr><tr><td>center</td><td align="left">居中对齐</td></tr></tbody></table><h2 id="4-3装饰文本"><a href="#4-3装饰文本" class="headerlink" title="4.3装饰文本"></a>4.3装饰文本</h2><p><strong>text-decoration</strong> 属性规定添加到文本的修饰。可以给文本添加下划线、删除线、上划线等。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-decoration</span>：underline；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>默认。没有装饰线（最常用）</td></tr><tr><td>underline</td><td>下划线。链接 a 自带下划线（常用）</td></tr><tr><td>overline</td><td>上划线。（几乎不用）</td></tr><tr><td>line-through</td><td>删除线。（不常用）</td></tr></tbody></table><p><strong>总结:</strong> 重点记住如何添加下划线 ? 如何删除下划线 ? 其余了解即可。</p><h2 id="4-4文本缩进"><a href="#4-4文本缩进" class="headerlink" title="4.4文本缩进"></a>4.4文本缩进</h2><p><strong>text-indent</strong> 属性用来指定文本的第一行的缩进，通常是将<strong>段落的首行缩进</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109021617858.jpg" alt="段落的首行缩进效果图"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-indent</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过设置该属性，所有元素的第一行都可以缩进一个给定的长度，甚至该长度可以是负值。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>em</strong> 是一个相对单位，就是当前元素（font-size) 1 个文字的大小, 如果当前元素没有设置大小，则会按照父元素的 1 个文字大小。</p><h2 id="4-5行间距"><a href="#4-5行间距" class="headerlink" title="4.5行间距"></a>4.5行间距</h2><p>line-height 属性用于设置行间的距离（行高）。可以控制文字行与行之间的距离。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">26px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109021621854.png" alt="行间距介绍图"></p><h2 id="4-6文本属性总结"><a href="#4-6文本属性总结" class="headerlink" title="4.6文本属性总结"></a>4.6文本属性总结</h2><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>color</td><td>文本颜色</td><td>我们通常用   十六进制  比如  而且是简写形式  #fff</td></tr><tr><td>text-align</td><td>文本对齐</td><td>可以设定文字水平的对齐方式</td></tr><tr><td>text-indent</td><td>文本缩进</td><td>通常我们用于段落首行缩进2个字的距离  text-indent: 2em;</td></tr><tr><td>text-decoration</td><td>文本修饰</td><td>记住  添加下划线  underline  取消下划线  none</td></tr><tr><td>line-height</td><td>行高</td><td>控制行与行之间的距离</td></tr></tbody></table><h1 id="5-CSS-引入方式"><a href="#5-CSS-引入方式" class="headerlink" title="5.CSS 引入方式"></a>5.CSS 引入方式</h1><h2 id="5-1CSS-的三种样式表"><a href="#5-1CSS-的三种样式表" class="headerlink" title="5.1CSS 的三种样式表"></a>5.1CSS 的三种样式表</h2><p>按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类：</p><ol><li>行内样式表（行内式）</li><li>内部样式表（嵌入式）</li><li>外部样式表（链接式）</li></ol><h2 id="5-2内部样式表"><a href="#5-2内部样式表" class="headerlink" title="5.2内部样式表"></a>5.2内部样式表</h2><p>内部样式表（内嵌样式表）是写到html页面内部. 是将所有的 CSS 代码抽取出来，单独放到一个 <code>&lt;style&gt;</code> 标签中。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li><p><code>&lt;style&gt;</code> 标签理论上可以放在 HTML 文档的任何地方，但一般会放在文档的<code>&lt;head&gt;</code>标签中</p></li><li><p>通过此种方式，可以方便控制当前整个页面中的元素样式设置</p></li><li><p>代码结构清晰，但是并没有实现结构与样式完全分离</p></li><li><p>使用内部样式表设定 CSS，通常也被称为<strong>嵌入式引入</strong>，这种方式是我们练习时常用的方式</p></li></ul><h2 id="5-3行内样式表"><a href="#5-3行内样式表" class="headerlink" title="5.3行内样式表"></a>5.3行内样式表</h2><p>行内样式表（内联样式表）是<strong>在元素标签内部的 style 属性中设定 CSS 样式</strong>。适合于修改简单样式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">color</span>: red; <span class="attribute">font-size</span>: <span class="number">12px</span>;&quot;&gt;青春不常在，抓紧谈恋爱&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>style 其实就是标签的属性</li><li>在双引号中间，写法要符合 CSS 规范</li><li>可以控制当前的标签设置样式</li><li>由于书写繁琐，并且没有体现出结构与样式相分离的思想，所以不推荐大量使用，只有对当前元素添加简单样式的时候，可以考虑使用</li><li>使用行内样式表设定 CSS，通常也被称为<strong>行内式引入</strong></li></ul><h2 id="5-4外部样式表"><a href="#5-4外部样式表" class="headerlink" title="5.4外部样式表"></a>5.4外部样式表</h2><p>实际开发都是外部样式表. 适合于样式比较多的情况. 核心是:样式单独写到CSS 文件中，之后把CSS文件引入到 HTML 页面中使用。</p><p>引入外部样式表分为两步：</p><ol><li>新建一个后缀名为 .css 的样式文件，把所有 CSS 代码都放入此文件中。</li><li>在 HTML 页面中，使用<link> 标签引入这个文件。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;css文件路径&quot;&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文档与被链接文档之间的关系，在这里需要指定为”stylesheet”，表示被链接的文档是一个样式表文件。</td></tr><tr><td>href</td><td>定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径。</td></tr></tbody></table><ul><li>使用外部样式表设定 CSS，通常也被称为<strong>外链式</strong>或<strong>链接式引入</strong>，这种方式是开发中常用的方式</li></ul><h2 id="5-5CSS-引入方式总结"><a href="#5-5CSS-引入方式总结" class="headerlink" title="5.5CSS 引入方式总结"></a>5.5CSS 引入方式总结</h2><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>行内样式表</td><td>书写方便，权重高</td><td>结构样式混写</td><td>较少</td><td>控制一个标签</td></tr><tr><td>内部样式表</td><td>部分结构和样式相分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面</td></tr><tr><td>外部样式表</td><td>完全实现结构和样式相分离</td><td>需要引入</td><td>最多，途血推荐</td><td>控制多个页面</td></tr></tbody></table><h1 id="6-综合案例"><a href="#6-综合案例" class="headerlink" title="6.综合案例"></a>6.综合案例</h1><h2 id="案例：-新闻页面"><a href="#案例：-新闻页面" class="headerlink" title="案例： 新闻页面"></a>案例： 新闻页面</h2><p>制作页面整体可以分为两步:</p><ol><li>搭建html结构页面</li><li>修改CSS样式</li></ol><h1 id="7-Chrome-调试工具"><a href="#7-Chrome-调试工具" class="headerlink" title="7.Chrome 调试工具"></a>7.Chrome 调试工具</h1><p>Chrome 浏览器提供了一个非常好用的调试工具，可以用来调试我们的 HTML 结构和 CSS 样式。</p><h2 id="1-打开调试工具"><a href="#1-打开调试工具" class="headerlink" title="1.打开调试工具"></a>1.打开调试工具</h2><p>打开 Chrome 浏览器，按下 <strong>F12 键</strong>或者<strong>右击页面空白处→检查。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109021645417.jpg"></p><h2 id="2-使用调试工具"><a href="#2-使用调试工具" class="headerlink" title="2.使用调试工具"></a>2.使用调试工具</h2><ul><li><strong>Ctrl+滚轮</strong> 可以放大开发者工具代码大小。</li><li>左边是 HTML 元素结构，右边是 CSS 样式。</li><li>右边 CSS 样式可以改动数值（左右箭头或者直接输入）和查看颜色。</li><li><strong>Ctrl + 0</strong> 复原浏览器大小。</li><li>如果点击元素，发现右侧没有样式引入，极有可能是类名或者样式引入错误。</li><li>如果有样式，但是样式前面有黄色叹号提示，则是样式属性书写错误。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML第二天学习笔记【已完结】</title>
      <link href="/2021/09/01/HTML%E7%AC%AC%E4%BA%8C%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E5%B7%B2%E5%AE%8C%E7%BB%93%E3%80%91/"/>
      <url>/2021/09/01/HTML%E7%AC%AC%E4%BA%8C%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E5%B7%B2%E5%AE%8C%E7%BB%93%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>HTML第二天大纲：</strong></p><ul><li>HTML语法规范</li><li>HTML基本结构标签</li><li>开发工具</li><li>HTML常用标签</li><li>HTML中的注释和特殊字符</li><li>查阅文档</li></ul><span id="more"></span><h1 id="1-HTML语法规则："><a href="#1-HTML语法规则：" class="headerlink" title="1.HTML语法规则："></a>1.HTML语法规则：</h1><h2 id="1-1基本语法概述"><a href="#1-1基本语法概述" class="headerlink" title="1.1基本语法概述"></a>1.1基本语法概述</h2><ol><li>HTML 标签是由尖括号包围的关键词，例如 <html>。</li><li>HTML 标签通常是成对出现的，例如 <html> 和 </html> ，我们称为<strong>双标签</strong>。标签对中的第一个标签是开始标签，第二个标签是结束标签。 </li><li>有些特殊的标签必须是单个标签（极少情况），例如<code> &lt;br /&gt;</code>，我们称为<strong>单标签</strong>。 </li></ol><h2 id="1-2标签的关系："><a href="#1-2标签的关系：" class="headerlink" title="1.2标签的关系："></a>1.2标签的关系：</h2><p>​    双标签关系可以分为两类：<strong>包含关系</strong>和<strong>并列关系</strong><br>​    <strong>包含标签：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> <span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108312209888.png" alt="包含关系【父子关系】"><br>    <strong>并列关系：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108312209895.png" alt="并列关系【兄弟关系】"> </p><h1 id="2-基本结构标签："><a href="#2-基本结构标签：" class="headerlink" title="2.基本结构标签："></a>2.基本结构标签：</h1><h2 id="2-1-第一个-HTML-网页"><a href="#2-1-第一个-HTML-网页" class="headerlink" title="2.1 第一个 HTML 网页"></a>2.1 第一个 HTML 网页</h2><p>每个网页都会有一个基本的结构标签（也称为骨架标签），页面内容也是在这些基本标签上书写。<br>HTML页面也称为 HTML 文档.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">你我之间,黑马洗练,月薪过万,一飞冲天</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-2第一个-HTML"><a href="#2-2第一个-HTML" class="headerlink" title="2.2第一个 HTML"></a>2.2第一个 HTML</h3><p>每个网页都会有一个基本的结构标签（也称为骨架标签），页面内容也是在这些基本标签上书写。</p><table><thead><tr><th>标签名</th><th>定义</th><th>说明</th></tr></thead><tbody><tr><td><code>&lt;html&gt;&lt;/html&gt;</code></td><td>HTML标签</td><td>页面中最大的标签，我们称为根标签</td></tr><tr><td><code>&lt;head&gt;&lt;/head&gt;</code></td><td>文档的头部</td><td>注意在head标签中我们必须要设置的标签是title</td></tr><tr><td><code>&lt;title&gt;&lt;/title&gt;</code></td><td>文档的标题</td><td>让页面拥有一个属于自己的网页标题</td></tr><tr><td><code>&lt;body&gt;&lt;/body&gt;</code></td><td>文档的主体</td><td>元素包含文档的所有内容，页面内容基本都是放在body里面的</td></tr></tbody></table><p><strong>HTML 文档的的后缀名必须是 .html 或 .htm</strong> ，浏览器的作用是读取 HTML 文档，并以网页的形式显示出它们。此时，用浏览器打开这个网页，我们就可以预览我们写的第一个 HTML 文件了</p><h1 id="3-网页开发工具："><a href="#3-网页开发工具：" class="headerlink" title="3.网页开发工具："></a>3.网页开发工具：</h1><p>   <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108312209890.png" alt="网页开发工具"> </p><h3 id="VSCode的基本使用："><a href="#VSCode的基本使用：" class="headerlink" title="VSCode的基本使用："></a><strong>VSCode的基本使用：</strong></h3><ol><li><p>双击打开软件。</p></li><li><p>新建文件（Ctrl + N ）。</p></li><li><p>保存（Ctrl + S ）, 注意移动要保存为 .html 文件</p></li><li><p>Ctrl + 加号键 ，Ctrl + 减号键  可以放大缩小视图 </p></li><li><p>生成页面骨架结构。 输入! 按下 Tab 键。</p></li><li><p>利用插件在浏览器中预览页面：单击鼠标右键，在弹出窗口中点击“Open In Default Browser”。</p></li></ol><h3 id="VSCode-工具生成骨架标签新增代码"><a href="#VSCode-工具生成骨架标签新增代码" class="headerlink" title="VSCode 工具生成骨架标签新增代码"></a>VSCode 工具生成骨架标签新增代码</h3><ol><li><p><code>&lt;!DOCTYPE&gt; 标签</code></p></li><li><p>lang 语言</p></li><li><p>charset 字符集</p></li></ol><h2 id="3-1文档类型声明标签"><a href="#3-1文档类型声明标签" class="headerlink" title="3.1文档类型声明标签"></a>3.1文档类型声明标签</h2><p><code>&lt;!DOCTYPE&gt;</code> 文档类型声明，作用就是告诉浏览器使用哪种HTML版本来显示网页。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>这句代码的意思是: 当前页面采取的是 HTML5 版本来显示网页.</strong></p><p><strong>注意:</strong></p><ol><li><p><code>&lt;!DOCTYPE&gt;</code> 声明位于文档中的最前面的位置，处于 <html> 标签之前。</p></li><li><p><code>&lt;!DOCTYPE&gt;</code>不是一个 HTML 标签，它就是 文档类型声明标签。</p></li></ol><h2 id="3-2lang-语言种类"><a href="#3-2lang-语言种类" class="headerlink" title="3.2lang 语言种类"></a>3.2lang 语言种类</h2><p><strong>用来定义当前文档显示的语言。</strong></p><ol><li>en定义语言为英语</li><li>zh-CN定义语言为中文</li></ol><blockquote><p>简单来说,定义为en 就是英文网页, 定义为 zh-CN 就是中文网页。</p><p>其实对于文档显示来说，定义成en的文档也可以显示中文，定义成zh-CN的文档也可以显示英文。</p><p>这个属性对浏览器和搜索引擎(百度.谷歌等)还是有作用的。</p></blockquote><h2 id="3-3字符集"><a href="#3-3字符集" class="headerlink" title="3.3字符集"></a>3.3字符集</h2><p>字符集 (Character set)是多个字符的集合。以便计算机能够识别和存储各种文字。</p><p>在<code>&lt;head&gt;</code>标签内，可以通过<code>&lt;meta&gt;</code> 标签的 <code>charset</code> 属性来规定 HTML 文档应该使用哪种字符编码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot; UTF-8&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>charset <strong>常用的值有：GB2312 、BIG5 、GBK 和 UTF-8，其中 <code>UTF-8</code> 也被称为<code>万国码</code>，基本包含了全世界所有国家需要用到的字符.</strong></p><p><code>注意</code><strong>：上面语法是必须要写的代码，否则可能引起乱码的情况。一般情况下，统一使用“UTF-8”编码，尽量统一写成标准的 “UTF-8”，不要写成  “utf8” 或 “UTF8”。</strong></p><h2 id="3-4总结"><a href="#3-4总结" class="headerlink" title="3.4总结"></a>3.4总结</h2><ol><li>以上三个代码 vscode 自动生成,基本不需要我们重写.</li><li><code>&lt;!DOCTYPE html&gt;</code> 文档类型声明标签,告诉浏览器这个页面采取html5版本来显示页面.</li><li><code>&lt;html lang=&quot;en&quot;&gt;</code> 告诉浏览器或者搜索引擎这是一个英文网站. 本页面采取英文来显示.</li><li><code>&lt;meta charset=“ UTF-8” /&gt;</code> 必须写. 采取 UTF-8来保存文字. 如果不写就会乱码.具体原理后面分析.</li></ol><h1 id="4-HTML常用标签"><a href="#4-HTML常用标签" class="headerlink" title="4.HTML常用标签"></a>4.HTML常用标签</h1><h2 id="4-1语义化标签："><a href="#4-1语义化标签：" class="headerlink" title="4.1语义化标签："></a>4.1语义化标签：</h2><p>学习标签是有技巧的，重点是记住每个标签的语义。简单理解就是指<strong>标签的含义</strong>，即这个标签是用来干嘛的。</p><p><code>根据标签的语义，在合适的地方给一个最为合理的标签，可以让页面结构更清晰。</code><br>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062041507.png"></p><h2 id="4-2标题标签-h1-h6（重要）"><a href="#4-2标题标签-h1-h6（重要）" class="headerlink" title="4.2标题标签 h1 - h6（重要）"></a>4.2标题标签 h1 - h6（重要）</h2><blockquote><p>为了使网页更具有语义化，我们经常会在页面中用到标题标签。HTML 提供了 6 个等级的网页标题，即<code>&lt;h1&gt; - &lt;h6&gt;</code> 。</p></blockquote><p>具体实现：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 我是一级标题 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>单词 head 的缩写，意为头部、标题。</p><p><code>标签语义</code>：作为标题使用，并且依据重要性递减。</p><p><strong>特点：</strong></p><ol><li>加了标题的文字会变的加粗，字号也会依次变大。</li><li>一个标题独占一行。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;标题一共六级选,&lt;/h1&gt;</span><br><span class="line">&lt;h2&gt;文字加粗一行显。&lt;/h2&gt;</span><br><span class="line">&lt;h3&gt;由大到小依次减，&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;从重到轻随之变。&lt;/h4&gt;</span><br><span class="line">&lt;h5&gt;语法规范书写后，&lt;/h5&gt;</span><br><span class="line">&lt;h6&gt;具体效果刷新见。&lt;/h6&gt;</span><br></pre></td></tr></table></figure><p>h1-h6标题标签具体效果见下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109010011850.png" alt="h1-h6标题标签效果预览"></p><h2 id="4-3-段落和换行标签（重要）"><a href="#4-3-段落和换行标签（重要）" class="headerlink" title="4.3 段落和换行标签（重要）"></a>4.3 段落和换行标签（重要）</h2><blockquote><p>在网页中，要把文字有条理地显示出来，就需要将这些文字分段显示。在 HTML 标签中，<code>&lt;p&gt;</code>标签用于<code>定义段落</code>，它可以将整个网页分为若干个段落。</p></blockquote><p>具体实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt; 我是一个段落标签 &lt;/p&gt;</span><br></pre></td></tr></table></figure><p>单词 paragraph的缩写，意为段落。</p><p><code>标签语义：</code>可以把 HTML 文档分割为若干段落。   </p><p> <strong>特点：</strong></p><ol><li>文本在一个段落中会根据浏览器窗口的大小自动换行。</li><li>段落和段落之间保有空隙。</li></ol><blockquote><p>在 HTML 中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后才自动换行。如果希望某段文本强制换行显示，就需要使用<code>换行标签 &lt;br /&gt;</code>，其中/可省略成为<code>&lt;br&gt;</code>。<br> 具体实现：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>单词 break 的缩写，意为打断、换行。</p><p><code>标签语义：</code>强制换行。 </p><p><strong>特点：</strong></p><ol><li><code>&lt;br /&gt;</code> 是个单标签。</li><li><code>&lt;br /&gt;</code> 标签只是简单地开始新的一行，跟段落不一样，段落之间会插入一些垂直的间距。</li></ol><h2 id="课堂案例：体育新闻"><a href="#课堂案例：体育新闻" class="headerlink" title="课堂案例：体育新闻"></a>课堂案例：体育新闻</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108312209886.jpg" alt="课堂案例：体育新闻"></p><h2 id="4-4文本格式化标签："><a href="#4-4文本格式化标签：" class="headerlink" title="4.4文本格式化标签："></a>4.4文本格式化标签：</h2><blockquote><p>在网页中，有时需要为文字设置<strong>粗体</strong>、<em>斜体</em>或<u>下划线</u>等效果，这时就需要用到 HTML 中的文本格式化标签，使文字以特殊的方式显示。</p></blockquote><p>标签语义: 突出重要性，比普通文字更重要。</p><table><thead><tr><th>语义</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>加粗</td><td><code>&lt;strong&gt;&lt;/strong&gt;</code>或者<code>&lt;b&gt;&lt;/b&gt;</code></td><td>更推荐使用<code>&lt;strong&gt;</code>标签 语义更强烈</td></tr><tr><td>倾斜</td><td><code>&lt;em&gt;&lt;/em&gt;</code>或者<code>&lt;i&gt;&lt;/i&gt;</code></td><td>更推荐使用<code>&lt;em&gt;</code>标签 语义更强烈</td></tr><tr><td>删除线</td><td><code>&lt;del&gt;&lt;/del&gt;</code>或者<code>&lt;s&gt;&lt;/s&gt;</code></td><td>更推荐使用<code>&lt;del&gt;</code>标签 语义更强烈</td></tr><tr><td>下划线</td><td><code>&lt;ins&gt;&lt;/ins&gt;</code>或者<code>&lt;u&gt;&lt;/u&gt;</code></td><td>更推荐使用<code>&lt;ins&gt;</code>标签加粗 语义更强烈</td></tr></tbody></table><p>同学们重点记住 <strong>加粗</strong> 和 <em>倾斜</em>。</p><h2 id="4-5div和span标签"><a href="#4-5div和span标签" class="headerlink" title="4.5div和span标签"></a>4.5div和span标签</h2><p><code>&lt;div&gt;</code> 和 <code>&lt;span&gt;</code> 是没有语义的，它们就是一个盒子，用来装内容的。</p><pre><code>    &lt;div&gt; 这是头部 &lt;/div&gt;        &lt;span&gt; 今日价格 &lt;/span&gt;</code></pre><p>div 是 division 的缩写，表示分割、分区。span 意为跨度、跨距。</p><p><strong>特点：</strong><br>    1.<code>&lt;div&gt;</code>标签用来布局，但是现在一行只能放一个<code>&lt;div&gt;</code>。 大盒子<br>    2. <code>&lt;span&gt;</code> 标签用来布局，一行上可以多个 <code>&lt;span&gt;</code>。小盒子</p><h2 id="4-6-图像标签和路径-重点）"><a href="#4-6-图像标签和路径-重点）" class="headerlink" title="4.6 图像标签和路径 (重点）"></a>4.6 图像标签和路径 (重点）</h2><h3 id="1-图像标签"><a href="#1-图像标签" class="headerlink" title="1.图像标签"></a>1.图像标签</h3><blockquote><p>在 HTML 标签中，<code>&lt;img&gt;</code> 标签用于定义 HTML 页面中的图像。</p></blockquote><p>具体实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;图像URL&quot; /&gt;</span><br></pre></td></tr></table></figure><p><code>src</code> 是<code>&lt;img&gt;</code>标签的必须属性，它用于指定图像文件的路径和文件名。</p><p>所谓属性：简单理解就是属于这个图像标签的特性。</p><p><strong>图像标签的其他属性：</strong></p><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>图片路径</td><td>必须属性</td></tr><tr><td>alt</td><td>文本</td><td>替换文本。图像不能显示的文字</td></tr><tr><td>title</td><td>文本</td><td>提示文本。鼠标放到图像上，显示的文字</td></tr><tr><td>width</td><td>像素</td><td>设置图像的宽度</td></tr><tr><td>height</td><td>像素</td><td>设置图像的高度</td></tr><tr><td>border</td><td>像素</td><td>设置图像的边框粗细</td></tr></tbody></table><p><strong>图像标签注意点：</strong></p><ol><li>图像标签可以拥有多个属性，必须写在标签名的后面。</li><li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</li><li>属性采取键值对的格式，即 key=“value” 的格式，属性 =“属性值”。</li></ol><p><strong>重点掌握：</strong></p><ul><li>请说出 图像标签哪个属性是必须要写的？</li><li>请说出 图像标签中alt和title属性区别？</li></ul><h3 id="2-路径-前期铺垫知识"><a href="#2-路径-前期铺垫知识" class="headerlink" title="2.路径(前期铺垫知识)"></a>2.路径(前期铺垫知识)</h3><ol><li>目录文件夹和根目录</li><li>VSCode 打开目录文件夹</li></ol><p><strong>(1)目录文件夹和根目录:</strong></p><blockquote><p>实际工作中，我们的文件不能随便乱放，否则用起来很难快速的找到他们，因此我们需要一个文件夹来管理他们。</p></blockquote><p><strong>目录文件夹：</strong>就是普通文件夹，里面只不过存放了我们做页面所需要的相关素材，比如 html 文件、图片等。</p><p><strong>根目录：</strong>打开目录文件夹的第一层就是根目录</p><p>(2) VSCode打开目录文件夹:</p><p>文件—- 打开文件夹 . 选择目录文件夹. 后期非常方便管理文件.</p><h3 id="3-路径"><a href="#3-路径" class="headerlink" title="3.路径"></a>3.路径</h3><blockquote><p>页面中的图片会非常多， 通常我们会新建一个文件夹来存放这些图像文件（images），这时再查找图像，就需要采用“路径”的方式来指定图像文件的位置。</p></blockquote><p>路径可以分为：</p><ol><li>相对路径</li><li>绝对路径</li></ol><h4 id="路径之相对路径"><a href="#路径之相对路径" class="headerlink" title="路径之相对路径"></a><strong>路径之相对路径</strong></h4><p><code>相对路径：</code>以<strong>引用文件所在位置</strong>为参考基础，而建立出的目录路径。 </p><p>这里简单来说，<strong>图片相对于 HTML 页面的位置</strong></p><table><thead><tr><th>相对路径分类</th><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>同一级路径</td><td>./或者省略</td><td>图像文件位于HTML文件同一级  如<code>&lt;img src=&quot;./baidu.gif&quot;/&gt;</code>或者<code>&lt;img src=&quot;baidu.gif&quot;/&gt;</code>。</td></tr><tr><td>下一级路径</td><td>/</td><td>图像文件位于HTML文件下一级  如<code>&lt;img src=&quot;images/baidu.gif&quot;/&gt;</code>。</td></tr><tr><td>上一级路径</td><td>../</td><td>图像文件位于HTML文件上一级  如<code>&lt;img src=&quot;../baidu.gif&quot;&gt;</code>。</td></tr></tbody></table><p>特点：</p><p>相对路径是从代码所在的这个文件出发，去寻找目标文件的，而我们这里所说的上一级 、下一级和同一级就是<strong>图片相对于 HTML 页面的位置</strong>。</p><h4 id="路径之绝对路径："><a href="#路径之绝对路径：" class="headerlink" title="路径之绝对路径："></a><strong>路径之绝对路径：</strong></h4><p><code>绝对路径：</code>是指目录下的绝对位置，直接到达目标位置，通常是从盘符开始的路径。</p><p>例如，”D:\web\img\logo.gif”或完整的网络地址“<a href="http://www.itcast.cn/images/logo.gif&quot;">http://www.itcast.cn/images/logo.gif&quot;</a></p><h2 id="4-7-超链接标签-重点）"><a href="#4-7-超链接标签-重点）" class="headerlink" title="4.7 超链接标签 (重点）"></a>4.7 超链接标签 (重点）</h2><p>在 HTML 标签中，<code>&lt;a&gt; </code>标签用于定义超链接，作用是从一个页面链接到另一个页面。</p><ol><li>链接的语法格式</li><li>链接的分类</li></ol><h3 id="1-链接的语法格式"><a href="#1-链接的语法格式" class="headerlink" title="1.链接的语法格式"></a>1.链接的语法格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;跳转目标&quot; target=&quot;目标窗口的弹出方式&quot;&gt; 文本或图像 &lt;/a&gt;</span><br></pre></td></tr></table></figure><p>单词 anchor [ˈæŋkə(r)] 的缩写，意为：锚。</p><p>两个属性的作用如下：    </p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>href</td><td>用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能</td></tr><tr><td>target</td><td>用于指定链接页面的打开方式，其中_self为默认值 _blank为在新窗口打开方式</td></tr></tbody></table><h3 id="2-链接分类："><a href="#2-链接分类：" class="headerlink" title="2.链接分类："></a>2.链接分类：</h3><ol><li><p>外部链接: 例如 <code>&lt; a href=&quot;http:// www.baidu.com &quot;&gt; 百度&lt;/a &gt;</code>。</p></li><li><p>内部链接:网站内部页面之间的相互链接. 直接链接内部页面名称即可，例如<code> &lt; a href=&quot;index.html&quot;&gt; 首页 &lt;/a &gt;</code>。</p></li><li><p>空链接: 如果当时没有确定链接目标时，<code>&lt; a href=&quot;#&quot;&gt; 首页 &lt;/a &gt;</code> 。</p></li><li><p>下载链接: 如果 href 里面地址是一个文件或者压缩包，会下载这个文件。</p></li><li><p>网页元素链接: 在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接。</p></li><li><p>锚点链接:  点我们点击链接,可以快速定位到页面中的某个位置.。</p><ul><li><p>在链接文本的 href 属性中，设置属性值为 <code>#名字</code> 的形式，如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#two&quot;</span>&gt;</span> 第2集 <span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br></pre></td></tr></table></figure></li><li><p>找到目标位置标签，里面添加一个 id 属性 = 刚才的名字 ，如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span>第2集介绍<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><p><strong>通过综合案例《圣诞节老人》,主要复习:</strong></p><ol><li>目录文件夹</li><li>上述所学标签</li><li>路径</li><li>锚点链接</li></ol><h2 id="4-8表格标签"><a href="#4-8表格标签" class="headerlink" title="4.8表格标签"></a>4.8表格标签</h2><p><strong>表格是实际开发中非常常用的标签:</strong></p><ol><li>表格的主要作用</li><li>表格的基本语法</li></ol><h3 id="1-表格的主要作用"><a href="#1-表格的主要作用" class="headerlink" title="1.表格的主要作用"></a>1.表格的主要作用</h3><p>表格主要<strong>用于显示、展示数据</strong>，因为它可以让数据显示的非常的规整，可读性非常好。特别是后台展示数据的时候，能够熟练运用表格就显得很重要。一个清爽简约的表格能够把繁杂的数据表现得很有条理。</p><p>总结: 表格不是用来布局页面的,而是用来<strong>展示数据</strong>的。</p><table><thead><tr><th align="center">支出项目</th><th align="center">单价（元）</th><th align="center">数目</th><th align="center">金额（元）</th></tr></thead><tbody><tr><td align="center">垃圾箱</td><td align="center">30</td><td align="center">12</td><td align="center">360</td></tr><tr><td align="center">垃圾牌</td><td align="center">100</td><td align="center">12</td><td align="center">1200</td></tr><tr><td align="center">宣传单</td><td align="center">0.08</td><td align="center">400</td><td align="center">32</td></tr><tr><td align="center">宣传小册子</td><td align="center">3</td><td align="center">250</td><td align="center">750</td></tr><tr><td align="center">合计</td><td align="center">——</td><td align="center">——</td><td align="center">2342</td></tr></tbody></table><h3 id="2-表格的基本语法"><a href="#2-表格的基本语法" class="headerlink" title="2.表格的基本语法"></a>2.表格的基本语法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">table</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;单元格内的文字&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;/<span class="selector-tag">tr</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/<span class="selector-tag">table</span>&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;table&gt; &lt;/table&gt;</code> 是用于定义表格的标签。</li><li><code>&lt;tr&gt; &lt;/tr&gt;</code> 标签用于定义表格中的行，必须嵌套在 <code>&lt;table&gt; &lt;/table&gt;</code>标签中。</li><li><code>&lt;td&gt; &lt;/td&gt;</code> 用于定义表格中的单元格，必须嵌套在<code>&lt;tr&gt;&lt;/tr&gt;</code>标签中。</li><li>字母 td 指表格数据（table data），即数据单元格的内容。</li></ol><h3 id="3-表头单元格标签"><a href="#3-表头单元格标签" class="headerlink" title="3.表头单元格标签"></a>3.表头单元格标签</h3><p>一般表头单元格位于表格的第一行或第一列，表头单元格里面的文本内容加粗居中显示.<br><code>&lt;th&gt; </code>标签表示 HTML 表格的表头部分(table head 的缩写)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">table</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">th</span>&gt;姓名&lt;/<span class="selector-tag">th</span>&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="selector-tag">tr</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/<span class="selector-tag">table</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030016348.jpg"></p><p><strong>总结:</strong></p><p>表头单元格也是单元格, 常用于表格第一行, 突出重要性, 表头单元格里面的文字会加粗居中显示。</p><h3 id="4-表格属性"><a href="#4-表格属性" class="headerlink" title="4.表格属性"></a>4.表格属性</h3><p>表格标签这部分属性我们实际开发我们不常用，后面通过 CSS 来设置.<br>目的有2个:</p><ol><li>记住这些英语单词,后面 CSS 会使用。</li><li>直观感受表格的外观形态。</li></ol><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>align</td><td>left、center、right</td><td>规定表格相对周围元素的对齐方式。</td></tr><tr><td>border</td><td>1 或 “”</td><td>规定表格单元是否拥有边框，默认为””，表示没有边框</td></tr><tr><td>cellpadding</td><td>像素值</td><td>规定单元边沿与其内容之间的空白，默认 1 像素。</td></tr><tr><td>cellspacing</td><td>像素值</td><td>规定单元格之间的空白，默认 2 像素。</td></tr><tr><td>width</td><td>像素值或百分比</td><td>规定表格的宽度。</td></tr></tbody></table><h3 id="案例：-小说排行榜"><a href="#案例：-小说排行榜" class="headerlink" title="案例： 小说排行榜"></a>案例： 小说排行榜</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030022645.jpg" alt="小说排行榜"></p><h3 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h3><p><strong>先制作表格的结构：</strong></p><ol><li>第一行里面是 th 表头单元格</li><li>第二行开始里面是 td 普通单元格</li><li>单元格里面可以放任何元素,文字链接图片等都可以</li></ol><p><strong>后书写表格属性：</strong></p><ol><li>用到宽度高度边框cellpadding 和 cellspacing</li><li>表格浏览器中对齐 align</li></ol><h3 id="5-表格结构标签"><a href="#5-表格结构标签" class="headerlink" title="5.表格结构标签"></a>5.表格结构标签</h3><p>使用场景:因为表格可能很长,为了更好的表示表格的语义，可以将表格分割成 表格头部和表格主体两大部分.<br>在表格标签中，分别用：<code>&lt;thead&gt;</code>**标签 表格的头部区域、<code>&lt;tbody&gt;</code>**标签 <strong>表格的主体区域。</strong> 这样可以更好的分清表格结构。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030025087.jpg"></p><ol><li><code>&lt;thead&gt;&lt;/thead&gt;</code>：用于定义表格的头部。<code>&lt;thead&gt; </code>内部必须拥有<code>&lt;tr&gt;</code>标签。 一般是位于第一行。</li><li><code>&lt;tbody&gt;&lt;/tbody&gt;</code>：用于定义表格的主体，主要用于放数据本体 。</li><li>以上标签都是放在 <code>&lt;table&gt;&lt;/table&gt;</code> 标签中。</li></ol><h3 id="6-合并单元格"><a href="#6-合并单元格" class="headerlink" title="6.合并单元格"></a>6.合并单元格</h3><p>特殊情况下,可以把多个单元格合并为一个单元格, 这里同学们会最简单的合并单元格即可。</p><ol><li>合并单元格方式</li><li>目标单元格</li><li>合并单元格的步骤</li></ol><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030026008.jpg"></p><p><strong>合并单元格方式：</strong></p><ul><li><p>跨行合并：rowspan=”合并单元格的个数”</p></li><li><p>跨列合并：colspan=”合并单元格的个数”</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030028661.png"></p><p><strong>目标单元格：(写合并代码)</strong></p><ul><li><p>跨行：最上侧单元格为目标单元格, 写合并代码</p></li><li><p>跨列：最左侧单元格为目标单元格, 写合并代码</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030029820.jpg"></p><p><strong>合并单元格三步曲：</strong></p><ol><li>先确定是跨行还是跨列合并。</li><li>找到目标单元格. 写上合并方式 = 合并的单元格数量。比如：<code>&lt;td colspan=&quot;2&quot;&gt;&lt;/td&gt;</code>。</li><li>删除多余的单元格。</li></ol><h3 id="7-表格总结"><a href="#7-表格总结" class="headerlink" title="7.表格总结"></a>7.表格总结</h3><p><strong>表格学习整体可以分为三大部分:</strong></p><ol><li>表格的相关标签</li><li>表格的相关属性</li><li>合并单元格</li></ol><h4 id="7-1表格的相关标签"><a href="#7-1表格的相关标签" class="headerlink" title="7.1表格的相关标签"></a>7.1表格的相关标签</h4><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030031321.png"></p><h4 id="7-2表格的相关属性"><a href="#7-2表格的相关属性" class="headerlink" title="7.2表格的相关属性"></a>7.2表格的相关属性</h4><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>align</td><td>left、center、right</td><td>规定表格相对周围元素的对齐方式。</td></tr><tr><td>border</td><td>1 或 “”</td><td>规定表格单元是否拥有边框，默认为””，表示没有边框</td></tr><tr><td>cellpadding</td><td>像素值</td><td>规定单元边沿与其内容之间的空白，默认 1 像素。</td></tr><tr><td>cellspacing</td><td>像素值</td><td>规定单元格之间的空白，默认 2 像素。</td></tr><tr><td>width</td><td>像素值或百分比</td><td>规定表格的宽度。</td></tr></tbody></table><h4 id="7-3合并单元格"><a href="#7-3合并单元格" class="headerlink" title="7.3合并单元格"></a>7.3合并单元格</h4><h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030034962.jpg"></h4><h2 id="4-9列表标签"><a href="#4-9列表标签" class="headerlink" title="4.9列表标签"></a>4.9列表标签</h2><p>表格是用来显示数据的，那么<strong>列表就是用来布局的</strong>。</p><p><strong>列表</strong>最大的特点就是整齐、整洁、有序，它作为布局会更加自由和方便。</p><p>根据使用情景不同，列表可以分为三大类：<strong>无序列表</strong>、<strong>有序列表</strong>和<strong>自定义列表</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030035079.png" alt="序列表**、**有序列表**和**自定义列表**"></p><h2 id="4-10-无序列表（重点）"><a href="#4-10-无序列表（重点）" class="headerlink" title="4.10 无序列表（重点）"></a>4.10 无序列表（重点）</h2><p><code>&lt;ul&gt;</code> 标签表示 HTML 页面中项目的无序列表，一般会以项目符号呈现列表项，而列表项使用 <code>&lt;li&gt;</code> 标签定义。<br>无序列表的基本语法格式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">1</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">2</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">3</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/<span class="selector-tag">ul</span>&gt;</span><br></pre></td></tr></table></figure><ol><li>无序列表的各个列表项之间没有顺序级别之分，是并列的。</li><li><code>&lt;ul&gt;&lt;/ul&gt;</code> 中只能嵌套 <code>&lt;li&gt;&lt;/li&gt;</code>，直接在 <code>&lt;ul&gt;&lt;/ul&gt; </code>标签中输入其他标签或者文字的做法是不被允许的。</li><li><code>&lt;li&gt; 与 &lt;/li&gt; </code>之间相当于一个容器，可以容纳所有元素。</li><li>无序列表会带有自己的样式属性，但在实际使用时，我们会使用 CSS 来设置。</li></ol><h2 id="4-11有序列表（理解）"><a href="#4-11有序列表（理解）" class="headerlink" title="4.11有序列表（理解）"></a>4.11有序列表（理解）</h2><p>有序列表即为有排列顺序的列表，其各个列表项会按照一定的顺序排列定义。</p><p>在 HTML 标签中，<code>&lt;ol&gt; </code>标签用于定义有序列表，列表排序以数字来显示，并且使用 <code>&lt;li&gt;</code> 标签来定义列表项。</p><p>有序列表的基本语法格式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">ol</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">1</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">2</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">3</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/<span class="selector-tag">ol</span>&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;ol&gt;&lt;/ol&gt;</code>中只能嵌套<code>&lt;li&gt;&lt;/li&gt;</code>，直接在<code>&lt;ol&gt;&lt;/ol&gt;</code>标签中输入其他标签或者文字的做法是不被允许的。</li><li><code>&lt;li&gt; 与 &lt;/li&gt;</code>之间相当于一个容器，可以容纳所有元素。</li><li>有序列表会带有自己样式属性，但在实际使用时，我们会使用 CSS 来设置。</li></ol><h2 id="4-12自定义列表（重点）"><a href="#4-12自定义列表（重点）" class="headerlink" title="4.12自定义列表（重点）"></a>4.12自定义列表（重点）</h2><p>自定义列表的使用场景:<br>自定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030040459.jpg"></p><p>在 HTML 标签中，<code>&lt;dl&gt; </code>标签用于定义描述列表（或定义列表），该标签会与 <code>&lt;dt&gt;</code>（定义项目/名字）和 <code>&lt;dd&gt;</code>（描述每一个项目/名字）一起使用。</p><p><strong>其基本语法如下：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">dl</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">dt</span>&gt;名词<span class="number">1</span>&lt;/<span class="selector-tag">dt</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">dd</span>&gt;名词<span class="number">1</span>解释<span class="number">1</span>&lt;/<span class="selector-tag">dd</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">dd</span>&gt;名词<span class="number">1</span>解释<span class="number">2</span>&lt;/<span class="selector-tag">dd</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">dl</span>&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;dl&gt;&lt;/dl&gt; </code>里面只能包含<code>&lt;dt&gt;</code>和 <code>&lt;dd&gt;</code>。</li><li><code>&lt;dt&gt;</code> 和 <code>&lt;dd&gt;</code>个数没有限制，经常是一个<code>&lt;dt&gt; </code>对应多个<code>&lt;dd&gt;</code>。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030043063.jpg"></p><h2 id="4-13列表总结"><a href="#4-13列表总结" class="headerlink" title="4.13列表总结"></a>4.13列表总结</h2><table><thead><tr><th>标签名</th><th align="center">定义</th><th>说明</th></tr></thead><tbody><tr><td><code>&lt;ul&gt;&lt;/ul&gt;</code></td><td align="center"><strong>无序标签</strong></td><td>里面只能包含li   没有顺序，使用较多。li里面可以放任何标签</td></tr><tr><td><code>&lt;ol&gt;&lt;/ol&gt;</code></td><td align="center">有序标签</td><td>里面只能包含li   有顺序，使用相对较少。li里面可以放任何标签</td></tr><tr><td><code>&lt;dl&gt;&lt;/dl&gt;</code></td><td align="center">自定义列表</td><td>里面只能包含 dt 和 dd 。dt和dd里面可以放任何标签</td></tr></tbody></table><p><strong>注意：</strong></p><ol><li>学会什么时候用无序列表， 什么时候用自定义列表。</li><li>无序列表和自定义列表代码怎么写？</li><li>列表布局在学习完 CSS 后再来完成。</li></ol><h2 id="4-14表单标签"><a href="#4-14表单标签" class="headerlink" title="4.14表单标签"></a>4.14表单标签</h2><p>现实中的表单，我们去银行办理信用卡填写的单子。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030048192.jpg"></p><p>网页中的表单展示</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030048041.jpg"></p><p><strong>思考：</strong></p><ol><li>为什么需要表单</li><li>表单的组成</li></ol><h3 id="1-为什么需要表单"><a href="#1-为什么需要表单" class="headerlink" title="1.为什么需要表单"></a>1.为什么需要表单</h3><p>使用表单目的是为了<strong>收集用户信息</strong>。</p><p>在我们网页中， 我们也需要跟用户进行交互，收集用户资料，此时就需要表单。</p><h3 id="2-表单的组成"><a href="#2-表单的组成" class="headerlink" title="2.表单的组成"></a>2.表单的组成</h3><p>在 HTML 中，一个完整的表单通常由<strong>表单域、表单控件（也称为表单元素）</strong>和 <strong>提示信息</strong>3个部分构成。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030051771.png"></p><h3 id="3-表单域"><a href="#3-表单域" class="headerlink" title="3.表单域"></a>3.表单域</h3><p><strong>表单域</strong>是一个<strong>包含表单元素的区域</strong>。</p><p>在 HTML 标签中， <code>&lt;form&gt;</code> 标签用于定义表单域，以实现用户信息的收集和传递。</p><p><code>&lt;form&gt; </code><strong>会把它范围内的表单元素信息提交给服务器。</strong></p><p>​    </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">form</span> action=“url地址” method=“提交方式” name=“表单域名称&quot;&gt;</span><br><span class="line">各种表单元素控件</span><br><span class="line">&lt;/<span class="selector-tag">form</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>常用属性：</strong></p><table><thead><tr><th>属性</th><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td>url地址</td><td>用于指定接收并处理表单数据的服务器程序的url地址。</td></tr><tr><td>method</td><td>get/post</td><td>用于设置表单数据的提交方式，其取值为get或post。</td></tr><tr><td>name</td><td>名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单域。</td></tr></tbody></table><p>我们暂时不用表单域提交数据,只需要写上 form 标签即可，等学习服务器编程阶段会重新讲解。</p><p><strong>这里只需要记住两点:</strong></p><ol><li>在我们写表单元素之前,应该有个表单域把他们进行包含。</li><li>表单域是 form标签。</li></ol><h3 id="4-表单控件-表单元素"><a href="#4-表单控件-表单元素" class="headerlink" title="4.表单控件(表单元素)"></a>4.表单控件(表单元素)</h3><p>在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单中输入或者选择的内容控件。</p><p><strong>接下来我们讲解:</strong></p><ol><li>input输入表单元素</li><li>select下拉表单元素</li><li>textarea 文本域元素</li></ol><h4 id="4-1nput-表单元素"><a href="#4-1nput-表单元素" class="headerlink" title="4.1nput 表单元素"></a>4.1nput 表单元素</h4><p>在英文单词中，input 是输入的意思，而在表单元素中 <code>&lt;input&gt; </code><strong>标签用于收集用户信息</strong>。</p><p>在<code>&lt;input&gt;</code>标签中，包含一个 <strong>type</strong> 属性，根据不同的 <strong>type</strong> 属性值，输入字段拥有很多种形式（可以是文本字段、复选框、掩码后的文本控件、单选按钮、按钮等）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">input</span> type=&quot;属性值&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li><p><code>&lt;input /&gt;</code> 标签为单标签</p></li><li><p>type 属性设置不同的属性值用来指定不同的控件类型</p></li></ul><p><strong>type 属性的属性值及其描述如下：</strong></p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>button</td><td>定义可点击按钮（多数情况下，用于通过JavaScript启动脚本）。</td></tr><tr><td>checkbox</td><td>定义复选框。</td></tr><tr><td>file</td><td>定义输入字段和”浏览”按钮，供文件上传。</td></tr><tr><td>hidden</td><td>定义隐藏的输入字段。</td></tr><tr><td>image</td><td>定义图像形式的提交按钮。</td></tr><tr><td>password</td><td>定义密码字段。该字段中字符被掩码。</td></tr><tr><td>radio</td><td>定义单选按钮。</td></tr><tr><td>reset</td><td>定义重置按钮。重置按钮会清除表单中的所有数据。</td></tr><tr><td>submit</td><td>定义提交按钮。提交按钮会把表单数据发送到服务器。</td></tr><tr><td>text</td><td>定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符。</td></tr></tbody></table><p><strong>除 type 属性外，<code>&lt;input&gt;</code>标签还有其他很多属性，其常用属性如下：</strong></p><table><thead><tr><th>属性</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>由用户自定义</td><td>定义 input 元素的名称。</td></tr><tr><td>value</td><td>由用户自定义</td><td>规定 input 元素的值。</td></tr><tr><td>checked</td><td>checked</td><td>规定此 input 元素首次加载时应当被选中。</td></tr><tr><td>maxlength</td><td>正整数</td><td>规定输入字段中字符的最大长度。</td></tr></tbody></table><ol><li>name 和value 是每个表单元素都有的属性值,主要给后台人员使用。</li><li>name 表单元素的名字, 要求 单选按钮和复选框要有相同的name值。</li><li>checked属性主要针对于单选按钮和复选框, 主要作用一打开页面,就要可以默认选中某个表单元素。</li><li>maxlength 是用户可以在表单元素输入的最大字符数, 一般较少使用。</li></ol><p><strong>1.有些表单元素想刚打开页面就默认显示几个文字怎么做?</strong></p><p>答: 可以给这些表单元素设置 value 属性=“值”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2.页面中的表单元素很多，如何区别不同的表单元素?</strong></p><p>答: name 属性：当前 input 表单的名字，后台可以通过这个 name 属性找到这个表单。页面中的表单很多，name 的主要作用就是用于区别不同的表单。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>name 属性后面的值，是自定义的</li><li>radio (或者checkbox）如果是一组，我们必须给他们命名相同的名字</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><p><strong>3.如果页面一打开就让某个单选按钮或者复选框是选中状态?</strong></p><p>答: checked 属性：表示默认选中状态。用于单选按钮和复选按钮。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性 别:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><p><strong>4.如何让input表单元素展示不同的形态? 比如单选按钮或者文本框</strong></p><p>答: type属性：type属性可以让input表单元素设置不同的形态。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">“请输入用户名”</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-label-标签"><a href="#4-2-label-标签" class="headerlink" title="4.2 label 标签"></a>4.2 label 标签</h4><p><code>&lt;label&gt; </code>标签为 input 元素定义标注（<strong>标签</strong>）。</p><p><code>&lt;label&gt; </code>标签用于绑定一个表单元素, 当点击<code>&lt;label&gt; </code>标签内的文本时，浏览器就会自动将焦点(光标)转到或者选择对应的表单元素上,用来增加用户体验。</p><p><strong>语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>核心：<code> &lt;label&gt;</code> 标签的 <strong>for 属性</strong>应当与相关元素的 <strong>id 属性相同</strong>。</p><p>在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单中输入或者选择的内容控件。</p><p><strong>接下来我们讲解:</strong></p><ol><li>input输入表单元素</li><li>select下拉表单元素</li><li>textarea 文本域元素</li></ol><h4 id="4-3-select-表单元素"><a href="#4-3-select-表单元素" class="headerlink" title="4.3 select 表单元素"></a>4.3 select 表单元素</h4><p>使用场景: 在页面中，如果有多个选项让用户选择，并且想要节约页面空间时，我们可以使用<code>&lt;select&gt;</code>标签控件定义<strong>下拉列表</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030113579.jpg"></p><p><strong>语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;select&gt; </code>中至少包含一对<code>&lt;option&gt;</code> 。</li><li>在<code>&lt;option&gt; </code>中定义<code> selected =“ selected &quot;</code> 时，当前项即为默认选中项。</li></ol><h4 id="4-4-textarea-表单元素"><a href="#4-4-textarea-表单元素" class="headerlink" title="4.4 textarea 表单元素"></a>4.4 textarea 表单元素</h4><p>使用场景: 当用户输入内容较多的情况下，我们就不能使用文本框表单了，此时我们可以使用 <code>&lt;textarea&gt;</code> 标签。</p><p>在表单元素中，<code>&lt;textarea&gt; </code>标签是用于定义多行文本输入的控件。</p><p>使用多行文本输入控件，可以输入更多的文字，该控件常见于留言板，评论。</p><p><strong>语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>通过 <code>&lt;textarea&gt;</code> 标签可以轻松地创建多行文本输入框。</li><li>cols=“每行中的字符数” ，rows=“显示的行数”，<strong>我们在实际开发中不会使用，都是用 CSS 来改变大小。</strong></li></ol><h3 id="5-表单元素几个总结点"><a href="#5-表单元素几个总结点" class="headerlink" title="5. 表单元素几个总结点"></a>5. 表单元素几个总结点</h3><ol><li>表单元素我们学习了三大组 <strong>input 输入表单元素</strong> <strong>select 下拉表单元素 textarea 文本域表单元素。</strong></li><li>这三组表单元素都应该包含在form表单域里面,并且有 name 属性。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“text</span> &quot; <span class="attr">name</span>=<span class="string">“username”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">“jiguan”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>= <span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>有三个名字非常相似的标签:</p><p>(1)表单域 form 使用场景: 提交区域内表单元素给后台服务器</p><p>(2)文件域 file 是input type 属性值 使用场景: 上传文件</p><p>(3)文本域 textarea 使用场景: 可以输入多行文字, 比如留言板 网站介绍等…</p></li><li><p>我们当前阶段不需要提交表单元素,所以我们只负责表单元素的外观形态即可。</p></li></ol><h2 id="综合案例-1"><a href="#综合案例-1" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="案例：-注册页面"><a href="#案例：-注册页面" class="headerlink" title="案例： 注册页面"></a>案例： 注册页面</h3><p><strong>综合案例主要练习今日所学标签:</strong></p><ol><li>表格标签, 可以让内容排列整齐.</li><li>列表标签</li><li>表单标签</li></ol><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109030119910.jpg"></p><h1 id="5-HTML-中的注释和特殊字符"><a href="#5-HTML-中的注释和特殊字符" class="headerlink" title="5.HTML 中的注释和特殊字符"></a>5.HTML 中的注释和特殊字符</h1><h3 id="5-1注释"><a href="#5-1注释" class="headerlink" title="5.1注释"></a>5.1注释</h3><blockquote><p>如果需要在 HTML 文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。<br>HTML中的注释以<code>&lt;!--”开头，以“ --&gt;</code>结束。</p></blockquote><p>具体实现：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释语句 --&gt;</span>      快捷键: ctrl +  / </span><br></pre></td></tr></table></figure><p>一句话: 注释标签里面的内容是给程序猿看的, 这个代码是不执行不显示到页面中的。</p><p>添加注释是为了更好地解释代码的功能，便于相关开发人员理解和阅读代码，程序是不会执行注释内容的。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108312209884.jpg" alt="绿色部分为注释内容，不会执行"></p><h3 id="5-2特殊字符"><a href="#5-2特殊字符" class="headerlink" title="5.2特殊字符"></a>5.2特殊字符</h3><p>在 HTML 页面中，一些特殊的符号很难或者不方便直接使用，此时我们就可以使用下面的字符来替代。<br><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108312209883.jpg" alt="特殊字符"><br><strong>重点记住：空格 、大于号、 小于号 这三个</strong>， 其余的使用很少，如果需要回头查阅即可。</p><h1 id="6-查阅文档"><a href="#6-查阅文档" class="headerlink" title="6.查阅文档"></a>6.查阅文档</h1><p>经常查阅文档是一个非常好的学习习惯。</p><p><strong>推荐的网址：</strong></p><ul><li>百度: <a href="http://www.baidu.com/">http://www.baidu.com</a></li><li>W3C : <a href="http://www.w3school.com.cn/">http://www.w3school.com.cn/</a></li><li>MDN: <a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML第一天学习笔记【持续更新】</title>
      <link href="/2021/08/31/HTML%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/"/>
      <url>/2021/08/31/HTML%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%90%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><strong>HTML第一天大纲：</strong></p><ul><li>网页</li><li>常用浏览器</li><li>Web标准</li></ul><span id="more"></span><h1 id="1-网页"><a href="#1-网页" class="headerlink" title="1.网页"></a>1.网页</h1><p><strong>我们接下来是进行的网页开发网页的相关概念:</strong></p><ul><li>什么是网页？</li><li>什么是HTML？</li><li>网页的形成？</li></ul><h3 id="1-1什么是网页："><a href="#1-1什么是网页：" class="headerlink" title="1.1什么是网页："></a>1.1什么是网页：</h3><blockquote><p><strong>网站</strong>是指在因特网上根据一定的规则，使用 HTML 等制作的用于展示特定内容相关的网页集合。<br> <strong>网页</strong>是网站中的一“页”，通常是 <strong>HTML 格式的文件</strong>，它要通过浏览器来阅读。</p><p><strong>网页是构成网站的基本元素</strong>，它通常由图片、链接、文字、声音、视频等<strong>元素</strong>组成。通常我们看到的网页，常见以 <strong>.htm</strong> 或 <strong>.html</strong> 后缀结尾的文件，因此将其俗称为 <strong>HTML 文件</strong>。</p></blockquote><h3 id="1-2什么是HTML："><a href="#1-2什么是HTML：" class="headerlink" title="1.2什么是HTML："></a>1.2什么是HTML：</h3><blockquote><p><strong>HTML</strong> 指的是<strong>超文本标记语言 (Hyper Text Markup Language)</strong> ，它是用来描述网页的一种语言。<br> HTML 不是一种编程语言，而是一种标记语言 (markup language)。<br> 标记语言是一套标记标签 (markup tag)。</p></blockquote><p><strong>所谓超文本，有 2 层含义：</strong></p><ol><li>它可以加入图片、声音、动画、多媒体等内容（超越了文本限制 ）。</li><li>它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（超级链接文本 ）。</li></ol><h3 id="1-3网页的组成："><a href="#1-3网页的组成：" class="headerlink" title="1.3网页的组成："></a>1.3网页的组成：</h3><p> 网页是由网页元素组成的，这些元素是利用 html 标签描述出来，然后通过浏览器解析来显示给用户的。<br><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108312209880.jpg" alt="网页的组成"></p><p>前端人员开发代码 —-&gt; 浏览器显示代码（解析、渲染） —–&gt; 生成最后的 Web 页面</p><h3 id="1-4网页的总结："><a href="#1-4网页的总结：" class="headerlink" title="1.4网页的总结："></a>1.4网页的总结：</h3><ul><li><p>网页是图片、链接、文字、声音、视频等元素组成, 其实就是一个html文件(后缀名为html)</p></li><li><p>网页生成制作:  有前端人员书写 HTML 文件, 然后浏览器打开,就能看到了网页.</p></li><li><p>HTML: 超文本标记语言, 用来制作网页的一门语言. 有标签组成的. 比如 图片标签 链接标签 视频标签等…</p></li></ul><h1 id="2-常用浏览器"><a href="#2-常用浏览器" class="headerlink" title="2.常用浏览器"></a>2.常用浏览器</h1><blockquote><p>浏览器是网页显示、运行的平台。常用的浏览器有 <strong>IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera</strong>等。平时称为五大浏览器。（其中IE和Edge均属于微软，所以称之为五大浏览器）</p></blockquote><p>查看浏览器市场份额：<a href="http://tongji.baidu.com/data/browser">http://tongji.baidu.com/data/browser</a><br><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108312209891.png" alt="五大浏览器"></p><h3 id="浏览器内核（渲染引擎）"><a href="#浏览器内核（渲染引擎）" class="headerlink" title="浏览器内核（渲染引擎）"></a><strong>浏览器内核（渲染引擎）</strong></h3><p>负责读取网页内容，整理讯息，计算网页的显示方式并显示页面</p><table><thead><tr><th>浏览器</th><th>内核</th><th>备注</th></tr></thead><tbody><tr><td>IE</td><td>Trident</td><td>IE、猎豹安全、360极速浏览器、百度浏览器</td></tr><tr><td>firefox</td><td>Gecko</td><td>火狐浏览器内核</td></tr><tr><td>Safari</td><td>Webkit</td><td>苹果浏览器内核</td></tr><tr><td>chrome/Opera</td><td>Blink</td><td>chrome/opera浏览器内核。Blink其实是WebKit的分支。</td></tr></tbody></table><p>目前国内一般浏览器都会采用 Webkit/Blink 内核，如 360、UC、QQ、搜狗等。</p><h1 id="3-web标准："><a href="#3-web标准：" class="headerlink" title="3.web标准："></a>3.web标准：</h1><p><strong>Web 标准</strong>是由 W3C 组织和其他标准化组织制定的<strong>一系列标准的集合</strong>。W3C（万维网联盟）是国际最著名的标准化组织。</p><h3 id="3-1为什么需要Web标准："><a href="#3-1为什么需要Web标准：" class="headerlink" title="3.1为什么需要Web标准："></a>3.1为什么需要Web标准：</h3><p>浏览器不同，它们显示页面或者排版就有些许差异<br><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108312209887.png" alt="为什么需要Web标准"></p><p>遵循 Web 标准除了可以让不同的开发人员写出的页面更标准、更统一外，还有以下优点：</p><ol><li>让 Web 的发展前景更广阔。 </li><li>内容能被更广泛的设备访问。</li><li>更容易被搜寻引擎搜索。</li><li>降低网站流量费用。</li><li>使网站更易于维护。</li><li>提高页面浏览速度。</li></ol><h3 id="3-2web标准的构成："><a href="#3-2web标准的构成：" class="headerlink" title="3.2web标准的构成："></a>3.2web标准的构成：</h3><p>主要包括<strong>结构（Structure）</strong> 、<strong>表现（Presentation）</strong>和<strong>行为（Behavior）</strong>三个方面。</p><table><thead><tr><th>标准</th><th>说明</th></tr></thead><tbody><tr><td>结构</td><td>结构用于对<strong>网页元素</strong>进行整理和分类，现阶段主要学的是HTML。</td></tr><tr><td>表现</td><td>表现用于设置网页元素的版式、颜色、大小等<strong>外观样式</strong>，主要指的是CSS</td></tr><tr><td>行为</td><td>行为是网页模型的定义及<strong>交互</strong>的编写，现阶段主要学的是Javascript</td></tr></tbody></table><p>Web 标准提出的最佳体验方案：<strong>结构、样式、行为相分离</strong>。<br>简单理解：<strong>结构写到 HTML 文件中， 表现写到 CSS 文件中， 行为写到 JavaScript 文件中。</strong><br><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202109062030516.png"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode编辑器的使用【保姆及教程】</title>
      <link href="/2021/08/30/VSCode%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/08/30/VSCode%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="VSCode软件"><a href="#VSCode软件" class="headerlink" title="VSCode软件"></a>VSCode软件</h1><blockquote><p>​    能够安装 VS Code</p><p>​    能够熟练使用 VS Code 软件</p><p>​    能够安装 VS Code 最常用的插件</p></blockquote><h1 id="VSCode-简介"><a href="#VSCode-简介" class="headerlink" title="VSCode 简介"></a>VSCode 简介</h1><p>Visual Studio Code (简称 VS Code / VSC) 是微软公司推出的一款免费开源的现代化轻量级代码编辑器，支持几乎所有主流的开发语言的语法高亮、智能代码补全、GIT 等特性，支持插件扩展等等。</p><p>推荐理由：</p><ul><li>比 sublime 开源，比 webstorm 更轻</li><li>智能提示很强大</li><li>自带 emmet（代码补全）</li><li>插件安装非常方便</li><li>自带强大的调试功能</li><li>软件跨平台支持 Win、Mac 以及 Linux。</li><li>···</li></ul><h1 id="VSCode-安装"><a href="#VSCode-安装" class="headerlink" title="VSCode 安装"></a>VSCode 安装</h1><p>官网下载地址： <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a>  </p><p>下载安装包：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304080.jpg" alt="点击下载，默认下载目录在此电脑--下载"></p><p>安装步骤：</p><ul><li><p>勾选我同意此协议协议，然后下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304081.jpg" alt="我同意此协议"></p></li></ul><ul><li><p>如果需要改变默认的安装位置，点击浏览选择目标位置时直接修改即可，然后下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304082.jpg" alt="选择安装位置"></p></li><li><p>默认即可直接下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304084.jpg" alt="无需操作，直接下一步"></p></li><li><p>为方便以后使用，建议创建桌面快捷方式，然后下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304085.jpg" alt="勾选桌面快捷方式，下一步"></p></li><li><p>安装</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304086.jpg" alt="点击安装"></p></li><li><p>完成</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304087.jpg" alt="安装完成，点击首次运行VSCode"></p></li></ul><h1 id="VSCode-使用"><a href="#VSCode-使用" class="headerlink" title="VSCode 使用"></a>VSCode 使用</h1><p><strong>注意：本教程以汉化版VSCode为例，如果你的VSCode请先跳到VSCode插件安装：汉化插件的安装</strong> </p><p><strong>汉化之后食用效果更佳哦!!!</strong>*</p><p><strong>注意：本教程以汉化版VSCode为例，如果你的VSCode请先跳到VSCode插件安装：汉化插件的安装</strong> </p><p><strong>汉化之后食用效果更佳哦!!!</strong>*</p><p><strong>注意：本教程以汉化版VSCode为例，如果你的VSCode请先跳到VSCode插件安装：汉化插件的安装</strong> </p><p><strong>汉化之后食用效果更佳哦!!!</strong>*</p><h2 id="VSCode界面介绍"><a href="#VSCode界面介绍" class="headerlink" title="VSCode界面介绍"></a>VSCode界面介绍</h2><p><strong>本次主要介绍三个常用的界面：资源管理器、扩展、设置。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304094.jpg" alt="三个常用的界面：资源管理器、扩展、设置"></p><h4 id="资源管理器"><a href="#资源管理器" class="headerlink" title="资源管理器"></a>资源管理器</h4><ul><li><p>在桌面新建一个名字为web1的文件夹。</p></li><li><p>打开VSCode，选择File（文件），然后选择Open Folder（打开文件夹） 快捷键：先按Ctrl+K，接着再按Ctrl+O。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304089.jpg" alt="打开文件夹"></p></li><li><p>找到桌面的web1文件夹，打开。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304090.jpg" alt="找到桌面的web1文件夹，选择文件夹"></p></li><li><p>左边是新建文件，右边是新建文件夹。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304091.jpg" alt="左边是新建文件，右边是新建文件夹"><strong>新建01文件夹，然后在01文件夹里新建名为index.html的文件</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304092.jpg" alt="新建01文件夹，然后在01文件夹里新建名为index.html的文件"></p></li><li><p>界面主要分为EXPLORER（资源管理界面）和代码编辑区。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304093.jpg" alt="界面主要分为EXPLORER（资源管理界面）和代码编辑区"></p></li></ul><h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><p><strong>设置颜色主题、自动保存、字体大小、缩进大小等</strong></p><p>设置颜色主题 ：</p><ul><li><p>点击设置按钮，选择颜色主题</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304095.jpg" alt="点击设置按钮，选择颜色主题"></p></li><li><p>在弹出的选择主题界面，选择喜欢的主题界面即可。其中Monokai是与sublime一致的风格。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304096.jpg" alt="在弹出的选择主题界面，选择喜欢的主题界面即可。其中Monokai是与sublime一致的风格"></p></li></ul><p>设置自动保存、字体大小、缩进：</p><ul><li><p>点击设置按钮，选择设置</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302314122.jpg" alt="点击设置按钮，选择设置"></p></li><li><p>找到常用设置，在常用设置里修改对应配置</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302314120.jpg" alt="找到常用设置，在常用设置里修改对应配置"></p></li><li><p>Files：Aoto Save 自动保存 设置为afterDelay</p></li><li><p>Editor：Font Size 根据自己需求设置为相应的像素大小</p></li><li><p>Editor：Tab Size 缩进大小，根据自己需求，日方老师要求2缩进</p></li></ul><h4 id="VSCode-插件安装"><a href="#VSCode-插件安装" class="headerlink" title="VSCode 插件安装"></a>VSCode 插件安装</h4><h5 id="推荐安装的插件"><a href="#推荐安装的插件" class="headerlink" title="推荐安装的插件"></a>推荐安装的插件</h5><table><thead><tr><th>插件</th><th align="left">作用</th></tr></thead><tbody><tr><td>Chinese   (Simplified) Language Pack for VS Code</td><td align="left">中文（简体）语言包</td></tr><tr><td>Open   in Browser</td><td align="left">右击选择浏览器打开html文件 【快捷方式Alt+B】</td></tr><tr><td>JS-CSS-HTML   Formatter</td><td align="left">每次保存，都会自动<strong>格式化js  css 和html 代码</strong></td></tr><tr><td>Auto   Rename Tag</td><td align="left">自动重命名配对的HTML / XML标签</td></tr><tr><td>CSS   Peek</td><td align="left">追踪至样式</td></tr></tbody></table><p>注意：插件安装需要联网。</p><h5 id="下面以汉化插件为例来演示安装方法"><a href="#下面以汉化插件为例来演示安装方法" class="headerlink" title="下面以汉化插件为例来演示安装方法"></a>下面以汉化插件为例来演示安装方法</h5><ul><li><p>点击左侧《扩展》图标，在搜索框输入需要安装的插件名称chinese，点击安装进行安装即可。安装完毕，需要重启软件使插件生效。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304097.jpg" alt="点击左侧《扩展》图标，在搜索框输入需要安装的插件名称chinese"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108302304098.jpg" alt="点击安装进行安装即可。安装完毕，需要重启软件使插件生效。"></p></li><li><p>其他插件安装方法同理，很简单，就不一一演示了</p></li></ul><h5 id="插件管理：禁用、启用或卸载已安装的插件"><a href="#插件管理：禁用、启用或卸载已安装的插件" class="headerlink" title="插件管理：禁用、启用或卸载已安装的插件"></a>插件管理：禁用、启用或卸载已安装的插件</h5><p>在扩展界面，点击已安装，点击对应插件的设置，根据需求选择启用、禁用和卸载即可。</p><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><ul><li>放大缩小视图：ctrl +  加号  和 ctrl +  减号</li><li>向上复制一行：alt+shift+↑ </li><li>向下复制一行：alt+shift+↓ </li><li>当光标点击到某一行时，默认选中全行，可以直接复制粘贴</li></ul><h1 id="附件：非常全的VsCode快捷键"><a href="#附件：非常全的VsCode快捷键" class="headerlink" title="附件：非常全的VsCode快捷键"></a>附件：非常全的VsCode快捷键</h1><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">Ctrl + Shift + P，F1</td><td align="left">显示命令面板 Show Command Palette</td></tr><tr><td align="left">Ctrl + P</td><td align="left">快速打开 Quick Open</td></tr><tr><td align="left">Ctrl + Shift + N</td><td align="left">新窗口/实例 New window/instance</td></tr><tr><td align="left">Ctrl + Shift + W</td><td align="left">关闭窗口/实例 Close window/instance</td></tr></tbody></table><h2 id="基础编辑-Basic-editing"><a href="#基础编辑-Basic-editing" class="headerlink" title="基础编辑 Basic editing"></a>基础编辑 Basic editing</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">Ctrl+X</td><td align="left">剪切行（空选定） Cut line (empty selection)</td></tr><tr><td align="left">Ctrl+C</td><td align="left">复制行（空选定）Copy line (empty selection)</td></tr><tr><td align="left">Alt+ ↑ / ↓</td><td align="left">向上/向下移动行 Move line up/down</td></tr><tr><td align="left">Shift+Alt + ↓ / ↑</td><td align="left">向上/向下复制行 Copy line up/down</td></tr><tr><td align="left">Ctrl+Shift+K</td><td align="left">删除行 Delete line</td></tr><tr><td align="left">Ctrl+Enter</td><td align="left">在下面插入行 Insert line below</td></tr><tr><td align="left">Ctrl+Shift+Enter</td><td align="left">在上面插入行 Insert line above</td></tr><tr><td align="left">Ctrl+Shift+\</td><td align="left">跳到匹配的括号 Jump to matching bracket</td></tr><tr><td align="left">Ctrl+] / [</td><td align="left">缩进/缩进行 Indent/outdent line</td></tr><tr><td align="left">Home</td><td align="left">转到行首 Go to beginning of line</td></tr><tr><td align="left">End</td><td align="left">转到行尾 Go to end of line</td></tr><tr><td align="left">Ctrl+Home</td><td align="left">转到文件开头 Go to beginning of file</td></tr><tr><td align="left">Ctrl+End</td><td align="left">转到文件末尾 Go to end of file</td></tr><tr><td align="left">Ctrl+↑ / ↓</td><td align="left">向上/向下滚动行 Scroll line up/down</td></tr><tr><td align="left">Alt+PgUp / PgDown</td><td align="left">向上/向下滚动页面 Scroll page up/down</td></tr><tr><td align="left">Ctrl+Shift+[</td><td align="left">折叠（折叠）区域 Fold (collapse) region</td></tr><tr><td align="left">Ctrl+Shift+]</td><td align="left">展开（未折叠）区域 Unfold (uncollapse) region</td></tr><tr><td align="left">Ctrl+K Ctrl+[</td><td align="left">折叠（未折叠）所有子区域 Fold (collapse) all subregions</td></tr><tr><td align="left">Ctrl+K Ctrl+]</td><td align="left">展开（未折叠）所有子区域 Unfold (uncollapse) all subregions</td></tr><tr><td align="left">Ctrl+K Ctrl+0</td><td align="left">折叠（折叠）所有区域 Fold (collapse) all regions</td></tr><tr><td align="left">Ctrl+K Ctrl+J</td><td align="left">展开（未折叠）所有区域 Unfold (uncollapse) all regions</td></tr><tr><td align="left">Ctrl+K Ctrl+C</td><td align="left">添加行注释 Add line comment</td></tr><tr><td align="left">Ctrl+K Ctrl+U</td><td align="left">删除行注释 Remove line comment</td></tr><tr><td align="left">Ctrl+/</td><td align="left">切换行注释 Toggle line comment</td></tr><tr><td align="left">Shift+Alt+A</td><td align="left">切换块注释 Toggle block comment</td></tr><tr><td align="left">Alt+Z</td><td align="left">切换换行 Toggle word wrap</td></tr></tbody></table><h2 id="导航-Navigation"><a href="#导航-Navigation" class="headerlink" title="导航 Navigation"></a>导航 Navigation</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">Ctrl + T</td><td align="left">显示所有符号 Show all Symbols</td></tr><tr><td align="left">Ctrl + G</td><td align="left">转到行… Go to Line…</td></tr><tr><td align="left">Ctrl + P</td><td align="left">转到文件… Go to File…</td></tr><tr><td align="left">Ctrl + Shift + O</td><td align="left">转到符号… Go to Symbol…</td></tr><tr><td align="left">Ctrl + Shift + M</td><td align="left">显示问题面板 Show Problems panel</td></tr><tr><td align="left">F8</td><td align="left">转到下一个错误或警告 Go to next error or warning</td></tr><tr><td align="left">Shift + F8</td><td align="left">转到上一个错误或警告 Go to previous error or warning</td></tr><tr><td align="left">Ctrl + Shift + Tab</td><td align="left">导航编辑器组历史记录 Navigate editor group history</td></tr><tr><td align="left">Alt + ←/→</td><td align="left">返回/前进 Go back / forward</td></tr><tr><td align="left">Ctrl + M</td><td align="left">切换选项卡移动焦点 Toggle Tab moves focus</td></tr></tbody></table><h2 id="搜索和替换-Search-and-replace"><a href="#搜索和替换-Search-and-replace" class="headerlink" title="搜索和替换 Search and replace"></a>搜索和替换 Search and replace</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">Ctrl + F</td><td align="left">查找 Find</td></tr><tr><td align="left">Ctrl + H</td><td align="left">替换 Replace</td></tr><tr><td align="left">F3 / Shift + F3</td><td align="left">查找下一个/上一个 Find next/previous</td></tr><tr><td align="left">Alt + Enter</td><td align="left">选择查找匹配的所有出现 Select all occurences of Find match</td></tr><tr><td align="left">Ctrl + D</td><td align="left">将选择添加到下一个查找匹配 Add selection to next Find match</td></tr><tr><td align="left">Ctrl + K Ctrl + D</td><td align="left">将最后一个选择移至下一个查找匹配项 Move last selection to next Find match</td></tr><tr><td align="left">Alt + C / R / W</td><td align="left">切换区分大小写/正则表达式/整个词 Toggle case-sensitive / regex / whole word</td></tr></tbody></table><h2 id="多光标和选择-Multi-cursor-and-selection"><a href="#多光标和选择-Multi-cursor-and-selection" class="headerlink" title="多光标和选择 Multi-cursor and selection"></a>多光标和选择 Multi-cursor and selection</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">Alt +单击</td><td align="left">插入光标 Insert cursor</td></tr><tr><td align="left">Ctrl + Alt +↑/↓</td><td align="left">在上/下插入光标 Insert cursor above / below</td></tr><tr><td align="left">Ctrl + U</td><td align="left">撤消上一个光标操作 Undo last cursor operation</td></tr><tr><td align="left">Shift + Alt + I</td><td align="left">在选定的每一行的末尾插入光标 Insert cursor at end of each line selected</td></tr><tr><td align="left">Ctrl + I</td><td align="left">选择当前行 Select current line</td></tr><tr><td align="left">Ctrl + Shift + L</td><td align="left">选择当前选择的所有出现 Select all occurrences of current selection</td></tr><tr><td align="left">Ctrl + F2</td><td align="left">选择当前字的所有出现 Select all occurrences of current word</td></tr><tr><td align="left">Shift + Alt + →</td><td align="left">展开选择 Expand selection</td></tr><tr><td align="left">Shift + Alt + ←</td><td align="left">缩小选择 Shrink selection</td></tr><tr><td align="left">Shift + Alt + （拖动鼠标）</td><td align="left">列（框）选择 Column (box) selection</td></tr><tr><td align="left">Ctrl + Shift + Alt +（箭头键）</td><td align="left">列（框）选择 Column (box) selection</td></tr><tr><td align="left">Ctrl + Shift + Alt + PgUp / PgDown</td><td align="left">列（框）选择页上/下 Column (box) selection page up/down</td></tr></tbody></table><h2 id="丰富的语言编辑-Rich-languages-editing"><a href="#丰富的语言编辑-Rich-languages-editing" class="headerlink" title="丰富的语言编辑 Rich languages editing"></a>丰富的语言编辑 Rich languages editing</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">Ctrl + 空格</td><td align="left">触发建议 Trigger suggestion</td></tr><tr><td align="left">Ctrl + Shift + Space</td><td align="left">触发器参数提示 Trigger parameter hints</td></tr><tr><td align="left">Tab</td><td align="left">Emmet 展开缩写 Emmet expand abbreviation</td></tr><tr><td align="left">Shift + Alt + F</td><td align="left">格式化文档 Format document</td></tr><tr><td align="left">Ctrl + K Ctrl + F</td><td align="left">格式选定区域 Format selection</td></tr><tr><td align="left">F12</td><td align="left">转到定义 Go to Definition</td></tr><tr><td align="left">Alt + F12</td><td align="left">Peek定义 Peek Definition</td></tr><tr><td align="left">Ctrl + K F12</td><td align="left">打开定义到边 Open Definition to the side</td></tr><tr><td align="left">Ctrl + .</td><td align="left">快速解决 Quick Fix</td></tr><tr><td align="left">Shift + F12</td><td align="left">显示引用 Show References</td></tr><tr><td align="left">F2</td><td align="left">重命名符号 Rename Symbol</td></tr><tr><td align="left">Ctrl + Shift + . /，</td><td align="left">替换为下一个/上一个值 Replace with next/previous value</td></tr><tr><td align="left">Ctrl + K Ctrl + X</td><td align="left">修剪尾随空格 Trim trailing whitespace</td></tr><tr><td align="left">Ctrl + K M</td><td align="left">更改文件语言 Change file language</td></tr></tbody></table><h2 id="编辑器管理-Editor-management"><a href="#编辑器管理-Editor-management" class="headerlink" title="编辑器管理 Editor management"></a>编辑器管理 Editor management</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">Ctrl+F4, Ctrl+W</td><td align="left">关闭编辑器 Close editor</td></tr><tr><td align="left">Ctrl+K F</td><td align="left">关闭文件夹 Close folder</td></tr><tr><td align="left">Ctrl+\</td><td align="left">拆分编辑器 Split editor</td></tr><tr><td align="left">Ctrl+ 1 / 2 / 3</td><td align="left">聚焦到第1，第2或第3编辑器组 Focus into 1st, 2nd or 3rd editor group</td></tr><tr><td align="left">Ctrl+K Ctrl+ ←/→</td><td align="left">聚焦到上一个/下一个编辑器组 Focus into previous/next editor group</td></tr><tr><td align="left">Ctrl+Shift+PgUp / PgDown</td><td align="left">向左/向右移动编辑器 Move editor left/right</td></tr><tr><td align="left">Ctrl+K ← / →</td><td align="left">移动活动编辑器组 Move active editor group</td></tr></tbody></table><h2 id="文件管理-File-management"><a href="#文件管理-File-management" class="headerlink" title="文件管理 File management"></a>文件管理 File management</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">Ctrl+N</td><td align="left">新文件 New File</td></tr><tr><td align="left">Ctrl+O</td><td align="left">打开文件… Open File…</td></tr><tr><td align="left">Ctrl+S</td><td align="left">保存 Save</td></tr><tr><td align="left">Ctrl+Shift+S</td><td align="left">另存为… Save As…</td></tr><tr><td align="left">Ctrl+K S</td><td align="left">全部保存 Save All</td></tr><tr><td align="left">Ctrl+F4</td><td align="left">关闭 Close</td></tr><tr><td align="left">Ctrl+K Ctrl+W</td><td align="left">关闭所有 Close All</td></tr><tr><td align="left">Ctrl+Shift+T</td><td align="left">重新打开关闭的编辑器 Reopen closed editor</td></tr><tr><td align="left">Ctrl+K</td><td align="left">输入保持打开 Enter Keep Open</td></tr><tr><td align="left">Ctrl+Tab</td><td align="left">打开下一个 Open next</td></tr><tr><td align="left">Ctrl+Shift+Tab</td><td align="left">打开上一个 Open previous</td></tr><tr><td align="left">Ctrl+K P</td><td align="left">复制活动文件的路径 Copy path of active file</td></tr><tr><td align="left">Ctrl+K R</td><td align="left">显示资源管理器中的活动文件 Reveal active file in Explorer</td></tr><tr><td align="left">Ctrl+K O</td><td align="left">显示新窗口/实例中的活动文件 Show active file in new window/instance</td></tr></tbody></table><h2 id="显示-Display"><a href="#显示-Display" class="headerlink" title="显示 Display"></a>显示 Display</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">F11</td><td align="left">切换全屏 Toggle full screen</td></tr><tr><td align="left">Shift+Alt+1</td><td align="left">切换编辑器布局 Toggle editor layout</td></tr><tr><td align="left">Ctrl+ = / -</td><td align="left">放大/缩小 Zoom in/out</td></tr><tr><td align="left">Ctrl+B</td><td align="left">切换侧栏可见性 Toggle Sidebar visibility</td></tr><tr><td align="left">Ctrl+Shift+E</td><td align="left">显示浏览器/切换焦点 Show Explorer / Toggle focus</td></tr><tr><td align="left">Ctrl+Shift+F</td><td align="left">显示搜索 Show Search</td></tr><tr><td align="left">Ctrl+Shift+G</td><td align="left">显示Git Show Git</td></tr><tr><td align="left">Ctrl+Shift+D</td><td align="left">显示调试 Show Debug</td></tr><tr><td align="left">Ctrl+Shift+X</td><td align="left">显示扩展 Show Extensions</td></tr><tr><td align="left">Ctrl+Shift+H</td><td align="left">替换文件 Replace in files</td></tr><tr><td align="left">Ctrl+Shift+J</td><td align="left">切换搜索详细信息 Toggle Search details</td></tr><tr><td align="left">Ctrl+Shift+C</td><td align="left">打开新命令提示符/终端 Open new command prompt/terminal</td></tr><tr><td align="left">Ctrl+Shift+U</td><td align="left">显示输出面板 Show Output panel</td></tr><tr><td align="left">Ctrl+Shift+V</td><td align="left">切换Markdown预览 Toggle Markdown preview</td></tr><tr><td align="left">Ctrl+K V</td><td align="left">从旁边打开Markdown预览 Open Markdown preview to the side</td></tr></tbody></table><h2 id="调试-Debug"><a href="#调试-Debug" class="headerlink" title="调试 Debug"></a>调试 Debug</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">F9</td><td align="left">切换断点 Toggle breakpoint</td></tr><tr><td align="left">F5</td><td align="left">开始/继续 Start/Continue</td></tr><tr><td align="left">Shift+F5</td><td align="left">停止 Stop</td></tr><tr><td align="left">F11 / Shift+F11</td><td align="left">下一步/上一步 Step into/out</td></tr><tr><td align="left">F10</td><td align="left">跳过 Step over</td></tr><tr><td align="left">Ctrl+K Ctrl+I</td><td align="left">显示悬停 Show hover</td></tr></tbody></table><h2 id="集成终端-Integrated-terminal"><a href="#集成终端-Integrated-terminal" class="headerlink" title="集成终端 Integrated terminal"></a>集成终端 Integrated terminal</h2><table><thead><tr><th align="left">按 Press</th><th align="left">功能 Function</th></tr></thead><tbody><tr><td align="left">Ctrl+`</td><td align="left">显示集成终端 Show integrated terminal</td></tr><tr><td align="left">Ctrl+Shift+`</td><td align="left">创建新终端 Create new terminal</td></tr><tr><td align="left">Ctrl+Shift+C</td><td align="left">复制选定 Copy selection</td></tr><tr><td align="left">Ctrl+Shift+V</td><td align="left">粘贴到活动端子 Paste into active terminal</td></tr><tr><td align="left">Ctrl+↑ / ↓</td><td align="left">向上/向下滚动 Scroll up/down</td></tr><tr><td align="left">Shift+PgUp / PgDown</td><td align="left">向上/向下滚动页面 Scroll page up/down</td></tr><tr><td align="left">Ctrl+Home / End</td><td align="left">滚动到顶部/底部 Scroll to top/bottom</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 前端 </tag>
            
            <tag> pink老师 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Rainbow 展示随机的英语句子</title>
      <link href="/2021/08/28/%E4%BD%BF%E7%94%A8-Rainbow-%E5%B1%95%E7%A4%BA%E9%9A%8F%E6%9C%BA%E7%9A%84%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90/"/>
      <url>/2021/08/28/%E4%BD%BF%E7%94%A8-Rainbow-%E5%B1%95%E7%A4%BA%E9%9A%8F%E6%9C%BA%E7%9A%84%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Rainbow - 一朵彩虹是 <code>EatRiceTeam</code>建立的一个旨在收集优美英语句子的一套网站。演示网站地址为：<a href="https://rainbow.eatrice.top/">https://rainbow.eatrice.top/</a></p><p>我们希望能够与大家分享我们在日常的学习生活中遇到的优美的英语句子，希望它能像彩虹一样，美丽天空，温暖人心。</p><p>其由<code>C#</code>开发，基于<code>ASP.NET Core 2.2</code>框架。包括<code>Web API</code>提供导出<code>JSON</code>的数据接口，和基于<code>MVC</code>的动态展示网站。</p><h2 id="关于Rainbow"><a href="#关于Rainbow" class="headerlink" title="关于Rainbow"></a>关于Rainbow</h2><p>Rainbow 收集的英语句子的要求为：</p><ol><li>读起来感觉很优美的文章句子段落或诗歌节选；</li><li>含义特别丰富且引人深思的鸡汤或哲学句子；</li><li>句子奇怪，但意义完整且显得很有个性的电影台词；</li><li>你特别喜欢，且引起你感情上共鸣的英语歌词。</li></ol><p>Rainbow 创建的初衷是替代我们的个人网站目前正在使用的 一言 ，我们希望自己能够自己定义一句话的意思和表现形式。目前句子库不是特别丰富，收集的资源有限，所以欢迎大家投稿，并发表自己的看法。</p><h2 id="给Rainbow投稿"><a href="#给Rainbow投稿" class="headerlink" title="给Rainbow投稿"></a>给Rainbow投稿</h2><p>我们希望找到小伙伴们和我们一起充实我们的句子库，希望大家能够将自己珍藏的句子分享给我们：</p><p><strong>投稿要求</strong>：</p><ol><li>提供完整的句子</li><li>提供句子的作者</li><li>提供句子的来源，如书名、文章名、电影名、歌曲名等。</li></ol><p>投稿方式：</p><ol><li><a href="mailto:qiqi@eatrice.top">EatRice的邮箱：qiqi@eatrice.top</a></li><li><a href="https://hexo.fluid-dev.com/posts/hexo-rainbow/dipper.ruru@gmail.com">Courir的邮箱：dipper.ruru@gmail.com</a></li><li>在本页下方留言</li><li>好友QQ或微信直接发送</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="数据接口"><a href="#数据接口" class="headerlink" title="数据接口"></a>数据接口</h3><p>目前语句库饱含了三种类型的语句：reading、movies、songs</p><p>需要从语句库中随机获得语句的<code>Json</code>格式的接口：<code>https://api.eatrice.top/</code></p><p>需要按照三个单独分类请求语句的接口：<br><code>https://api.eatrice.top/reading/</code><br><code>https://api.eatrice.top/movies/</code><br><code>https://api.eatrice.top/songs/</code></p><p>获取所有的句子接口：<code>https://api.eatrice.top/GetAll/</code></p><p>需要根据语句ID请求语句的接口：<code>https://api.eatrice.top/?ID=10001</code><br>ID编号从10001开始增加，若该ID不存在则随机返回语句，同<code>https://api.eatrice.top/</code></p><p>返回的数据格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Content&quot;: &quot;Because I am your mom,It counts the most because I know you the most.&quot;,</span><br><span class="line">    &quot;Author&quot;: &quot;Stephen Chbosky&quot;,</span><br><span class="line">    &quot;Source&quot;: &quot;Wonder&quot;,</span><br><span class="line">    &quot;ID&quot;: &quot;10009&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>Content</code>为句子内容<br><code>Author</code>为句子作者<br><code>Source</code>为句子来源<br><code>ID</code>为句子ID</p><h3 id="展示网站"><a href="#展示网站" class="headerlink" title="展示网站"></a>展示网站</h3><p>展示网站为 Rainbow 提供展示界面。和说明文档。</p><p>Rainbow的展示网站为：<a href="https://rainbow.eatrice.top/">https://rainbow.eatrice.top/</a><br>欢迎大家访问和提供意见😊😊😊。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108281548580.jpg" alt="效果图"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在需要添加 <code>rainbow</code> 的地方添加一个占位符:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;a id=&quot;rainbow&quot; href=&#x27;&#x27;&gt;🌈 正在努力获取中...&lt;/a&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>在申明div之后，搭配数据请求脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">fetch(&#x27;https://api.eatrice.top&#x27;)</span><br><span class="line">  .then(response =&gt; response.json())</span><br><span class="line">  .then(data =&gt; &#123;</span><br><span class="line">    var rainbow = document.getElementById(&#x27;rainbow&#x27;);</span><br><span class="line">    rainbow.innerHTML = data.Content;</span><br><span class="line">    rainbow.href = &quot;https://rainbow.eatrice.top/?ID=&quot; + data.ID;</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(console.error)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>就能在网站上看到你的 rainbow 啦！</p><h2 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h2><p>项目已在<code>github</code>上开源</p><ul><li>项目地址：<a href="https://github.com/QiQiWan/rainbow/">https://github.com/QiQiWan/rainbow/</a></li><li>项目仓库：<a href="https://github.com/QiQiWan/rainbow/">git@github.com:QiQiWan/rainbow.git</a></li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p><a href="https://eatrice.top/">EatRice-https://eatrice.top</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo美化 </tag>
            
            <tag> Rainbow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Fluid 主题首页上加入一言</title>
      <link href="/2021/08/27/%E5%9C%A8-Fluid-%E4%B8%BB%E9%A2%98%E9%A6%96%E9%A1%B5%E4%B8%8A%E5%8A%A0%E5%85%A5%E4%B8%80%E8%A8%80/"/>
      <url>/2021/08/27/%E5%9C%A8-Fluid-%E4%B8%BB%E9%A2%98%E9%A6%96%E9%A1%B5%E4%B8%8A%E5%8A%A0%E5%85%A5%E4%B8%80%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h2><h3 id="typed-ejs"><a href="#typed-ejs" class="headerlink" title="typed.ejs"></a>typed.ejs</h3><p>修改<code>layout\_partial\plugins</code>目录下的<code>typed.ejs</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(theme.fun_features.typing.enable &amp;&amp; page.subtitle !== false)&#123; %&gt;</span><br><span class="line">  &lt;%- js_ex(theme.static_prefix.typed, &quot;/typed.min.js&quot;) %&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    function typing(id, title)&#123;</span><br><span class="line">        var typed = new Typed(&#x27;#&#x27; + id, &#123;</span><br><span class="line">            strings: [</span><br><span class="line">              &#x27;  &#x27;,</span><br><span class="line">              title + &quot;&amp;nbsp;&quot;,</span><br><span class="line">            ],</span><br><span class="line">            cursorChar: &quot;&lt;%- theme.fun_features.typing.cursorChar %&gt;&quot;,</span><br><span class="line">            typeSpeed: &lt;%- theme.fun_features.typing.typeSpeed %&gt;,</span><br><span class="line">            loop: &lt;%- theme.fun_features.typing.loop %&gt;,</span><br><span class="line">        &#125;);</span><br><span class="line">        typed.stop();</span><br><span class="line">        $(document).ready(function () &#123;</span><br><span class="line">            $(&quot;.typed-cursor&quot;).addClass(&quot;h2&quot;);</span><br><span class="line">            typed.start();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;% if(is_post()) &#123; %&gt;</span><br><span class="line">        typing(&quot;subtitle&quot;, &quot;&lt;%- data.subtitle %&gt;&quot;)</span><br><span class="line">    &lt;% &#125; else if(theme.index.hitokoto.enable)&#123; %&gt;</span><br><span class="line">        fetch(&#x27;https://v1.hitokoto.cn&#x27;)</span><br><span class="line">        .then(response =&gt; response.json())</span><br><span class="line">        .then(data =&gt; &#123;</span><br><span class="line">           typing(&quot;hitokoto&quot;, data.hitokoto)</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(console.error)</span><br><span class="line">    &lt;% &#125; else &#123; %&gt;</span><br><span class="line">        typing(&quot;subtitle&quot;, &quot;&lt;%- data.subtitle %&gt;&quot;)</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><ul><li><p>将原来的功能放在typing函数里面，再判断打字机显示subtitle还是hitokoto</p><ul><li><p>所有的post都显示subtitle，即markdown的title，page的title是网站的标题</p></li><li><p>除了post以外，判断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme.index.hitokoto.enable</span><br></pre></td></tr></table></figure><ul><li>设置显示一言，则通过fetch调用hitokoto的API，这个部分官方说明[<a href="https://hexo.fluid-dev.com/posts/fluid-hitokoto/#fn:1">1]</a>和DIY教程[<a href="https://hexo.fluid-dev.com/posts/fluid-hitokoto/#fn:2">2]</a>都说的很详细了</li><li>如果设置不显示一言，则显示subtitle</li></ul></li><li><p>hitokoto比subtitle优先级高，这会导致归档、分类、标签等页面的打字机显示hitokoto</p></li><li><p>如果只需要在首页显示hitokoto，但在非post的页面显示原subtitle，这需要判断页面的属性，据我观察，所有的非post的页面布局(layout)都会设置<code>page.layout=”XXX“</code>，但是index和page没有设置，因此，可以通过<code>!page.layout</code>判断来判断是否为首页，当然，post页面设定显示subtitle，就不在考虑范围内，这样只需将上面的<code>else if</code>条件修改如下</p></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% &#125; else if(theme.index.hitokoto.enable &amp;&amp; !page.layout) &#123; %&gt;</span><br></pre></td></tr></table></figure><h3 id="layout-ejs"><a href="#layout-ejs" class="headerlink" title="layout.ejs"></a>layout.ejs</h3><p>修改<code>layout</code>目录下的<code>layout.ejs</code>，在<code>&lt;span class=&quot;h2&quot; id=&quot;subtitle&quot;&gt;</code>和<code>&lt;% if(is_post()) &#123; %&gt;</code>之间插入如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;h2&quot; id=&quot;subtitle&quot;&gt;</span><br><span class="line">    &lt;% if(theme.fun_features.typing.enable == false) &#123; %&gt;</span><br><span class="line">    &lt;%- subtitle %&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">&lt;% if(!is_post()) &#123; %&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;span class=&quot;h2&quot; id=&quot;hitokoto&quot;&gt;</span><br><span class="line">    &lt;% if(theme.fun_features.typing.enable == false) &#123; %&gt;</span><br><span class="line">    &lt;%- hitokoto %&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;% if(is_post()) &#123; %&gt;</span><br><span class="line">&lt;%- partial(&#x27;_partial/post-meta&#x27;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>这个部分设置显示hitokoto的样式和位置，不设置这个会报关于<code>typing(&quot;hitokoto&quot;, data.hitokoto)</code>的错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError: Cannot read property &#x27;tagName&#x27; of null</span><br></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>在<code>source\_data</code>目录下修改<strong>主题配置</strong>文件<code>fluid_config.yml</code>，在<code>index</code>下设置hitokoto的开关</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#---------------------------</span><br><span class="line"># 首页</span><br><span class="line"># Index Page</span><br><span class="line">#---------------------------</span><br><span class="line">index:</span><br><span class="line"># 添加hitokoto</span><br><span class="line">  slogan:  # 首页副标题的独立设置</span><br><span class="line">    enable: true  # 为 false 则不显示任何内容</span><br><span class="line">    text: &#x27;More haste, less speed.&#x27;  # 为空则按 hexo config.subtitle 显示</span><br><span class="line">  hitokoto:  # 非post页面显示一言</span><br><span class="line">    enable: true  # slogan 和 hitokoto 不能同时启用，优先显示hitokoto</span><br></pre></td></tr></table></figure><ul><li>当<code>theme.index.hitokoto.enable == true</code>时，slogan里的text不在显示，因此只有关闭hitokoto才能在首页显示slogan的text或页面的subtitle</li></ul><h2 id="加入出处"><a href="#加入出处" class="headerlink" title="加入出处"></a>加入出处</h2><ol><li>如果想加入出处，可在打印<code>data.hitokoto</code>后加入<code>data.from</code>，以及相应的格式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typing(&quot;hitokoto&quot;, &#x27;『&#x27; + data.hitokoto + &#x27;』&#x27; + &#x27;&lt;br /&gt; &lt;h5&gt;&#x27;+ &#x27;——&#x27; + &#x27;「&#x27; + data.from + &#x27;」&#x27; + &#x27;&lt;/h5&gt;&#x27;)</span><br></pre></td></tr></table></figure><ol><li>另一种显示出处的方法是另起一行打印<code>data.from</code>，</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fetch(&#x27;https://v1.hitokoto.cn&#x27;)</span><br><span class="line">.then(response =&gt; response.json())</span><br><span class="line">.then(data =&gt; &#123;</span><br><span class="line">    typing(&quot;hitokoto&quot;, data.hitokoto)</span><br><span class="line">    typing(&quot;hitofrom &quot;, data.from)</span><br><span class="line">&#125;)</span><br><span class="line">.catch(console.error)</span><br></pre></td></tr></table></figure><ul><li>并在<code>layout.ejs</code>添加<code>&lt;%- hitofrom %&gt;</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(!is_post()) &#123; %&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;span class=&quot;h2&quot; id=&quot;hitokoto&quot;&gt;</span><br><span class="line">    &lt;% if(theme.fun_features.typing.enable == false) &#123; %&gt;</span><br><span class="line">    &lt;%- hitokoto %&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;span class=&quot;h2&quot; id=&quot;hitofrom&quot;&gt;</span><br><span class="line">    &lt;% if(theme.fun_features.typing.enable == false) &#123; %&gt;</span><br><span class="line">    &lt;%- hitofrom %&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><ul><li>第一种是打印一段话，从头到尾只有一个cursorChar，但样式不太好改</li><li>第二种是打印两段话，会出现视觉混乱(个人觉得)，样式方便调整</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>当然这个还可以继续改下去，例如添加出处(hitofrom)、设置循环(loop)、修改样式等。</p><p>最后也是最重要的，感谢tanxinzheng[<a href="https://hexo.fluid-dev.com/posts/fluid-hitokoto/#fn:3">3]</a> (虽然不认识，但是新知识get！😁)。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://developer.hitokoto.cn/">一言开发者中心</a> <a href="https://hexo.fluid-dev.com/posts/fluid-hitokoto/#fnref:1">↩</a></li><li><a href="https://blog.bill.moe/add-hitokoto/">为您的Hexo博客添加Hitokoto一言功能</a> <a href="https://hexo.fluid-dev.com/posts/fluid-hitokoto/#fnref:2">↩</a></li><li><a href="http://tanxinzheng.github.io/">Code World</a> <a href="https://hexo.fluid-dev.com/posts/fluid-hitokoto/#fnref:3">↩</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo美化 </tag>
            
            <tag> Fluid主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fluid 页脚增加网站运行时长</title>
      <link href="/2021/08/27/Fluid-%E9%A1%B5%E8%84%9A%E5%A2%9E%E5%8A%A0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%95%BF/"/>
      <url>/2021/08/27/Fluid-%E9%A1%B5%E8%84%9A%E5%A2%9E%E5%8A%A0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<p>Fluid 1.8.4 版本支持自定义页脚内容了，群友常改的网站运行时长，这次无需再修改源代码。</p><p>只需要在主题配置中的 <code>footer: content</code> 添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line">  content: &#x27;</span><br><span class="line">    &lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Hexo&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">    &lt;i class=&quot;iconfont icon-love&quot;&gt;&lt;/i&gt;</span><br><span class="line">    &lt;a href=&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Fluid&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">    &lt;div style=&quot;font-size: 0.85rem&quot;&gt;</span><br><span class="line">      &lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;</span><br><span class="line">      &lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;</span><br><span class="line">      &lt;script src=&quot;/js/duration.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &#x27;</span><br></pre></td></tr></table></figure><p><code>content</code> 前三行是 Fluid 原有的页脚内容，建议不要删除，可稍作修改，保留 Fluid 的超链接，用于向更多人推广主题。</p><p><code>duration.js</code> 包含的才是功能代码，我们在博客目录下创建 <code>source/js/duration.js</code>，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">!(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">/** 计时起始时间，自行修改 **/</span></span><br><span class="line">  <span class="keyword">var</span> start = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;2020/01/01 00:00:00&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    now.<span class="title function_">setTime</span>(now.<span class="title function_">getTime</span>()+<span class="number">250</span>);</span><br><span class="line">    days = (now - start) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>;</span><br><span class="line">    dnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(days);</span><br><span class="line">    hours = (now - start) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * dnum);</span><br><span class="line">    hnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(hours);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title class_">String</span>(hnum).<span class="property">length</span> === <span class="number">1</span> )&#123;</span><br><span class="line">      hnum = <span class="string">&quot;0&quot;</span> + hnum;</span><br><span class="line">    &#125;</span><br><span class="line">    minutes = (now - start) / <span class="number">1000</span> /<span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * hnum);</span><br><span class="line">    mnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(minutes);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title class_">String</span>(mnum).<span class="property">length</span> === <span class="number">1</span> )&#123;</span><br><span class="line">      mnum = <span class="string">&quot;0&quot;</span> + mnum;</span><br><span class="line">    &#125;</span><br><span class="line">    seconds = (now - start) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * <span class="number">60</span> * hnum) - (<span class="number">60</span> * mnum);</span><br><span class="line">    snum = <span class="title class_">Math</span>.<span class="title function_">round</span>(seconds);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title class_">String</span>(snum).<span class="property">length</span> === <span class="number">1</span> )&#123;</span><br><span class="line">      snum = <span class="string">&quot;0&quot;</span> + snum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;timeDate&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;本站安全运行&amp;nbsp&quot;</span>+dnum+<span class="string">&quot;&amp;nbsp天&quot;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;times&quot;</span>).<span class="property">innerHTML</span> = hnum + <span class="string">&quot;&amp;nbsp小时&amp;nbsp&quot;</span> + mnum + <span class="string">&quot;&amp;nbsp分&amp;nbsp&quot;</span> + snum + <span class="string">&quot;&amp;nbsp秒&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">update</span>();</span><br><span class="line">  <span class="built_in">setInterval</span>(update, <span class="number">1000</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>不要忘记把上面注释的时间改为自己的时间，至此这项功能就引入到 <code>&lt;footer&gt;</code> 里了。</p>]]></content>
      
      
      <categories>
          
          <category> hexo美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo美化 </tag>
            
            <tag> Fluid主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过 Hexo 5 注入器为主题添加新功能</title>
      <link href="/2021/08/27/%E9%80%9A%E8%BF%87-Hexo-5-%E6%B3%A8%E5%85%A5%E5%99%A8%E4%B8%BA%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%B0%E5%8A%9F%E8%83%BD/"/>
      <url>/2021/08/27/%E9%80%9A%E8%BF%87-Hexo-5-%E6%B3%A8%E5%85%A5%E5%99%A8%E4%B8%BA%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%B0%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo-注入器"><a href="#Hexo-注入器" class="headerlink" title="Hexo 注入器"></a>Hexo 注入器</h2><p><a href="https://hexo.io/zh-cn/api/injector.html">Hexo 注入器</a>是 Hexo 5 版本加入的一项新功能，注入器可以将静态代码片段注入生成的 HTML 的 <code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 中。</p><p>编写注入代码，需要在博客的根目录下创建 <code>scripts</code> 文件夹，然后在里面任意命名创建一个 js 文件即可。</p><p>例如创建一个 <code>/blog/scripts/example.js</code>，内容为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">injector</span>.<span class="title function_">register</span>(<span class="string">&#x27;body_end&#x27;</span>, <span class="string">&#x27;&lt;script src=&quot;/jquery.js&quot;&gt;&lt;/script&gt;&#x27;</span>, <span class="string">&#x27;default&#x27;</span>);</span><br></pre></td></tr></table></figure><p>上述代码会在生成的页面 <code>&lt;/body&gt;</code> 注入加载 <code>jquery.js</code> 的代码。</p><p><code>register</code> 函数可接受三个参数，第一个参数是代码片段注入的位置，接受以下值：</p><ul><li><code>head_begin</code>: 注入在 <code>&lt;head&gt;</code> 之后（默认）</li><li><code>head_end</code>: 注入在 <code>&lt;/head&gt;</code> 之前</li><li><code>body_begin</code>: 注入在 <code>&lt;body&gt;</code> 之后</li><li><code>body_end</code>: 注入在 <code>&lt;/body&gt;</code> 之前</li></ul><p>第二个参数是注入的片段，可以是字符串，也可以是一个返回值为字符串的函数。</p><p>第三个参数是注入的页面类型，接受以下值：</p><ul><li><code>default</code>: 注入到每个页面（默认值）</li><li><code>home</code>: 只注入到主页（<code>is_home()</code> 为 <code>true</code> 的页面）</li><li><code>post</code>: 只注入到文章页面（<code>is_post()</code> 为 <code>true</code> 的页面）</li><li><code>page</code>: 只注入到独立页面（<code>is_page()</code> 为 <code>true</code> 的页面）</li><li><code>archive</code>: 只注入到归档页面（<code>is_archive()</code> 为 <code>true</code> 的页面）</li><li><code>category</code>: 只注入到分类页面（<code>is_category()</code> 为 <code>true</code> 的页面）</li><li><code>tag</code>: 只注入到标签页面（<code>is_tag()</code> 为 <code>true</code> 的页面）</li><li>或是其他自定义 layout 名称</li></ul><h2 id="实际案例"><a href="#实际案例" class="headerlink" title="实际案例"></a>实际案例</h2><p>在实际使用中，建议将 js 代码独立成为 js 文件，存放在博客的 <code>source</code> 目录下，然后在 <code>scripts</code> 里通过一个包含 injector 的 js 文件统一引入。</p><p>例如创建一个 <code>/source/js/custom.js</code>，里面包含初始化的代码，然后在 <code>/scripts/injector.js</code> 里写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">injector</span>.<span class="title function_">register</span>(<span class="string">&#x27;body_end&#x27;</span>, <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script src=&quot;/js/custom.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">`</span>)</span><br></pre></td></tr></table></figure><p>以下案例都采用类似的形式，不再赘述。</p><h3 id="APlayer-音乐播放器"><a href="#APlayer-音乐播放器" class="headerlink" title="APlayer 音乐播放器"></a>APlayer 音乐播放器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">injector</span>.<span class="title function_">register</span>(<span class="string">&#x27;body_end&#x27;</span>, <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;div id=&quot;aplayer&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;link defer rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.css&quot; /&gt;</span></span><br><span class="line"><span class="string">  &lt;script src=&quot;https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script defer src=&quot;/js/aplayer.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">`</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">!(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> oldLoadAp = <span class="variable language_">window</span>.<span class="property">onload</span>;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    oldLoadAp &amp;&amp; <span class="title function_">oldLoadAp</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">APlayer</span>(&#123;</span><br><span class="line">      <span class="attr">container</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;aplayer&#x27;</span>),</span><br><span class="line">      <span class="attr">fixed</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">autoplay</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">loop</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">      <span class="attr">order</span>: <span class="string">&#x27;random&#x27;</span>,</span><br><span class="line">      <span class="attr">theme</span>: <span class="string">&#x27;#b7daff&#x27;</span>,</span><br><span class="line">      <span class="attr">preload</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">      <span class="attr">audio</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;song1&#x27;</span>,</span><br><span class="line">          <span class="attr">artist</span>: <span class="string">&#x27;artist1&#x27;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;/songs/song1.mp3&#x27;</span>,</span><br><span class="line">          <span class="attr">cover</span>: <span class="string">&#x27;/img/cover.jpg&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>container</td><td>document.querySelector(‘.aplayer’)</td><td>播放器容器元素</td></tr><tr><td>fixed</td><td>false</td><td>开启吸底模式, <a href="https://aplayer.js.org/#/home?id=fixed-mode">详情</a></td></tr><tr><td>mini</td><td>false</td><td>开启迷你模式, <a href="https://aplayer.js.org/#/home?id=mini-mode">详情</a></td></tr><tr><td>autoplay</td><td>false</td><td>音频自动播放</td></tr><tr><td>theme</td><td>‘#b7daff’</td><td>主题色</td></tr><tr><td>loop</td><td>‘all’</td><td>音频循环播放, 可选值: ‘all’, ‘one’, ‘none’</td></tr><tr><td>order</td><td>‘list’</td><td>音频循环顺序, 可选值: ‘list’, ‘random’</td></tr><tr><td>preload</td><td>‘auto’</td><td>预加载，可选值: ‘none’, ‘metadata’, ‘auto’</td></tr><tr><td>volume</td><td>0.7</td><td>默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</td></tr><tr><td>audio</td><td>-</td><td>音频信息, 应该是一个对象或对象数组</td></tr><tr><td>audio.name</td><td>-</td><td>音频名称</td></tr><tr><td>audio.artist</td><td>-</td><td>音频艺术家</td></tr><tr><td>audio.url</td><td>-</td><td>音频链接</td></tr><tr><td>audio.cover</td><td>-</td><td>音频封面</td></tr><tr><td>audio.lrc</td><td>-</td><td><a href="https://aplayer.js.org/#/home?id=lrc">详情</a></td></tr><tr><td>audio.theme</td><td>-</td><td>切换到此音频时的主题色，比上面的 theme 优先级高</td></tr><tr><td>audio.type</td><td>‘auto’</td><td>可选值: ‘auto’, ‘hls’, ‘normal’ 或其他自定义类型, <a href="https://aplayer.js.org/#/home?id=mse-support">详情</a></td></tr><tr><td>customAudioType</td><td>-</td><td>自定义类型，<a href="https://aplayer.js.org/#/home?id=mse-support">详情</a></td></tr><tr><td>mutex</td><td>true</td><td>互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</td></tr><tr><td>lrcType</td><td>0</td><td><a href="https://aplayer.js.org/#/home?id=lrc">详情</a></td></tr><tr><td>listFolded</td><td>false</td><td>列表默认折叠</td></tr><tr><td>listMaxHeight</td><td>-</td><td>列表最大高度</td></tr><tr><td>storageName</td><td>‘aplayer-setting’</td><td>存储播放器设置的 localStorage key</td></tr></tbody></table><p>更多关于Aplayer详见 <a href="https://aplayer.js.org/#/zh-Hans/?id=%E5%8F%82%E6%95%B0">Aplayer 文档</a>。</p><h3 id="DaoVoice-聊天插件"><a href="#DaoVoice-聊天插件" class="headerlink" title="DaoVoice 聊天插件"></a>DaoVoice 聊天插件</h3><p>先在 <a href="https://daovoice.io/">https://daovoice.io</a> 注册一个账号，按其中的引导获得 appId，然后添加如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">injector</span>.<span class="title function_">register</span>(<span class="string">&#x27;body_end&#x27;</span>, <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script defer src=&quot;/js/daovoice.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">`</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">!(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> appId = <span class="string">&#x27;这里填上注册后账号的 appId&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  (<span class="keyword">function</span> (<span class="params">i, s, o, g, r, a, m</span>) &#123;  </span><br><span class="line">    i[<span class="string">&#x27;DaoVoiceObject&#x27;</span>] = r;</span><br><span class="line">    i[r] = i[r] ||</span><br><span class="line">      <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        (i[r].<span class="property">q</span> = i[r].<span class="property">q</span> || []).<span class="title function_">push</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">      &#125;;</span><br><span class="line">    i[r].<span class="property">l</span> = <span class="number">1</span> * <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    a = s.<span class="title function_">createElement</span>(o);</span><br><span class="line">    m = s.<span class="title function_">getElementsByTagName</span>(o)[<span class="number">0</span>];</span><br><span class="line">    a.<span class="property">async</span> = <span class="number">1</span>;</span><br><span class="line">    a.<span class="property">src</span> = g;</span><br><span class="line">    a.<span class="property">charset</span> = <span class="string">&#x27;utf-8&#x27;</span>;</span><br><span class="line">    m.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(a, m);</span><br><span class="line">  &#125;)(<span class="variable language_">window</span>, <span class="variable language_">document</span>, <span class="string">&#x27;script&#x27;</span>, (<span class="string">&#x27;https:&#x27;</span> === <span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">protocol</span> ? <span class="string">&#x27;https:&#x27;</span> : <span class="string">&#x27;http:&#x27;</span>) + <span class="string">&#x27;//widget.daovoice.io/widget/&#x27;</span> + appId + <span class="string">&#x27;.js&#x27;</span>, <span class="string">&#x27;daovoice&#x27;</span>);</span><br><span class="line">  <span class="title function_">daovoice</span>(<span class="string">&#x27;init&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">app_id</span>: appId,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">daovoice</span>(<span class="string">&#x27;update&#x27;</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h3 id="文章时效性提示"><a href="#文章时效性提示" class="headerlink" title="文章时效性提示"></a>文章时效性提示</h3><p>技术性文章往往存在时效性的问题，比如某些文章会介绍一些临时解决方案，但随着时间推移可能已经失效了。我们可以通过判断发布时间（即文章设置的 <code>date</code>）与当前时间的间隔，来为文章开头插入一条提示。</p><p>代码效果如下所示：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108271955300.png" alt="文章时效性提示"></p><p>文章时效性提示</p><p>这是一篇发布于 263 天前的文章，部分信息可能已发生改变，请注意甄别。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> times = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (times.<span class="property">length</span> === <span class="number">0</span>) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">  <span class="keyword">var</span> posts = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;post-content&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (posts.<span class="property">length</span> === <span class="number">0</span>) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> pubTime = <span class="keyword">new</span> <span class="title class_">Date</span>(times[<span class="number">0</span>].<span class="property">dateTime</span>);  <span class="comment">/* 文章发布时间戳 */</span></span><br><span class="line">  <span class="keyword">var</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>()  <span class="comment">/* 当前时间戳 */</span></span><br><span class="line">  <span class="keyword">var</span> interval = <span class="built_in">parseInt</span>(now - pubTime)</span><br><span class="line">  <span class="comment">/* 发布时间超过指定时间（毫秒） */</span></span><br><span class="line">  <span class="keyword">if</span> (interval &gt; <span class="number">3600</span>*<span class="number">24</span>*<span class="number">30</span>*<span class="number">1000</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> days = <span class="built_in">parseInt</span>(interval / <span class="number">86400000</span>)</span><br><span class="line">    posts[<span class="number">0</span>].<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;div class=&quot;note note-warning&quot; style=&quot;font-size:0.9rem&quot;&gt;&lt;p&gt;&#x27;</span> +</span><br><span class="line">      <span class="string">&#x27;&lt;div class=&quot;h6&quot;&gt;文章时效性提示&lt;/div&gt;&lt;p&gt;这是一篇发布于 &#x27;</span> + days + <span class="string">&#x27; 天前的文章，部分信息可能已发生改变，请注意甄别。&#x27;</span> +</span><br><span class="line">      <span class="string">&#x27;&lt;/p&gt;&lt;/p&gt;&lt;/div&gt;&#x27;</span> + posts[<span class="number">0</span>].<span class="property">innerHTML</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取微软OneDrive的refresh_token、client_id、client_secret和access_token</title>
      <link href="/2021/08/24/%E8%8E%B7%E5%8F%96%E5%BE%AE%E8%BD%AFOneDrive%E7%9A%84refresh-token%E3%80%81client-id%E3%80%81client-secret%E5%92%8Caccess-token/"/>
      <url>/2021/08/24/%E8%8E%B7%E5%8F%96%E5%BE%AE%E8%BD%AFOneDrive%E7%9A%84refresh-token%E3%80%81client-id%E3%80%81client-secret%E5%92%8Caccess-token/</url>
      
        <content type="html"><![CDATA[<h1 id="获取微软OneDrive的refresh-token、client-id、client-secret和access-token"><a href="#获取微软OneDrive的refresh-token、client-id、client-secret和access-token" class="headerlink" title="获取微软OneDrive的refresh_token、client_id、client_secret和access_token"></a>获取微软OneDrive的<code>refresh_token</code>、<code>client_id</code>、<code>client_secret</code>和<code>access_token</code></h1><h2 id="获取-client-id"><a href="#获取-client-id" class="headerlink" title="获取 client_id"></a>获取 <code>client_id</code></h2><p><strong>访问此 URL 创建新的 Blade app：<a href="https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade">Microsoft Azure App registrations</a>（普通版 OneDrive）或 <a href="https://portal.azure.cn/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade">Microsoft Azure.cn App registrations</a>（OneDrive 世纪互联版本）</strong></p><ol><li>使用你的 Microsoft 账户登录，选择新注册</li><li><code>名称</code>可随意填写；</li><li>将 受支持的类型设置为 <code>    任何组织目录(任何 Azure AD 目录 - 多租户)中的帐户和个人 Microsoft 帐户(例如，Skype、Xbox)</code>。OneDrive 世纪互联用户设置为：<code>任何组织目录（任何 Azure AD 目录 - 多租户）中的帐户</code>；</li><li>将 <code>重定向 URI</code> 设置为 <code>Web</code>（下拉选项框）以及 <del><a href="http://localhost/">http://localhost</a></del>（URL 地址）<strong>注意：图中的<a href="http://localhost已经失效,新的地址为`http//localhost:3000%60%EF%BC%9B">http://localhost已经失效，新的地址为`http://localhost:3000`；</a></strong></li><li>点击 <code>注册</code>.</li></ol><p><strong>在 <code>概述</code> 面板获取你的 应用程序(客户端) ID 即 <code>client_id</code>：948fd46a-c70f-45c4-b397-2627e30f9868</strong></p><h2 id="获取client-secret"><a href="#获取client-secret" class="headerlink" title="获取client_secret"></a>获取<code>client_secret</code></h2><p><strong>打开 <code>证书和密码</code> 面板，点击 <code>新客户端密码</code>，创建一个新的叫做 <code>名字随意</code> 的 客户端密码，并将 <code>截止日期</code> 设置为 <code>3年</code>。点击 <code>添加</code> 并复制 <code>改客户端密码</code> 里的 <code>值</code> 并保存下来 （仅有此一次机会，以后不再显示）：dPRB9Wl-2.P38IgqlAJ2BLT<del>HvWT-</del>iQ3T</strong></p><p><strong>打开 <code>API权限</code> 面板，选择 <code>Microsoft Graph</code>，选择 <code>受委托的权限</code>，并搜索 <code>offline_access, Files.Read, Files.Read.All</code> 这三个权限，选择这三个权限，并点击 <code>更新权限</code></strong></p><p><strong>你应该成功开启这三个权限，效果如下图：</strong></p><h2 id="获取-refresh-token"><a href="#获取-refresh-token" class="headerlink" title="获取 refresh_token"></a><strong>获取 <code>refresh_token</code></strong></h2><p>在本机（需要 Node.js 和 npm 环境，安装方法请自行百度）上面用cmd执行如下命令,等待加载：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx @beetcb/ms-graph-cli</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npx: installed 62 in 18.367s</span><br><span class="line">? Please select your OneDrive or SharePoint account type: » - Use arrow-keys. Return to submit.</span><br><span class="line">&gt;   Global</span><br><span class="line">    Operated by 21Vianet in China</span><br></pre></td></tr></table></figure><p>通过上下方向键更改选项为Global，选中回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">√ Please select your OneDrive or SharePoint account type: » Global</span><br><span class="line">? Please select your deploy type (OneDrive or SharePoint): » - Use arrow-keys. Return to submit.</span><br><span class="line">&gt;   OneDrive</span><br><span class="line">    SharePoint</span><br></pre></td></tr></table></figure><p>同上，选中OneDrive回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">√ Please select your OneDrive or SharePoint account type: » Global</span><br><span class="line">√ Please select your deploy type (OneDrive or SharePoint): » OneDrive</span><br><span class="line">? Enter your client_id: » 948fd46a-c70f-45c4-b397-2627e30f9868</span><br></pre></td></tr></table></figure><p>输入你刚才获取的client_id，回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">√ Please select your OneDrive or SharePoint account type: » Global</span><br><span class="line">√ Please select your deploy type (OneDrive or SharePoint): » OneDrive</span><br><span class="line">√ Enter your client_id: ... 948fd46a-c70f-45c4-b397-2627e30f9868</span><br><span class="line">? Enter your client_secret: » **********************************</span><br></pre></td></tr></table></figure><p>输入你刚才获取的client_secret(默认已经采取安全保护所以只显示***)，回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">√ Please select your OneDrive or SharePoint account type: » Global</span><br><span class="line">√ Please select your deploy type (OneDrive or SharePoint): » OneDrive</span><br><span class="line">√ Enter your client_id: ... 948fd46a-c70f-45c4-b397-2627e30f9868</span><br><span class="line">√ Enter your client_secret: ... **********************************</span><br><span class="line">√ Enter your redirect_uri ([Default] http://localhost:3000): » http://localhost:3000</span><br></pre></td></tr></table></figure><p>输入你注册时候填写的web网址<a href="http://localhost:3000，回车">http://localhost:3000，回车</a></p><p>注意，此过程需要关掉杀毒软件，比如火绒安全… </p><p>等待跳转到登录页面，登陆你的微软账号</p><p>根据你自己的情况选择合适的选项，并输入我们上面获取到的一系列 token 令牌配置等，其中 <code>redirect_url</code> 可以直接设置为 <code>http://localhost</code></p><p>dPRB9Wl-2.P38IgqlAJ2BLT<del>HvWT-</del>iQ3T</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>申请office E5开发者订阅，附无限续期+私人网盘教程</title>
      <link href="/2021/08/24/%E7%94%B3%E8%AF%B7office-E5%E5%BC%80%E5%8F%91%E8%80%85%E8%AE%A2%E9%98%85%EF%BC%8C%E9%99%84%E6%97%A0%E9%99%90%E7%BB%AD%E6%9C%9F-%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98%E6%95%99%E7%A8%8B/"/>
      <url>/2021/08/24/%E7%94%B3%E8%AF%B7office-E5%E5%BC%80%E5%8F%91%E8%80%85%E8%AE%A2%E9%98%85%EF%BC%8C%E9%99%84%E6%97%A0%E9%99%90%E7%BB%AD%E6%9C%9F-%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="申请office-E5开发者订阅，附无限续期-私人网盘教程"><a href="#申请office-E5开发者订阅，附无限续期-私人网盘教程" class="headerlink" title="申请office E5开发者订阅，附无限续期 私人网盘教程"></a>申请office E5开发者订阅，附无限续期 私人网盘教程</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><ul><li><p>Office365开发版E5是为开发人员提供的，是微软的官方活动，申请Office 365开发者计划可以获得为期3个月的Office365 E5。</p></li><li><p>E5计划包含了25个用于所有Office 365 应用的许可证。如果嫌正版office365贵的话，这可是你免费获取office的好机会了。</p></li><li><p>有了E5就意味着你可以拥有5T+25T大容量储存空间</p></li></ul><h2 id="申请账号"><a href="#申请账号" class="headerlink" title="申请账号"></a><strong>申请账号</strong></h2><ul><li><p><a href="https://developer.microsoft.com/zh-cn/office/dev-program">点击前往微软365开发者中心✈</a> 点击立即加入，若未登陆会自动跳转到登陆页面，登陆一下即可</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241310659.jpg" alt="登录你的微软账号"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241310658.jpg" alt="点击立即加入，若未登陆会自动跳转到登陆页面，登陆一下即可"></p></li><li><p>登录你的微软账号，注册Office 365 开发人员。下面两个勾选可以只勾选第一个，减少广告，点击下一步继续</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241310653.jpg" alt="注册Office 365 开发人员。下面两个勾选可以只勾选第一个，减少广告，点击下一步继续"></p></li><li><p>勾选需要使用的功能，这里可以随便选一下</p></li><li><p>点击“加入”后，页面中会提示你没有订阅，点击申请一个订阅。</p></li><li><p>选择国家（<strong>关系到OneDrive数据等存储位置</strong>）。填写域、用户名和密码，后面使用<code>用户名@域.onmicrosoft.com</code>进行登陆。如我这里设置的用户名是<code>admin</code>，域是<code>fatsheep</code>，那么后面就可以使用<code>admin@fatsheep.onmicrosoft.com</code>进行登录  “用户名@域.onmicrosoft.com”，就是你的E5管理员账号。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241310655.jpg" alt="设置开发人员订阅"></p></li><li><p>输入完成点击继续，下一步需要填写手机号用于接收验证码，进行安全验证，填完后点设置</p></li><li><p>现在，我们已经申请好了E5订阅了，并一次性申请了25个用户许可证。如果你只是自己用，现在已经可以使用’用户名@域.onmicrosoft.com’和之前设置的密码登录你电脑上的Office了。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241310661.png" alt="这个是我申请几天之后才截的图，默认92天"></p></li></ul><h2 id="分配账号与安装365"><a href="#分配账号与安装365" class="headerlink" title="分配账号与安装365"></a><strong>分配账号与安装365</strong></h2><ul><li><p>之前说过E5订阅有25个用户许可证，我们可以 <a href="https://www.office.com/?auth=2">点击跳转https://www.office.com/?auth=2</a>订阅或者登录分配账号给自己的朋友  <strong>这里一定要加上 ?auth=2 ，否则会进入「个人版」office365的登录界面，无法使用这里的「组织账号」登录</strong></p></li><li><p>点击安装office可以安装office365，默认会安装所有的软件。若有自定义的需求，可以使用office tool plus安装。</p></li><li><p>点击下方的管理可以分配账号，进入新页面点击用户——活跃用户——添加用户即可。</p></li><li><p>点击用户名可以设置用户名的权限，以及OneDrive大小等。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241310662.png" alt="安装Office和管理账号"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241310660.jpg" alt="进入新页面点击用户——活跃用户——添加用户即可，下面是我已经添加好的一个子用户，可以点击他的名字给它修改权限，设置默认Onedrive大小等"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241323829.png" alt="设置用户的权限，OneDrive容量大小等"></p><h2 id="设置5T网盘容量"><a href="#设置5T网盘容量" class="headerlink" title="设置5T网盘容量"></a><strong>设置5T网盘容量</strong></h2><ul><li><p>默认onedrive容量是1T，但是可以通过设置更改为5T。</p></li><li><p>新版本的OneDrive默认容量已经移到了SharePoint管理中心了</p></li></ul><p>修改默认容量大小：</p><ol><li><p>打开微软365管理中心，<a href="https://admin.microsoft.com/">点击前往✈</a> 登陆上你的E5管理员账号</p></li><li><p>在左侧下方的管理中心里找到SharePoint，点击打开，登陆上E5管理员账号</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241343688.png" alt="左侧下方的管理中心里找到SharePoint，点击打开"></p></li><li><p>在左侧找到设置，点击打开，找到储存空间上限</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241340961.png" alt="左侧找到设置，点击打开，找到储存空间上限"></p></li><li><p>点击容量大小（我的显示5120，你的应该是1024，你就点击1024即可），输入5120，保存</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108241340960.png" alt="点击容量大小，输入5120，保存"></p></li></ol><h2 id="无限续期-私人网盘-利用SharePoint开启25T大容量储存空间"><a href="#无限续期-私人网盘-利用SharePoint开启25T大容量储存空间" class="headerlink" title="无限续期+私人网盘+利用SharePoint开启25T大容量储存空间"></a>无限续期+私人网盘+利用SharePoint开启25T大容量储存空间</h2><ul><li><p>无限续期的原理是多次调用API来达到自动续期E5的效果，而OneManger网盘自带这个效果</p></li><li><p>下面给出两种搭建OneManager网盘的方法</p></li><li><p><strong>用Vercel搭建OneManager并挂载OneDrive和AliDrive</strong> <a href="https://blog.fatsheep.cn/2021/08/23/%E7%94%A8Vercel%E6%90%AD%E5%BB%BAOneManager%E5%B9%B6%E6%8C%82%E8%BD%BDOneDrive%E5%92%8CAliDrive/">点击飞往✈</a></p></li><li><p><strong>用FC 阿里云函数计算搭建OneManager并挂载OneDrive和AliDrive</strong> <a href="https://blog.fatsheep.cn/2021/08/23/%E7%94%A8FC-%E9%98%BF%E9%87%8C%E4%BA%91%E5%87%BD%E6%95%B0%E8%AE%A1%E7%AE%97%E6%90%AD%E5%BB%BAOneManager%E5%B9%B6%E6%8C%82%E8%BD%BDOneDrive%E5%92%8CAliDrive/">点击飞往✈</a></p></li><li><p>利用SharePoint开启25T大容量储存空间已经包含在这两篇文章里啦</p></li></ul><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢我的两位好哥哥</p><p><strong>亦之竹哥哥</strong></p><p><strong>暂时不知名字的哥哥</strong></p>]]></content>
      
      
      <categories>
          
          <category> 网盘那些事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> OneDrive </tag>
            
            <tag> OneManager </tag>
            
            <tag> office E5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows平台下使用 Rclone 挂载 备份OneDrive</title>
      <link href="/2021/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E4%BD%BF%E7%94%A8-Rclone-%E6%8C%82%E8%BD%BD-%E5%A4%87%E4%BB%BDOneDrive/"/>
      <url>/2021/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E4%BD%BF%E7%94%A8-Rclone-%E6%8C%82%E8%BD%BD-%E5%A4%87%E4%BB%BDOneDrive/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows平台下使用-Rclone-挂载-备份OneDrive"><a href="#Windows平台下使用-Rclone-挂载-备份OneDrive" class="headerlink" title="Windows平台下使用 Rclone 挂载 备份OneDrive"></a>Windows平台下使用 Rclone 挂载 备份OneDrive</h2><p>Rclone (rsync for cloud storage) 是一个命令行程序,用于同步文件和目录，支持常见的 Amazon Drive 、Google Drive 、OneDrive 、Dropbox 等云存储。本文将演示在 Windows 平台下将 OneDrive 挂载为本地硬盘，并使用跨平台的 Rclone GUI 连接到云盘。 <strong>我用rclone的目的主要是用于多个OneDrive/SharkPoint之间的备份工作</strong></p><h2 id="1、rclone下载地址"><a href="#1、rclone下载地址" class="headerlink" title="1、rclone下载地址"></a><strong>1、rclone下载地址</strong></h2><p>首先下载适用于 Windows 的 rclone 👇</p><p>官网下载：<a href="https://rclone.org/downloads/">点击前往官方下载✈</a><br>GitHub下载：<a href="https://github.com/rclone/rclone/releases">点击前往GitHub官方下载</a></p><p>在<a href="https://rclone.org/downloads/">rclone官网</a>中，Windows 平台下选择下载 AMD64 - 64 Bit</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240021129.png" alt="选择下载 AMD64 - 64 Bit"></p><p>或者在<a href="https://github.com/rclone/rclone/releases">github</a>下载。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240021130.png" alt="选择windows-amd64.zip"></p><p><strong>下载后解压到一个英文路径中。 如下图，我的路径</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240021131.png" alt="我的解压路径，英文路径"></p><p>另外在Windows平台使用rclone还需要另一个依赖工具<code>winfsp</code>，下载地址：<a href="https://gitee.com/mirrors/winfsp">Gitee 极速下载/winfsp</a>，下载后一路安装即可。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240021127.jpg" alt="默认选项安装即可"></p><h2 id="2、为rclone配置环境变量"><a href="#2、为rclone配置环境变量" class="headerlink" title="2、为rclone配置环境变量"></a><strong>2、为rclone配置环境变量</strong></h2><ol><li><p>在电脑桌面右键点击“此电脑”的“属性”选项</p></li><li><p>选择“高级系统设置”选项,找到环境变量</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240026181.png" alt="找到环境变量，打开"></p></li><li><p>在系统变量中找到path，添加刚才解压后的路径</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240021124.png" alt="添加刚才解压后的路径"></p></li></ol><h2 id="3、检查rclone的安装环境是否配置成功"><a href="#3、检查rclone的安装环境是否配置成功" class="headerlink" title="3、检查rclone的安装环境是否配置成功"></a><strong>3、检查rclone的安装环境是否配置成功</strong></h2><p>打开 <code>cmd</code> ，输入<code>rclone --version</code>，如果出现下面的输出(随着版本升级可能会有略微差异)则安装成功，否则检查上面步骤的环境变量是否配置正确。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240021125.jpg" alt="检查rclone的安装环境是否配置成功"></p><h2 id="4、开始配置rclone"><a href="#4、开始配置rclone" class="headerlink" title="4、开始配置rclone"></a>4、<strong>开始配置rclone</strong></h2><p>在cmd中依次输入以下命令行，请根据我下的步骤进操作。（随着版本升级可能会略微差异~）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="number">83423</span>&gt;rclone config    // 第一步在终端输入 rclone config </span><br><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 <span class="built_in">Type</span></span><br><span class="line">====                 ====</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line"><span class="built_in">r</span>) Rename remote</span><br><span class="line">c) <span class="built_in">Copy</span> remote</span><br><span class="line">s) <span class="built_in">Set</span> configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/<span class="built_in">r</span>/c/s/q&gt; n  //第二步输入n创建新的配置</span><br><span class="line"></span><br><span class="line">name&gt; OneDrive_E5              //第三步 输入一个英文名称 ，中间也不要有空格</span><br><span class="line"><span class="built_in">Type</span> of storage to configure.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;&quot;</span>).</span><br><span class="line">Choose a number from below, or <span class="built_in">type</span> <span class="keyword">in</span> your own value</span><br><span class="line"> <span class="number">1</span> / <span class="number">1</span>Fichier</span><br><span class="line">   \ <span class="string">&quot;fichier&quot;</span></span><br><span class="line"> <span class="number">2</span> / Alias <span class="keyword">for</span> an existing remote</span><br><span class="line">   \ <span class="string">&quot;alias&quot;</span></span><br><span class="line"> <span class="number">3</span> / Amazon Drive</span><br><span class="line">   \ <span class="string">&quot;amazon cloud drive&quot;</span></span><br><span class="line"> <span class="number">4</span> / Amazon S3 Compliant Storage Providers including AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, SeaweedFS, and Tencent COS</span><br><span class="line">   \ <span class="string">&quot;s3&quot;</span></span><br><span class="line"> <span class="number">5</span> / Backblaze B2</span><br><span class="line">   \ <span class="string">&quot;b2&quot;</span></span><br><span class="line"> <span class="number">6</span> / Box</span><br><span class="line">   \ <span class="string">&quot;box&quot;</span></span><br><span class="line"> <span class="number">7</span> / Cache a remote</span><br><span class="line">   \ <span class="string">&quot;cache&quot;</span></span><br><span class="line"> <span class="number">8</span> / Citrix Sharefile</span><br><span class="line">   \ <span class="string">&quot;sharefile&quot;</span></span><br><span class="line"> <span class="number">9</span> / Compress a remote</span><br><span class="line">   \ <span class="string">&quot;compress&quot;</span></span><br><span class="line"><span class="number">10</span> / Dropbox</span><br><span class="line">   \ <span class="string">&quot;dropbox&quot;</span></span><br><span class="line"><span class="number">11</span> / Encrypt/Decrypt a remote</span><br><span class="line">   \ <span class="string">&quot;crypt&quot;</span></span><br><span class="line"><span class="number">12</span> / Enterprise File Fabric</span><br><span class="line">   \ <span class="string">&quot;filefabric&quot;</span></span><br><span class="line"><span class="number">13</span> / FTP Connection</span><br><span class="line">   \ <span class="string">&quot;ftp&quot;</span></span><br><span class="line"><span class="number">14</span> / Google Cloud Storage (this is not Google Drive)</span><br><span class="line">   \ <span class="string">&quot;google cloud storage&quot;</span></span><br><span class="line"><span class="number">15</span> / Google Drive</span><br><span class="line">   \ <span class="string">&quot;drive&quot;</span></span><br><span class="line"><span class="number">16</span> / Google Photos</span><br><span class="line">   \ <span class="string">&quot;google photos&quot;</span></span><br><span class="line"><span class="number">17</span> / Hadoop distributed file system</span><br><span class="line">   \ <span class="string">&quot;hdfs&quot;</span></span><br><span class="line"><span class="number">18</span> / Hubic</span><br><span class="line">   \ <span class="string">&quot;hubic&quot;</span></span><br><span class="line"><span class="number">19</span> / <span class="keyword">In</span> memory object storage system.</span><br><span class="line">   \ <span class="string">&quot;memory&quot;</span></span><br><span class="line"><span class="number">20</span> / Jottacloud</span><br><span class="line">   \ <span class="string">&quot;jottacloud&quot;</span></span><br><span class="line"><span class="number">21</span> / Koofr</span><br><span class="line">   \ <span class="string">&quot;koofr&quot;</span></span><br><span class="line"><span class="number">22</span> / Local Disk</span><br><span class="line">   \ <span class="string">&quot;local&quot;</span></span><br><span class="line"><span class="number">23</span> / Mail.ru Cloud</span><br><span class="line">   \ <span class="string">&quot;mailru&quot;</span></span><br><span class="line"><span class="number">24</span> / Mega</span><br><span class="line">   \ <span class="string">&quot;mega&quot;</span></span><br><span class="line"><span class="number">25</span> / Microsoft Azure Blob Storage</span><br><span class="line">   \ <span class="string">&quot;azureblob&quot;</span></span><br><span class="line"><span class="number">26</span> / Microsoft OneDrive</span><br><span class="line">   \ <span class="string">&quot;onedrive&quot;</span></span><br><span class="line"><span class="number">27</span> / OpenDrive</span><br><span class="line">   \ <span class="string">&quot;opendrive&quot;</span></span><br><span class="line"><span class="number">28</span> / OpenStack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ <span class="string">&quot;swift&quot;</span></span><br><span class="line"><span class="number">29</span> / Pcloud</span><br><span class="line">   \ <span class="string">&quot;pcloud&quot;</span></span><br><span class="line"><span class="number">30</span> / Put.io</span><br><span class="line">   \ <span class="string">&quot;putio&quot;</span></span><br><span class="line"><span class="number">31</span> / QingCloud Object Storage</span><br><span class="line">   \ <span class="string">&quot;qingstor&quot;</span></span><br><span class="line"><span class="number">32</span> / SSH/SFTP Connection</span><br><span class="line">   \ <span class="string">&quot;sftp&quot;</span></span><br><span class="line"><span class="number">33</span> / Sugarsync</span><br><span class="line">   \ <span class="string">&quot;sugarsync&quot;</span></span><br><span class="line"><span class="number">34</span> / Tardigrade Decentralized Cloud Storage</span><br><span class="line">   \ <span class="string">&quot;tardigrade&quot;</span></span><br><span class="line"><span class="number">35</span> / Transparently chunk/split large files</span><br><span class="line">   \ <span class="string">&quot;chunker&quot;</span></span><br><span class="line"><span class="number">36</span> / Union merges the contents of several upstream fs</span><br><span class="line">   \ <span class="string">&quot;union&quot;</span></span><br><span class="line"><span class="number">37</span> / Uptobox</span><br><span class="line">   \ <span class="string">&quot;uptobox&quot;</span></span><br><span class="line"><span class="number">38</span> / Webdav</span><br><span class="line">   \ <span class="string">&quot;webdav&quot;</span></span><br><span class="line"><span class="number">39</span> / Yandex Disk</span><br><span class="line">   \ <span class="string">&quot;yandex&quot;</span></span><br><span class="line"><span class="number">40</span> / Zoho</span><br><span class="line">   \ <span class="string">&quot;zoho&quot;</span></span><br><span class="line"><span class="number">41</span> / http Connection</span><br><span class="line">   \ <span class="string">&quot;http&quot;</span></span><br><span class="line"><span class="number">42</span> / premiumize.me</span><br><span class="line">   \ <span class="string">&quot;premiumizeme&quot;</span></span><br><span class="line"><span class="number">43</span> / seafile</span><br><span class="line">   \ <span class="string">&quot;seafile&quot;</span></span><br><span class="line">Storage&gt; <span class="number">26</span>             //第四步 输入要配置的网盘类型 因为我们要配置Microsoft OneDrive 因此输入<span class="number">26</span>（随着版本的升级，你的不一定是<span class="number">26</span>）</span><br><span class="line"></span><br><span class="line">OAuth Client Id</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;&quot;</span>).</span><br><span class="line">client_id&gt;//第五步 直接回车</span><br><span class="line"></span><br><span class="line">OAuth Client Secret</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;&quot;</span>).</span><br><span class="line">client_secret&gt;          //第六步 直接回车    </span><br><span class="line"></span><br><span class="line">Choose national cloud region <span class="keyword">for</span> OneDrive.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;global&quot;</span>).</span><br><span class="line">Choose a number from below, or <span class="built_in">type</span> <span class="keyword">in</span> your own value</span><br><span class="line"> <span class="number">1</span> / Microsoft Cloud Global</span><br><span class="line">   \ <span class="string">&quot;global&quot;</span></span><br><span class="line"> <span class="number">2</span> / Microsoft Cloud <span class="keyword">for</span> US Government</span><br><span class="line">   \ <span class="string">&quot;us&quot;</span></span><br><span class="line"> <span class="number">3</span> / Microsoft Cloud Germany</span><br><span class="line">   \ <span class="string">&quot;de&quot;</span></span><br><span class="line"> <span class="number">4</span> / Azure and Office <span class="number">365</span> operated by <span class="number">21</span>Vianet <span class="keyword">in</span> China</span><br><span class="line">   \ <span class="string">&quot;cn&quot;</span></span><br><span class="line">region&gt; <span class="number">1</span>              //第七步  输入<span class="number">1</span></span><br><span class="line"></span><br><span class="line">Edit advanced config?</span><br><span class="line">y) Yes</span><br><span class="line">n) No (default)</span><br><span class="line">y/n&gt; n //第八步 输入n 不进行高级配置</span><br><span class="line"></span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y <span class="keyword">if</span> not sure</span><br><span class="line"> * Say N <span class="keyword">if</span> you are working on a remote or headless machine</span><br><span class="line"></span><br><span class="line">y) Yes (default)</span><br><span class="line">n) No</span><br><span class="line">y/n&gt; y//第九步 输入y 使用自动配置授权</span><br><span class="line"></span><br><span class="line">//输入y后会打开默认浏览器 登录Microsoft账号后 选择 是 即可</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> your browser doesn<span class="string">&#x27;t open automatically go to the following link: http://127.0.0.1:53682/auth?state=sUuYaGWtxruA81JiCokJGg</span></span><br><span class="line"><span class="string">Log in and authorize rclone for access</span></span><br><span class="line"><span class="string">Waiting for code...</span></span><br><span class="line"><span class="string">Got code</span></span><br><span class="line"><span class="string">Choose a number from below, or type in an existing value</span></span><br><span class="line"><span class="string"> 1 / OneDrive Personal or Business</span></span><br><span class="line"><span class="string"> \ &quot;onedrive&quot;</span></span><br><span class="line"><span class="string"> 2 / Root Sharepoint site</span></span><br><span class="line"><span class="string"> \ &quot;sharepoint&quot;</span></span><br><span class="line"><span class="string"> 3 / Type in driveID</span></span><br><span class="line"><span class="string"> \ &quot;driveid&quot;</span></span><br><span class="line"><span class="string"> 4 / Type in SiteID</span></span><br><span class="line"><span class="string"> \ &quot;siteid&quot;</span></span><br><span class="line"><span class="string"> 5 / Search a Sharepoint site</span></span><br><span class="line"><span class="string"> \ &quot;search&quot;</span></span><br><span class="line"><span class="string">Your choice&gt;1                            //第十步 输入1 因为现在我配置的是 OneDrive Personal or Business 类型的网盘</span></span><br><span class="line"><span class="string">​</span></span><br><span class="line"><span class="string">Found 1 drives, please select the one you want to use:</span></span><br><span class="line"><span class="string">0: OneDrive (business) id=b!qDQvcsZUTU-8eoYyKmtyyP1Jc0D8urZLlkATnfH1nWdJ1kkbrLsvQZLzVUTpeTrc</span></span><br><span class="line"><span class="string">Chose drive to use:&gt; 0              //第十一步 输入0</span></span><br><span class="line"><span class="string">Found drive &#x27;</span>root<span class="string">&#x27; of type &#x27;</span>business<span class="string">&#x27;, URL: https://pmjs-my.sharepoint.com/personal/wld_365_w/Documents</span></span><br><span class="line"><span class="string">Is that okay?</span></span><br><span class="line"><span class="string">y) Yes (default)</span></span><br><span class="line"><span class="string">n) No</span></span><br><span class="line"><span class="string">y/n&gt; y                               //第十二步 输入y</span></span><br><span class="line"><span class="string">--------------------</span></span><br><span class="line"><span class="string">[OneDrive_Edu]</span></span><br><span class="line"><span class="string">type = onedrive</span></span><br><span class="line"><span class="string">token = &#123;&quot;access_token&quot;:&quot;eyJ0eXAiOiV1QiLCJub25jZSI6ImNRYjl5TDNZWE8yczdQd2N2WTlJRkV1ZXp0QVpZZV83QWpPaHZORTU0OTgiLCJhbGciOiJSUzI1NiIsIng1dCI6IkhsQzBSMTJza3hOWjFXUXdtak9GXzZ0X3RERSIsImtpZCI6IkhsQzBSMTJza3hOWjFXUXdtak9GXzZ0X3RERSJ9yJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC84N2VjYmIxYi0wZTdlLTRlMDctOWFiMC00NWIwOTM1OTFjN2EvIiwiaWF0IjoxNTgxMzAxNLCJuYmYiOjE1ODEzMDE2MzAsImV4cCI6MTU4MTMwNTUzMCwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFTUUyLzhPQUFBQWc2eURUazJNKzZ5YjVLNEJSN2VUR0lHT3EvSXFPT0dSZzlPWitrREoyaTg9IiwiYW1yIjpbInB3ZCJdLCJhcHBfZGlzcGxheW5hbWUiOiJyY2xvbmUiLCJhcHBpZCI6ImIxNTY2NWQ5LWVkYTYtNDA5Mi04NTM5LTBlZWMzNzZhZmQ1OSIsImFwcGlkYWNyIjoiMSIsImZhbWlseV9uYW1lIjoiV2FuZyIsImdpdmVuX25hbWUiOiJYaWFud2iwiaXBhZGRyIjoiMzkuMTI4LjIwMC4iwibmFtZSI6IldhbmdYaWFud2VuIiwib2lkIjoiZWE4ZjNjZDctN2IxYS00YmQ0LWFiNzItYzM4NDg4NTE5NDdhdGYiOiIzIiwicHVpZCI6IjEwMDMzRkZGQUVGNEE2RTUiLCJzY3A5YWIwLTQ1YjA5MzU5MWM3YSIsInVuaXF1ZV9uYW1lIjoid29ybGRAbXkzNjUudHciLCJ1cG4iOiJ3b3JsZEBteTM2NS50dyIsInV0aSI6Il85MEZWRXBZcTBTYzckFuVDluQUEiLCJ2ZXIiOiIxLjAiLCJ4bXNfc3QiOnsic3ViIjoidXlWWU96UGF5RVBVWXlSbFlEVEl6QjhUZVBkZnNTMkVHcHczNGNDM2JRTSJ9LCJ4bXNfdGNkdCI6MTUzNDQyOTU0NH0.Ki9vor6NtxXJWsdumYddz8agrzVYXRCXVg0paW7XqDTq8i_vht8GK79F0F7xp3BSKzK5Xgxb0GzwPV9dPTb4IiXM0d17P5pQB3wHLMUbVFvRbLXNwSEtSJGKLttvxL8XfT8e51k4kyyH07CtozVBsF6fmMnhftp9ZbcEVrgnFKdwTE5In83G05V7L8wDCMiKrN0KX9iTKzxT9em5QtVhGZRZJDnNS2pJTQNhiWVatjDB4VHojG2C6J1LtU6YOOOAM2uBil2ovLFhQPy0l299ZJTJeyQCLQGJki9kZgAVI42iGP4mzvVPQAJk5Oad_4nPsT87QVH4NBA&quot;,&quot;token_type&quot;:&quot;Bearer&quot;,&quot;refresh_token&quot;:&quot;OAQABAAAAAABeAFzDwllzTYGDLh_qYbH8falkpBpCm5PZqagAkUNWFik3Mz2ZfDPeowwW9q5mlFoHSqyYNG8FayvZxxZEUGQWUaR520MuJ5i_mj9CNs0NahNOJAtvZOBV459VLMKaNiyK9GJIGvdDe4RkaV472hbq_po8K47yC053BLRIbRji9WfsCkSMj8UP792sNJ0Tm9ptfPmy1aP_TePX8dOWaC9qZN2jDIXJDjWjCvfDesNDWXAm9bpBp1oZmObLR85EKB9Vgsz7ccZIbKEa16Aiqb67xsQICG8AzjMli76nJVFx1SB3rRc2rxSDcnVTx_Oja_6KuaUxQjhgi1XaH1Kk_c82iniwdj7EdHCbokk8eewYFyn4tBTL0xW8rwmoPDvvUvMVA7Z8Ph0AB66Ih5evroSEHsv072AyDWSwHfrEMueTeEgP5jA1aBSOXE2DDw3PySehFfbYpsh0AV3qPVP9lAHaGizEbFt9rEKl1R1bcMrEhxF9GjnvB5PChRK_abttEV2YWKWrTaEFJBTP40f96kCXZGMaE4RaUoMI7hKW4cLQrHuV5YCZQ_BQRj7r5PoUyelGPdvnW42lB8MvekksdrJAVnlUTTgVKlbpn9AUuOD2LUZ5A8IheWaLkhLXfUqjPg0UxjTLIAA&quot;,&quot;expiry&quot;:&quot;2020-02-10T11:32:10.852646+08:00&quot;&#125;</span></span><br><span class="line"><span class="string">drive_id = b!qDvcsZUTU8eoYyKmtyyP1Jc0D8urZLlkTnH1nWdJ1kbrLsvQZLzVUTpeTrc</span></span><br><span class="line"><span class="string">drive_type = business</span></span><br><span class="line"><span class="string">--------------------</span></span><br><span class="line"><span class="string">y) Yes this is OK (default)</span></span><br><span class="line"><span class="string">e) Edit this remote</span></span><br><span class="line"><span class="string">d) Delete this remote</span></span><br><span class="line"><span class="string">y/e/d&gt;y                                      //第十三步 输入y</span></span><br></pre></td></tr></table></figure><p>此时，就会出现刚刚配置好的网盘名称了</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 <span class="built_in">Type</span></span><br><span class="line">====                 ====</span><br><span class="line">OneDrive_E5          onedrive</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line"><span class="built_in">r</span>) Rename remote</span><br><span class="line">c) <span class="built_in">Copy</span> remote</span><br><span class="line">s) <span class="built_in">Set</span> configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/<span class="built_in">r</span>/c/s/q&gt; q                //最后输入q退出配置即可</span><br></pre></td></tr></table></figure><h2 id="5、常见的rclone命令"><a href="#5、常见的rclone命令" class="headerlink" title="5、常见的rclone命令"></a>5、常见的rclone命令</h2><p><code>rclone</code> 命令的语法格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Syntax: [options] subcommand &lt;parameters&gt; &lt;parameters...&gt;</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rclone config - 以控制会话的形式添加rclone的配置，配置保存在.rclone.conf文件中。</span><br><span class="line">rclone <span class="built_in">copy</span> - 将文件从源复制到目的地址，跳过已复制完成的。</span><br><span class="line">rclone sync - 将源数据同步到目的地址，只更新目的地址的数据。</span><br><span class="line">rclone <span class="built_in">move</span> - 将源数据移动到目的地址。</span><br><span class="line">rclone delete - 删除指定路径下的文件内容。</span><br><span class="line">rclone purge - 清空指定路径下所有文件数据。</span><br><span class="line">rclone mkdir - 创建一个新目录。</span><br><span class="line">rclone <span class="built_in">rmdir</span> - 删除空目录。</span><br><span class="line">rclone check - 检查源和目的地址数据是否匹配。</span><br><span class="line">rclone <span class="built_in">ls</span> - 列出指定路径下所有的文件以及文件大小和路径。</span><br><span class="line">rclone lsd - 列出指定路径下所有的目录/容器/桶。</span><br><span class="line">rclone lsl - 列出指定路径下所有文件以及修改时间、文件大小和路径。</span><br><span class="line">rclone md5sum - 为指定路径下的所有文件产生一个md5sum文件。</span><br><span class="line">rclone sha1sum - 为指定路径下的所有文件产生一个sha1sum文件。</span><br><span class="line">rclone size - 获取指定路径下，文件内容的总大小。.</span><br><span class="line">rclone version - 查看当前版本。</span><br><span class="line">rclone cleanup - 清空remote。</span><br><span class="line">rclone dedupe - 交互式查找重复文件，进行删除/重命名操作。</span><br></pre></td></tr></table></figure><h3 id="rclone-config"><a href="#rclone-config" class="headerlink" title="rclone config"></a>rclone config</h3><p>开启一个交互式的配置会话。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone config</span><br></pre></td></tr></table></figure><h3 id="rclone-copy"><a href="#rclone-copy" class="headerlink" title="rclone copy"></a>rclone copy</h3><p>将文件从源复制到目的地址，跳过已复制完成的。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone copy source:sourcepath dest:destpsth</span><br></pre></td></tr></table></figure><p>说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">`rclone copy` 复制总是指定路径下的数据；而不是当前目录。</span><br><span class="line">`–no-traverse` 标志用于控制是否列出目的地址目录。</span><br></pre></td></tr></table></figure><h3 id="rclone-sync"><a href="#rclone-sync" class="headerlink" title="rclone sync"></a>rclone sync</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone sync source:path dest:path</span><br></pre></td></tr></table></figure><p>说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同步数据时，可能会删除目的地址的数据；建议先使用–dry-run 标志来检查要复制、删除的数据。同步数据出错时，不会删除任何目的地址的数据。rclone sync 同步的始终是 path 目录下的数据，而不是 path 目录。（空目录将不会被同步）</span><br></pre></td></tr></table></figure><h3 id="rclone-move"><a href="#rclone-move" class="headerlink" title="rclone move"></a>rclone move</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone move source:path dest:path</span><br></pre></td></tr></table></figure><p>说明：同步数据时，可能会删除目的地址的数据；建议先使用–dry-run 标志来检查要复制、删除的数据。</p><h3 id="rclone-purge"><a href="#rclone-purge" class="headerlink" title="rclone purge"></a>rclone purge</h3><p>清空 path 目录和数据。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone purge remote:path</span><br></pre></td></tr></table></figure><p>说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此命令，include/exclude 过滤器失效。删除 path 目录下部分数据，请使用 rclone delete 命令</span><br></pre></td></tr></table></figure><h3 id="rclone-mkdir"><a href="#rclone-mkdir" class="headerlink" title="rclone mkdir"></a>rclone mkdir</h3><p>创建 path 目录。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone mkdir remote:path</span><br></pre></td></tr></table></figure><h3 id="rclone-rmdir"><a href="#rclone-rmdir" class="headerlink" title="rclone rmdir"></a>rclone rmdir</h3><p>删除一个空目录。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone rmdir remote:path</span><br></pre></td></tr></table></figure><p>说明：不能删除非空的目录，删除非空目录请使用 rclone purge。</p><h3 id="rclone-check"><a href="#rclone-check" class="headerlink" title="rclone check"></a>rclone check</h3><p>检查源和目标地址文件是否匹配。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone check source:path dest:path</span><br></pre></td></tr></table></figure><p>说明：–size-only 标志用于指定，只比较大小，不比较 MD5SUMs。</p><h3 id="rclone-ls"><a href="#rclone-ls" class="headerlink" title="rclone ls"></a>rclone ls</h3><p>列出指定 path 下，所有的文件以及文件大小和路径。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone ls remote:path</span><br></pre></td></tr></table></figure><h3 id="rclone-lsd"><a href="#rclone-lsd" class="headerlink" title="rclone lsd"></a>rclone lsd</h3><p>列出指定 path 下，所有目录、容器、桶。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone lsd remote:path</span><br></pre></td></tr></table></figure><h3 id="rclone-delete"><a href="#rclone-delete" class="headerlink" title="rclone delete"></a>rclone delete</h3><p>删除指定目录的内容。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone delete remote:path</span><br></pre></td></tr></table></figure><p>说明：不同于 rclone purge，rclone delete 可使用 include/exclude 过滤器选择删除文件内容。<br>一些例子：</p><p>删除文件大小大于 100M 的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 先检查哪些文件将被删除    rclone --min-size 100M lsl remote:path                  # 使用rclone lsl 列出大于100M的文件    rclone --dry-run --min-size 100M delete remote:path    # 使用--dry-run 检查将要被删除的文件    # 使用 rclone delete 进行文件删除    rclone --min-size 100M delete remote:path</span><br></pre></td></tr></table></figure><h3 id="rclone-size"><a href="#rclone-size" class="headerlink" title="rclone size"></a>rclone size</h3><p>获取指定 path 下所有数据文件的总大小。命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone size remote:path</span><br></pre></td></tr></table></figure><p>更多 rclone 命令，详见 <a href="http://rclone.org/commands">官方文案，点击飞往✈</a> </p><h2 id="6、多个盘之间备份"><a href="#6、多个盘之间备份" class="headerlink" title="6、多个盘之间备份"></a>6、多个盘之间备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone copy -P od1:/xxx od2:/xxx --transfers=8</span><br></pre></td></tr></table></figure><p><strong>其中 od1是配置的rclone中网盘名称1，od2是配置的rclone中网盘名称2</strong></p><p><strong>意思是，拷贝od1的xxx文件到od2的xxx文件</strong></p><h2 id="7、挂载OneDrive为本地硬盘"><a href="#7、挂载OneDrive为本地硬盘" class="headerlink" title="7、挂载OneDrive为本地硬盘"></a><strong>7、挂载OneDrive为本地硬盘</strong></h2><p>此时请使用 <code>git bash</code> 的终端执行以下命令，因为我使用<code>cmd</code> 和 <code>powershell</code> 都出现关闭终端后挂载程序退出、本地挂载的OneDrive退出的现象。 如果你的windows没有安装git ， 请[自行安装](<a href="https://www.baidu.com/s?wd=windows">https://www.baidu.com/s?wd=windows</a> 安装git&amp;ie=utf-8)。若你使用 <code>cmd</code> 的话 ，<code>cmd</code> 是不能退出的，要保持 <code>cmd</code> 不退出本地硬盘才一直挂载着。</p><p>在 <code>git bash</code> 中输入以下挂载命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone mount OneDrive_E5:/  Q: --cache-dir E:\OneDrive --vfs-cache-mode writes &amp;</span><br></pre></td></tr></table></figure><p>其中：</p><p><code>OneDrive_E5</code> 替换为你自己前面设置的名称 。</p><p><code>Q:</code> 替换为你想要挂载后硬盘的盘符名称即可，记得不要和本地的C盘、D盘等重复。</p><p><code>E:\OneDrive</code> 为本地缓存目录，可自行设置 。</p><p>出现：<code>The service rclone has been started</code> 则说明挂载成功。</p><p>然后输入 <code>exit</code> 退出终端即可。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240021126.jpg" alt="输入exit退出终端即可"></p><p>然后就可以看见本地多了一个盘，往里面复制文件就是上传，从里面复制文件到其它盘就是下载。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240021128.png" alt="挂载的OneDrive_E5"></p><h2 id="8、设置开机自启动挂载"><a href="#8、设置开机自启动挂载" class="headerlink" title="8、设置开机自启动挂载"></a><strong>8、设置开机自启动挂载</strong></h2><p>创建一个名称为 <code>startup_rclone.bat</code> 的文件，里面填写上面的挂载命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone mount OneDrive_E5:/  Q: --cache-dir E:\OneDrive --vfs-cache-mode writes &amp;</span><br></pre></td></tr></table></figure><p>将这个文件放在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure><p>重启计算机后就会自动挂设置的云盘了，当然这样做由于调用的是 <code>cmd</code> 因此还是不能关闭运行的 <code>cmd</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 网盘那些事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> OneDrive </tag>
            
            <tag> rclone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用FC 阿里云函数计算搭建OneManager并挂载OneDrive和AliDrive</title>
      <link href="/2021/08/23/%E7%94%A8FC-%E9%98%BF%E9%87%8C%E4%BA%91%E5%87%BD%E6%95%B0%E8%AE%A1%E7%AE%97%E6%90%AD%E5%BB%BAOneManager%E5%B9%B6%E6%8C%82%E8%BD%BDOneDrive%E5%92%8CAliDrive/"/>
      <url>/2021/08/23/%E7%94%A8FC-%E9%98%BF%E9%87%8C%E4%BA%91%E5%87%BD%E6%95%B0%E8%AE%A1%E7%AE%97%E6%90%AD%E5%BB%BAOneManager%E5%B9%B6%E6%8C%82%E8%BD%BDOneDrive%E5%92%8CAliDrive/</url>
      
        <content type="html"><![CDATA[<h1 id="用FC-阿里云函数计算搭建OneManager并挂载OneDrive和AliDrive"><a href="#用FC-阿里云函数计算搭建OneManager并挂载OneDrive和AliDrive" class="headerlink" title="用FC 阿里云函数计算搭建OneManager并挂载OneDrive和AliDrive"></a>用FC 阿里云函数计算搭建OneManager并挂载OneDrive和AliDrive</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="关于OneManager"><a href="#关于OneManager" class="headerlink" title="关于OneManager"></a>关于OneManager</h3><blockquote><p>OneManager是GitHub上的一位大神逸笙开发出来的项目，它可以挂载多个网盘，比如Onedrive，Alidrive，Googledrive，SharePoint等等… 挂载之后能够在线预览图片，ppt，在线编辑文件，在线倍速播放视频，提供直链供下载使用。甚至，你可以结合苹果cms搭建一个自己的影视网站。我觉得最主要的还是它经常调用API能够帮助Office365 E5自动续期</p></blockquote><p><a href="https://drive.fatsheep.cn/">演示网站Fatsheep’s Drive</a></p><h3 id="先上成品图，来点动力"><a href="#先上成品图，来点动力" class="headerlink" title="先上成品图，来点动力"></a>先上成品图，来点动力</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232058472.jpg" alt="成品图"></p><h3 id="Why-do-deploy-to-FC阿里云函数计算？"><a href="#Why-do-deploy-to-FC阿里云函数计算？" class="headerlink" title="Why do deploy to FC阿里云函数计算？"></a>Why do deploy to FC阿里云函数计算？</h3><blockquote><p>前面我们提到了用Vercel搭建OneManager并挂载OneDrive和AliDrive，但事实是vercel容易被墙，导致经常进不去，而且加载速度很慢，每次点击大概5秒左右才有反应~ 修改平台变量等待时间更长… so就有了今天要提的用FC 阿里云函数计算搭建OneManager并挂载OneDrive和AliDrive</p></blockquote><h3 id="FC阿里云函数计算的优点："><a href="#FC阿里云函数计算的优点：" class="headerlink" title="FC阿里云函数计算的优点："></a>FC阿里云函数计算的优点：</h3><ul><li>反应快，加载迅速</li><li>方便随时修改代码</li><li>同样支持自定义域名和ssl</li><li>提供免费额度</li><li>收费很低，月供几乎为0</li></ul><h2 id="How-to-deploy？"><a href="#How-to-deploy？" class="headerlink" title="How to deploy？"></a>How to deploy？</h2><ol><li><p>打开阿里云函数计算网站 <a href="https://fc.console.aliyun.com/">点击飞往✈</a></p></li><li><p>找到函数及服务，打开</p></li><li><p>切换地区，换到境外地区，因为国内地区绑定域名需要备案，如果有备案的可以选择国内</p></li><li><p>点击新增服务，只需要填服务名称，其他可以填可以不填，直接提交即可</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240007301.jpg" alt="2.3.4步说明"></p></li><li><p>点击新增函数，选择HTTP函数，配置部署</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240007304.png" alt="新增函数，选择HTTP函数"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108240007303.png" alt="配置部署"></p></li><li><p>新增函数这里的要求：</p><ul><li><p>运行环境选择php7.2，</p></li><li><p>触发器认证方式选择anonymous，请求方式里面，点一下GET，再点一下POST，最终框框里面有这2个</p></li><li><p>上传代码（代码从项目仓库下载 <a href="https://github.com/qkqpttgf/OneManager-php">点击前往下载✈</a>并解压下来），选择文件夹上传</p></li><li><p>所在服务选择刚才新建的服务，函数名称随意，触发器名称随意，默认就好，其他选项也默认</p></li><li><p>点击新建，创建完毕之后去左侧自定义域名界面</p></li></ul></li><li><p>点击创建域名，自定义域名名称填你的域名</p></li><li><p>添加dns解析记录：</p><ul><li>主机记录如果是二级域名的话就填二级域名，如果是顶级域名的话就填www/@</li><li>记录类型选CNAME，线路类型默认即可</li><li>记录值填写1478429185385491.cn-hongkong.fc.aliyuncs.com</li><li>其他默认即可，添加</li></ul></li><li><p>添加完dns记录值之后再次回到阿里云自定义域名界面</p><ul><li>开启cnd加速默认关闭即可，开的话收费</li><li>支持协议这里如果有ssl证书的话就选http，https</li><li>如果没有的话，访问的话会提示不安全，建议去免费申请一个ssl证书</li><li>网上有很多方法，申请下来之后下载证书，一般里面至少包含两个类型的文件</li><li>一个是后缀为key的文件也就是接下来要填的私钥，另一个是后缀为pem的文件，也就是接下来要填的证书部分</li><li>证书类型，如果是阿里云的证书就选云盾</li><li>其他的话选自定义，并且把key文件用记事本打开，全选复制粘贴到私钥里</li><li>把pem文件也用记事本打开复制粘贴到证书里，证书名称无所谓，随意</li><li>路由设置：路径填/*  其他下拉默认即可 ，最后点击确定</li></ul></li><li><p>访问你的域名，开始安装，到此就算部署完毕</p></li></ol><h2 id="How-to-install？"><a href="#How-to-install？" class="headerlink" title="How to install？"></a>How to install？</h2><ol><li><p>进入安装界面后，点击开始安装程序</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045232.png" alt="根据提示信息，点击开始安装程序"></p></li><li><p>选择语言，填写token，设置管理员密码</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045233.png" alt="选择语言，填写token，设置管理员密码，确认安装"></p></li><li><p>确认，等待安装完成。</p></li><li><p>安装完成之后如果没有自动进入首页而是再次出现安装界面的话手动点击<strong>返回首页</strong></p></li></ol><h2 id="修改平台变量"><a href="#修改平台变量" class="headerlink" title="修改平台变量"></a>修改平台变量</h2><ol><li><p>点击左上角的登录，输入管理员密码登录后台管理</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045234.png" alt="点击左上角的登录，输入管理员密码登录后台管理"></p></li><li><p>鼠标放到左上角的管理，点击设置</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045227.png" alt="鼠标放到左上角的管理，点击设置"></p></li><li><p>点击平台变量，接下来看提示信息</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045236.png" alt="平台变量设置的提示信息"></p></li><li><p>根据提示和自己的实际情况进行修改（都有说明，都是字面意思，认真看即可）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045237.png" alt="附上我的设置截图"></p></li><li><p>点击左下角的设置，完成更改。</p></li><li><p>点击返回后台管理界面进行挂载盘</p></li></ol><h2 id="挂载OneDrive-SharePoint和AliDrive"><a href="#挂载OneDrive-SharePoint和AliDrive" class="headerlink" title="挂载OneDrive/SharePoint和AliDrive"></a>挂载OneDrive/SharePoint和AliDrive</h2><h3 id="关于SharePoint"><a href="#关于SharePoint" class="headerlink" title="关于SharePoint"></a>关于SharePoint</h3><ul><li><p>SharePoint你可以简单理解为大容量的OneDrive，它可以通过创建网站来存放文件。</p></li><li><p>个人版貌似没有这个功能，开发者版E5有~  关于Office365 E5开发者订阅的申请，<a href="https://blog.fatsheep.cn/2021/08/24/%E7%94%B3%E8%AF%B7office-E5%E5%BC%80%E5%8F%91%E8%80%85%E8%AE%A2%E9%98%85%EF%BC%8C%E9%99%84%E6%97%A0%E9%99%90%E7%BB%AD%E6%9C%9F-%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98%E6%95%99%E7%A8%8B/">请飞往申请office E5开发者订阅，附无限续期 私人网盘教程</a></p></li></ul><h3 id="打开SharePoint"><a href="#打开SharePoint" class="headerlink" title="打开SharePoint"></a>打开SharePoint</h3><ol><li><p>打开Microsoft 365 管理中心 <a href="https://admin.microsoft.com/">点击前往</a></p></li><li><p>点击左上角的启动器，找到Sharepoint并打开</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232106485.png" alt="点击左上角的启动器"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232106484.png" alt="找到SharePoint并打开"></p></li></ol><h4 id="创建SharePoint网站"><a href="#创建SharePoint网站" class="headerlink" title="创建SharePoint网站"></a>创建SharePoint网站</h4><ol><li><p>登录你的SharePoint，点击左侧小房子，回到SharePoint起始页面</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232058473.png" alt="点击小房子之后找到创建网站"></p></li><li><p>点击创建网站，默认团队网站即可</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045243.png" alt="默认团队网站即可"></p></li><li><p>根据自己喜欢填写网站信息，可随意</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045244.png" alt="根据自己喜欢填写网站信息，可随意，重点是记下来站点地址，挂载SharePoint的时候需要用到"></p></li><li><p><strong>复制站点地址</strong>，拿小本本记下来，挂载SharePoint的时候需要用到，然后点击下一步</p></li><li><p>可添加其他成员，也可以不添加，默认不加即可，然后点完成</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045245.png" alt="可添加其他成员，也可以不添加，默认不加即可，然后点完成"></p></li><li><p>我们的文件就在文档里，可以在这里上传，也可以用OneDrive客户端上传（推荐）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045246.png" alt="我们的文件就在文档里，可以在这里上传，也可以用OneDrive客户端上传（推荐）"></p></li><li><p>添加到OneDrive客户端、文件资源管理器</p><ul><li><p>点击文档，找到同步，点击同步，即可添加。</p></li><li><p>完成之后即可在文件资源管理器找到，如果需要上传文件，只需要拖到这个文件夹即可。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045248.png" alt="OneDrive客户端已显示demo-文档同步"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045249.png" alt="完成之后即可在文件资源管理器找到，如果需要上传文件，只需要拖到这个文件夹即可。"></p></li></ul></li><li><p>到此，你就算拥有了自己的SharePoint，第一天默认1T，第二天会自动升级25T大容量</p></li></ol><h3 id="挂载OneDrive和SharePoint"><a href="#挂载OneDrive和SharePoint" class="headerlink" title="挂载OneDrive和SharePoint"></a>挂载OneDrive和SharePoint</h3><ol><li><p>进入OneManager后台管理界面</p></li><li><p>选择Onedrive，点击添加盘</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045239.png" alt="选择Onedrive，点击添加盘"></p></li><li><p>根据自己喜欢设置标签和名称，挂载上之后也可以修改</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045240.png" alt="根据自己喜欢设置标签和名称，挂载上之后也可以修改"></p></li><li><p>选择对应的版本，如果不懂，见前面我讲的<a href="https://blog.fatsheep.cn/2021/08/21/%E3%80%8A%E7%BD%91%E7%9B%98%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8B%E2%80%94%E2%80%94%E7%BD%91%E7%9B%98%E7%A5%9E%E5%99%A8OneDrive%E4%BB%8B%E7%BB%8D/">《网盘那些事》——网盘神器OneDrive介绍 - Fatsheep’s Blog</a></p></li><li><p>点击确认，等待跳转到身份认证界面，登录授权</p></li><li><p>选择挂载的内容，选择挂载Onedrive或者SharePoint，根据提示信息即可。</p></li><li><p>如果挂载失败尝试用自己的应用ID与机密再次尝试挂载</p></li><li><p>成功挂载完成之后就可以在主页看到自己OneDrive里的内容了。</p></li></ol><p>❗ 这里解释一下用自己申请的应用ID与机密：<strong>意思是自己去微软应用注册那里申请，不懂得看我前面讲的</strong></p><h3 id="挂载AliDrive"><a href="#挂载AliDrive" class="headerlink" title="挂载AliDrive"></a>挂载AliDrive</h3><ol><li>进入OneManager后台管理界面</li><li>选择Aliyundrive，点击添加盘</li><li>根据自己喜欢设置标签和名称</li><li>填入Refresh token<ul><li>这里说一下Refresh token分两种获取方式，可以通过电脑，也可以通过手机</li><li>通过电脑的会导致视频不能正常加载，建议通过手机</li><li>具体方法百度，简单说一下原理，就是去手机的文件管理里找你的登录日志log文件</li><li>记事本打开log文件，找到Refresh token</li></ul></li><li>选择挂载普通空间还是保险箱，注意，这里挂载的保险箱是不加密的，想加密可以通过OneManger自带的加密进行加密，需要说明的是，取消加密的方法是设置加密密码为空即可</li><li>成功挂载完成之后就可以在主页看到自己AliDrive里的内容了。</li></ol><h2 id="美化OneManager"><a href="#美化OneManager" class="headerlink" title="美化OneManager"></a>美化OneManager</h2><h3 id="修改网站图标"><a href="#修改网站图标" class="headerlink" title="修改网站图标"></a>修改网站图标</h3><ol><li><p>将图标转换为ico格式</p><p>下面给一个png转ico的网站 <a href="https://www.aconvert.com/cn/icon/png-to-ico/">点击前往</a> </p></li><li><p>将文件命改为favicon.ico</p></li><li><p>上传到OneManger网站的第一个网盘的根目录里</p></li></ol><h3 id="添加免责声明"><a href="#添加免责声明" class="headerlink" title="添加免责声明"></a>添加免责声明</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">❗ 免责声明</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 本盘所上传的一切资源仅限用于学习和研究目的；不得将上述内容用于商业或者非法用途，否则，一切后果请用户自负。</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 本盘资源来自网络，版权争议与本站无关。您必须在下载后的 24 个小时之内彻底删除。如果您喜欢该程序，请支持正版软件，购买注册，得到更好的正版服务。</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 附: 二○○二年一月一日《计算机软件保护条例》第十七条规定：为了学习和研究软件内含的设计思想和原理，通过安装、显示、传输或者存储软件等方式使用软件的，可以不经软件著作权人许可，不向其支付报酬！鉴于此，也希望大家按此说明研究软件！</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 注：本盘所有资源均来自网络转载，版权归原作者和公司所有，如果有侵犯到您的权益，请第一时间 与我联系，我们将配合处理！</span><br></pre></td></tr></table></figure><ol><li>新建一个名为readme.md的文件</li><li>用记事本打开readme.md并复制上述文字粘贴保存</li><li>上传到OneManger网站的第一个网盘的根目录里</li></ol><h3 id="添加一言和Rainbow"><a href="#添加一言和Rainbow" class="headerlink" title="添加一言和Rainbow"></a>添加一言和Rainbow</h3><p>达到每次刷新都会有一个格言的效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;rainbow&quot;</span> <span class="attr">href</span>=<span class="string">&#x27;&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;fatsheep&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>🌈正在读取中...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;hitokoto&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;hitokoto_text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;fatsheep&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>🌈正在读取中...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.fatsheep</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: darkgray;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">&#x27;https://api.eatrice.top&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> rainbow = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;rainbow&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            rainbow.<span class="property">innerHTML</span> = <span class="string">&quot;「&quot;</span> + data.<span class="property">Source</span> + <span class="string">&quot;」&quot;</span> + <span class="string">&quot;：&quot;</span> + data.<span class="property">Content</span>;</span></span><br><span class="line"><span class="language-javascript">            rainbow.<span class="property">href</span> = <span class="string">&quot;https://www.fatsheep.cn&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">error</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">&#x27;https://v1.hitokoto.cn&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> hitokoto = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;hitokoto_text&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            hitokoto.<span class="property">href</span> = <span class="string">&#x27;https://www.fatsheep.cn&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            hitokoto.<span class="property">innerText</span> = <span class="string">&quot;「&quot;</span> + data.<span class="property">from</span> + <span class="string">&quot;」&quot;</span> + <span class="string">&quot;：&quot;</span> + data.<span class="property">hitokoto</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">error</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><p>新建一个名为head.omf的文件</p></li><li><p>复制上述代码，有能力的可以自行修改，粘贴进去保存</p></li><li><p>上传到OneManager网站第一个盘的根目录里</p></li><li><p>刷新缓存，即可看到效果</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232127100.png" alt="一言和Raibow效果图"></p></li></ol><h3 id="添加valine评论功能"><a href="#添加valine评论功能" class="headerlink" title="添加valine评论功能"></a>添加valine评论功能</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="attribute">src</span>=&#x27;//unpkg<span class="selector-class">.com</span>/valine/dist/Valine<span class="selector-class">.min</span><span class="selector-class">.js</span>&#x27;&gt;&lt;/script&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;vcomments&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  new Valine(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vcomments&#x27;</span>,</span><br><span class="line">    appId: <span class="string">&#x27;XDcAOd6AYXD4enFkWdFrBsdu-gzGzoHsz&#x27;</span>,</span><br><span class="line">    appKey: <span class="string">&#x27;npjj3HRjoQw3X5obVFLvTIGi&#x27;</span>,</span><br><span class="line">    placeholder: <span class="string">&#x27;欢迎大家在评论区留言哦！&#x27;</span>,</span><br><span class="line">    lang: document.<span class="built_in">getElementsByTagName</span>(<span class="string">&#x27;html&#x27;</span>)[<span class="number">0</span>].lang==<span class="string">&#x27;zh-cn&#x27;</span> ? <span class="string">&#x27;zh-CN&#x27;</span> : <span class="string">&#x27;en&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol><li><p>新建一个名为foot.omf的文件</p></li><li><p>复制上述代码，修改里面的appId和appKey，这两个东西去leancloud获取，具体方法百度，粘贴进去之后保存</p></li><li><p>上传到OneManager网站第一个盘的根目录里</p></li><li><p>刷新缓存，即可看到效果</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232127099.png" alt="Valine评论功能"></p></li></ol><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>   感谢我的两位好哥哥</p><p>   <strong>亦之竹哥哥</strong></p><p>   <strong>暂时不知名字的哥哥</strong></p>]]></content>
      
      
      <categories>
          
          <category> 网盘那些事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> OneDrive </tag>
            
            <tag> OneManager </tag>
            
            <tag> FC阿里云函数计算 </tag>
            
            <tag> AliDrive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Vercel搭建OneManager并挂载OneDrive和AliDrive</title>
      <link href="/2021/08/23/%E7%94%A8Vercel%E6%90%AD%E5%BB%BAOneManager%E5%B9%B6%E6%8C%82%E8%BD%BDOneDrive%E5%92%8CAliDrive/"/>
      <url>/2021/08/23/%E7%94%A8Vercel%E6%90%AD%E5%BB%BAOneManager%E5%B9%B6%E6%8C%82%E8%BD%BDOneDrive%E5%92%8CAliDrive/</url>
      
        <content type="html"><![CDATA[<h1 id="用Vercel搭建OneManager并挂载OneDrive和AliDrive"><a href="#用Vercel搭建OneManager并挂载OneDrive和AliDrive" class="headerlink" title="用Vercel搭建OneManager并挂载OneDrive和AliDrive"></a>用Vercel搭建OneManager并挂载OneDrive和AliDrive</h1><h2 id="关于OneManager"><a href="#关于OneManager" class="headerlink" title="关于OneManager"></a>关于OneManager</h2><blockquote><p>OneManager是GitHub上的一位大神逸笙开发出来的项目，它可以挂载多个网盘，比如Onedrive，Alidrive，Googledrive，SharePoint等等… 挂载之后能够在线预览图片，ppt，在线编辑文件，在线倍速播放视频，提供直链供下载使用。甚至，你可以结合苹果cms搭建一个自己的影视网站。我觉得最主要的还是它经常调用API能够帮助Office365 E5自动续期</p></blockquote><p><a href="https://drive.fatsheep.cn/">演示网站Fatsheep’s Drive</a></p><h2 id="先上成品图，来点动力"><a href="#先上成品图，来点动力" class="headerlink" title="先上成品图，来点动力"></a>先上成品图，来点动力</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232058472.jpg" alt="成品图"></p><h2 id="Why-do-it-deploy-to-vercel？"><a href="#Why-do-it-deploy-to-vercel？" class="headerlink" title="Why do it deploy to vercel？"></a>Why do it deploy to vercel？</h2><blockquote><p>1.免费托管项目</p><p>2.支持自定义域名和ssl证书</p></blockquote><blockquote><p>当然它也有缺点… 反应慢… 不稳定… 有时候进不去。</p></blockquote><h2 id="Deploy-to-Vercel"><a href="#Deploy-to-Vercel" class="headerlink" title="Deploy to Vercel"></a>Deploy to Vercel</h2><h3 id="How-to-deploy？"><a href="#How-to-deploy？" class="headerlink" title="How to deploy？"></a>How to deploy？</h3><ol><li><p><a href="https://scfonedrive.github.io/Vercel/Deploy.html">点击前往部署网站✈</a></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045228.png" alt="部署界面，中文翻译"></p></li><li><p>下载压缩包并解压</p></li><li><p>选择刚才解压的文件夹</p></li><li><p>获取一个Token，并输入里面。先建议复制保存下来，等会还要用到。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045224.png" alt="创建一个新的Token"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045229.png" alt="随便起个名字，点击创建token"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045226.png" alt="复制创建好的token，保存下来，安装项目的时候会再次用到，当然你可以到时候再创一个新的"></p></li><li><p>输入项目名（随意，喜欢就好）</p></li><li><p>点击Deploy进行部署。</p></li><li><p>等待部署完成</p></li></ol><h3 id="How-to-install？"><a href="#How-to-install？" class="headerlink" title="How to install？"></a>How to install？</h3><ol><li><p>部署完成之后点击网站地址进入安装界面</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045231.png" alt="等待部署完成之后出现去往安装界面的提示，点击链接跳转到安装界面"></p></li><li><p>进入安装界面后，点击开始安装程序</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045232.png" alt="根据提示信息，点击开始安装程序"></p></li><li><p>选择语言，填写token，设置管理员密码</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045233.png" alt="选择语言，填写token，设置管理员密码，确认安装"></p></li><li><p>确认，等待安装完成。</p></li><li><p>安装完成之后如果没有自动进入首页而是再次出现安装界面的话手动点击<strong>返回首页</strong></p></li></ol><h2 id="修改平台变量"><a href="#修改平台变量" class="headerlink" title="修改平台变量"></a>修改平台变量</h2><ol><li><p>点击左上角的登录，输入管理员密码登录后台管理</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045234.png" alt="点击左上角的登录，输入管理员密码登录后台管理"></p></li><li><p>鼠标放到左上角的管理，点击设置</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045227.png" alt="鼠标放到左上角的管理，点击设置"></p></li><li><p>点击平台变量，接下来看提示信息</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045236.png" alt="平台变量设置的提示信息"></p></li><li><p>根据提示和自己的实际情况进行修改（都有说明，都是字面意思，认真看即可）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045237.png" alt="附上我的设置截图"></p></li><li><p>点击左下角的设置，完成更改。</p></li><li><p>点击返回后台管理界面进行挂载盘</p></li></ol><h2 id="挂载OneDrive-SharePoint和AliDrive"><a href="#挂载OneDrive-SharePoint和AliDrive" class="headerlink" title="挂载OneDrive/SharePoint和AliDrive"></a>挂载OneDrive/SharePoint和AliDrive</h2><h3 id="关于SharePoint"><a href="#关于SharePoint" class="headerlink" title="关于SharePoint"></a>关于SharePoint</h3><ul><li><p>SharePoint你可以简单理解为大容量的OneDrive，它可以通过创建网站来存放文件。</p></li><li><p>个人版貌似没有这个功能，开发者版E5有~  关于Office365 E5开发者订阅的申请，<a href="https://blog.fatsheep.cn/2021/08/24/%E7%94%B3%E8%AF%B7office-E5%E5%BC%80%E5%8F%91%E8%80%85%E8%AE%A2%E9%98%85%EF%BC%8C%E9%99%84%E6%97%A0%E9%99%90%E7%BB%AD%E6%9C%9F-%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98%E6%95%99%E7%A8%8B/">请飞往申请office E5开发者订阅，附无限续期 私人网盘教程</a></p></li></ul><h3 id="打开SharePoint"><a href="#打开SharePoint" class="headerlink" title="打开SharePoint"></a>打开SharePoint</h3><ol><li><p>打开Microsoft 365 管理中心 <a href="https://admin.microsoft.com/">点击前往</a></p></li><li><p>点击左上角的启动器，找到Sharepoint并打开</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232106485.png" alt="点击左上角的启动器"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232106484.png" alt="找到SharePoint并打开"></p></li></ol><h4 id="创建SharePoint网站"><a href="#创建SharePoint网站" class="headerlink" title="创建SharePoint网站"></a>创建SharePoint网站</h4><ol><li><p>登录你的SharePoint，点击左侧小房子，回到SharePoint起始页面</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232058473.png" alt="点击小房子之后找到创建网站"></p></li><li><p>点击创建网站，默认团队网站即可</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045243.png" alt="默认团队网站即可"></p></li><li><p>根据自己喜欢填写网站信息，可随意</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045244.png" alt="根据自己喜欢填写网站信息，可随意，重点是记下来站点地址，挂载SharePoint的时候需要用到"></p></li><li><p><strong>复制站点地址</strong>，拿小本本记下来，挂载SharePoint的时候需要用到，然后点击下一步</p></li><li><p>可添加其他成员，也可以不添加，默认不加即可，然后点完成</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045245.png" alt="可添加其他成员，也可以不添加，默认不加即可，然后点完成"></p></li><li><p>我们的文件就在文档里，可以在这里上传，也可以用OneDrive客户端上传（推荐）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045246.png" alt="我们的文件就在文档里，可以在这里上传，也可以用OneDrive客户端上传（推荐）"></p></li><li><p>接下来添加到OneDrive客户端、文件资源管理器</p></li><li><p>点击文档，找到同步，点击同步，即可添加。</p></li><li><p>完成之后即可在文件资源管理器找到，如果需要上传文件，只需要拖到这个文件夹即可。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045248.png" alt="OneDrive客户端已显示demo-文档同步"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045249.png" alt="完成之后即可在文件资源管理器找到，如果需要上传文件，只需要拖到这个文件夹即可。"></p></li><li><p>到此，你就算拥有了自己的SharePoint，第一天默认1T，第二天会自动升级25T大容量</p></li></ol><h3 id="挂载OneDrive和SharePoint"><a href="#挂载OneDrive和SharePoint" class="headerlink" title="挂载OneDrive和SharePoint"></a>挂载OneDrive和SharePoint</h3><p>1.进入OneManager后台管理界面</p><p>2.选择Onedrive，点击添加盘</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045239.png" alt="选择Onedrive，点击添加盘"></p><p>3.根据自己喜欢设置标签和名称，挂载上之后也可以修改</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232045240.png" alt="根据自己喜欢设置标签和名称，挂载上之后也可以修改"></p><p>4.选择对应的版本，如果不懂，见前面我讲的<a href="https://blog.fatsheep.cn/2021/08/21/%E3%80%8A%E7%BD%91%E7%9B%98%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8B%E2%80%94%E2%80%94%E7%BD%91%E7%9B%98%E7%A5%9E%E5%99%A8OneDrive%E4%BB%8B%E7%BB%8D/">《网盘那些事》——网盘神器OneDrive介绍 - Fatsheep’s Blog</a></p><p>5.点击确认，等待跳转到身份认证界面，登录授权</p><p>6.选择挂载的内容，选择挂载Onedrive或者SharePoint，根据提示信息即可。</p><p>7.如果挂载失败尝试用自己的应用ID与机密再次尝试挂载</p><p>8.成功挂载完成之后就可以在主页看到自己OneDrive里的内容了。</p><p>❗ 这里解释一下用自己申请的应用ID与机密：<strong>意思是自己去微软应用注册那里申请，不懂得看我前面讲的</strong></p><h3 id="挂载AliDrive"><a href="#挂载AliDrive" class="headerlink" title="挂载AliDrive"></a>挂载AliDrive</h3><ol><li>进入OneManager后台管理界面</li><li>选择Aliyundrive，点击添加盘</li><li>根据自己喜欢设置标签和名称</li><li>填入Refresh token<ul><li>这里说一下Refresh token分两种获取方式，可以通过电脑，也可以通过手机</li><li>通过电脑的会导致视频不能正常加载，建议通过手机</li><li>具体方法百度，简单说一下原理，就是去手机的文件管理里找你的登录日志log文件</li><li>记事本打开log文件，找到Refresh token</li></ul></li><li>选择挂载普通空间还是保险箱，注意，这里挂载的保险箱是不加密的，想加密可以通过OneManger自带的加密进行加密，需要说明的是，取消加密的方法是设置加密密码为空即可</li><li>成功挂载完成之后就可以在主页看到自己AliDrive里的内容了。</li></ol><h2 id="美化OneManager"><a href="#美化OneManager" class="headerlink" title="美化OneManager"></a>美化OneManager</h2><h3 id="修改网站图标"><a href="#修改网站图标" class="headerlink" title="修改网站图标"></a>修改网站图标</h3><ol><li><p>将图标转换为ico格式</p><p>下面给一个png转ico的网站 <a href="https://www.aconvert.com/cn/icon/png-to-ico/">点击前往</a> </p></li><li><p>将文件命改为favicon.ico</p></li><li><p>上传到OneManger网站的第一个网盘的根目录里</p></li></ol><h3 id="添加免责声明"><a href="#添加免责声明" class="headerlink" title="添加免责声明"></a>添加免责声明</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">❗ 免责声明</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 本盘所上传的一切资源仅限用于学习和研究目的；不得将上述内容用于商业或者非法用途，否则，一切后果请用户自负。</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 本盘资源来自网络，版权争议与本站无关。您必须在下载后的 24 个小时之内彻底删除。如果您喜欢该程序，请支持正版软件，购买注册，得到更好的正版服务。</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 附: 二○○二年一月一日《计算机软件保护条例》第十七条规定：为了学习和研究软件内含的设计思想和原理，通过安装、显示、传输或者存储软件等方式使用软件的，可以不经软件著作权人许可，不向其支付报酬！鉴于此，也希望大家按此说明研究软件！</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 注：本盘所有资源均来自网络转载，版权归原作者和公司所有，如果有侵犯到您的权益，请第一时间 与我联系，我们将配合处理！</span><br></pre></td></tr></table></figure><ol><li>新建一个名为readme.md的文件</li><li>用记事本打开readme.md并复制上述文字粘贴保存</li><li>上传到OneManger网站的第一个网盘的根目录里</li></ol><h3 id="添加一言和Rainbow"><a href="#添加一言和Rainbow" class="headerlink" title="添加一言和Rainbow"></a>添加一言和Rainbow</h3><p>达到每次刷新都会有一个格言的效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;rainbow&quot;</span> <span class="attr">href</span>=<span class="string">&#x27;&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;fatsheep&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>🌈正在读取中...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;hitokoto&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;hitokoto_text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;fatsheep&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>🌈正在读取中...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.fatsheep</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: darkgray;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">&#x27;https://api.eatrice.top&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> rainbow = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;rainbow&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            rainbow.<span class="property">innerHTML</span> = <span class="string">&quot;「&quot;</span> + data.<span class="property">Source</span> + <span class="string">&quot;」&quot;</span> + <span class="string">&quot;：&quot;</span> + data.<span class="property">Content</span>;</span></span><br><span class="line"><span class="language-javascript">            rainbow.<span class="property">href</span> = <span class="string">&quot;https://www.fatsheep.cn&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">error</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">&#x27;https://v1.hitokoto.cn&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> hitokoto = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;hitokoto_text&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            hitokoto.<span class="property">href</span> = <span class="string">&#x27;https://www.fatsheep.cn&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            hitokoto.<span class="property">innerText</span> = <span class="string">&quot;「&quot;</span> + data.<span class="property">from</span> + <span class="string">&quot;」&quot;</span> + <span class="string">&quot;：&quot;</span> + data.<span class="property">hitokoto</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">error</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>1.新建一个名为head.omf的文件</p><p>2.复制上述代码，有能力的可以自行修改，粘贴进去保存</p><p>3.上传到OneManager网站第一个盘的根目录里</p><p>4.刷新缓存，即可看到效果</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232127100.png" alt="一言和Raibow效果图"></p><h3 id="添加valine评论功能"><a href="#添加valine评论功能" class="headerlink" title="添加valine评论功能"></a>添加valine评论功能</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="attribute">src</span>=&#x27;//unpkg<span class="selector-class">.com</span>/valine/dist/Valine<span class="selector-class">.min</span><span class="selector-class">.js</span>&#x27;&gt;&lt;/script&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;vcomments&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  new Valine(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vcomments&#x27;</span>,</span><br><span class="line">    appId: <span class="string">&#x27;XDcAOd6AYXD4enFkWdFrBsdu-gzGzoHsz&#x27;</span>,</span><br><span class="line">    appKey: <span class="string">&#x27;npjj3HRjoQw3X5obVFLvTIGi&#x27;</span>,</span><br><span class="line">    placeholder: <span class="string">&#x27;欢迎大家在评论区留言哦！&#x27;</span>,</span><br><span class="line">    lang: document.<span class="built_in">getElementsByTagName</span>(<span class="string">&#x27;html&#x27;</span>)[<span class="number">0</span>].lang==<span class="string">&#x27;zh-cn&#x27;</span> ? <span class="string">&#x27;zh-CN&#x27;</span> : <span class="string">&#x27;en&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol><li><p>新建一个名为foot.omf的文件</p></li><li><p>复制上述代码，修改里面的appId和appKey，这两个东西去leancloud获取，具体方法百度，粘贴进去之后保存</p></li><li><p>上传到OneManager网站第一个盘的根目录里</p></li><li><p>刷新缓存，即可看到效果</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108232127099.png" alt="Valine评论功能"></p></li></ol><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢我的两位好哥哥</p><p><strong>亦之竹哥哥</strong></p><p><strong>暂时不知名字的哥哥</strong></p>]]></content>
      
      
      <categories>
          
          <category> 网盘那些事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> OneDrive </tag>
            
            <tag> OneManager </tag>
            
            <tag> AliDrive </tag>
            
            <tag> vercel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微软OneDrive基础知识小白扫盲</title>
      <link href="/2021/08/21/%E3%80%8A%E7%BD%91%E7%9B%98%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8B%E2%80%94%E2%80%94%E7%BD%91%E7%9B%98%E7%A5%9E%E5%99%A8OneDrive%E4%BB%8B%E7%BB%8D/"/>
      <url>/2021/08/21/%E3%80%8A%E7%BD%91%E7%9B%98%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8B%E2%80%94%E2%80%94%E7%BD%91%E7%9B%98%E7%A5%9E%E5%99%A8OneDrive%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="微软OneDrive基础知识小白扫盲"><a href="#微软OneDrive基础知识小白扫盲" class="headerlink" title="微软OneDrive基础知识小白扫盲"></a>微软OneDrive基础知识小白扫盲</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="在软件，视频，各种文件日益增大的今天，大家都是怎样储存文件的？"><a href="#在软件，视频，各种文件日益增大的今天，大家都是怎样储存文件的？" class="headerlink" title="在软件，视频，各种文件日益增大的今天，大家都是怎样储存文件的？"></a>在软件，视频，各种文件日益增大的今天，大家都是怎样储存文件的？</h3><blockquote><p>身为学生的我，固态买不起，买了个1T的机械硬盘，太小…不够用emmmmm 于是就想到了网盘。网盘大家应该都不陌生了。网盘里比较有名的怕是百度网盘啦…很多资源都在上面。之前淘宝买的教学视频之类的都在里面 自己也屯了5T的资源。从很早之前的免费领取两T空间…到限速。 现在就连超级会员也无法满速下载… 然后就有了我今天要讲的<strong>OneDrive</strong>。</p></blockquote><h2 id="关于OneDrive"><a href="#关于OneDrive" class="headerlink" title="关于OneDrive"></a>关于OneDrive</h2><p><strong>OneDrive</strong> 原名 <strong>SkyDrive</strong>，是微软 <strong>Office</strong> 家族中的一个成员。</p><p><strong>OneDrive</strong> 从面向用户群体方面分为个人版，<strong>Business</strong> 版（商业版）</p><h3 id="个人版与-Business-版的区别"><a href="#个人版与-Business-版的区别" class="headerlink" title="个人版与 Business 版的区别"></a>个人版与 B<strong>usiness</strong> 版的区别</h3><p>1、客户端图标不同，个人版的客户端图标是白色的，而 <strong>Business</strong> 版的客户端图标是蓝色的。</p><p>2、个人版的网页版地址与 <strong>Business</strong> 版的网页版地址不同</p><p>个人版网页地址：<a href="https://link.zhihu.com/?target=http://onedrive.live.com">http://onedrive.live.com</a> (此地址在大陆无法访问)</p><p>business 版网页地址：<a href="https://link.zhihu.com/?target=http://xxx-my.sharepoint.com">http://xxx-my.sharepoint.com</a>（可以访问）</p><p>3、个人版有微软运营（也就是国际版），而 <strong>Business</strong> 版分<strong>微软运营</strong>的（国际版）和<strong>世纪互联运营</strong>的（国内版）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108211815333.jpg" alt="个人版和商业版的区别"></p><h3 id="Business-版的授权级别（与腾讯的-QQ-会员等级类似）"><a href="#Business-版的授权级别（与腾讯的-QQ-会员等级类似）" class="headerlink" title="Business 版的授权级别（与腾讯的 QQ 会员等级类似）"></a><strong>Business</strong> 版的授权级别（与腾讯的 QQ 会员等级类似）</h3><p>目前市场上 <strong>Business</strong> 版常见要分为 <strong>A1</strong>，<strong>A1 Plus</strong> ( 简称 A1P ) ，<strong>A3</strong>（最大特点是包含 windows 许可），<strong>E1</strong>，<strong>E3 MSDN</strong>（企业开发者版 ），<strong>E3 Symphony</strong>（简称 <strong>E3SY</strong> ）,<strong>E5</strong>，<strong>E5</strong> 试用版</p><p>除 <strong>A1</strong> 外，其他许可都具有 <strong>Office 365</strong> 桌面版的授权（也就是可以激活 <strong>Office 365</strong> 桌面版）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108211815335.jpg" alt="Business版的授权级别"></p><p>Business 版的面向群体是企业、教育机构、政府组织、非盈利组织等非个人的社会团体。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108211815331.jpg" alt="Business 版的面向群体是企业、教育机构、政府组织、非盈利组织等非个人的社会团体。"></p><p>当然，个人也可以购买 <strong>Business</strong> 版</p><p>说到 <strong>Business</strong> 版的授权，就再这里简单介绍一下<strong>OneDrive</strong> 的用户账号。</p><h3 id="OneDrive-的用户账号主要分为-全局管理员账号及子账号。"><a href="#OneDrive-的用户账号主要分为-全局管理员账号及子账号。" class="headerlink" title="OneDrive 的用户账号主要分为 全局管理员账号及子账号。"></a><strong>OneDrive</strong> 的用户账号主要分为 全局管理员账号及子账号。</h3><p>我们大部分使用的是子账号</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108211815336.jpg" alt="OneDrive用户账户"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108211815334.jpg" alt="全局管理员"></p><p>全局管理员能给多少子账号授权是由授权许可数量决定的。</p><p>比如 <strong>E3 MSDN</strong> 的 25 个许可</p><p>比如 <strong>A1/A1P</strong> 的无限许可，及有数量的许可</p><h3 id="全局管理员是如何获取的呢？"><a href="#全局管理员是如何获取的呢？" class="headerlink" title="全局管理员是如何获取的呢？"></a>全局管理员是如何获取的呢？</h3><p>除了正规的渠道购买许可外，</p><ol><li><p>抢注域名</p><ul><li>可以过微软认证的域名（教育认证，商业认证等）</li></ul><ul><li>为什么这些域名可以过微软的教育认证或商业认证呢？<ol><li>某些域名是微软认可的教育/学术机构,或者非盈利组织，微软免费对这些域名提供 VIP 服务，但是这些域名可能被教育机构放弃使用或者域名到期等原因，被其他人抢注。</li><li>伪造或通过特殊渠道弄到教育/学术办学资质骗取微软的认证。</li><li>公司或企业放弃域名或被抢注</li><li>微软对这些域名没有及时更新授权状态</li></ol></li></ul></li><li><p>申请空全局管理员账号（就是没有许可的全局管理员账号）</p></li><li><p>给空全局管理员账号做微软认证。获取教育认证或者商业认证等其他认证。</p></li></ol><p><strong>说到这里，相信大家对 OneDrive 有了一定的认识。那我们如何选择 OneDrive 呢？</strong></p><h2 id="获取-OneDrive-的方式"><a href="#获取-OneDrive-的方式" class="headerlink" title="获取 OneDrive 的方式"></a>获取 OneDrive 的方式</h2><p>1、官方渠道购买</p><p>2、如果你是学生，可以通过学校给你提供的教育邮箱申请 OneDrive （一般是国际版，也有国内版）</p><p>3、网上提供的免费注册或者收费购买的</p><p>最近大家对 <strong>OneDrive</strong> 的稳定安全问题比较关注。我在这里做了一点整理，希望能帮助到不同的用户人群。</p><h3 id="1-针对对数据安全性较高的用户，最好的方式还是选择官方购买。如果你对速度有要求，有两个方案"><a href="#1-针对对数据安全性较高的用户，最好的方式还是选择官方购买。如果你对速度有要求，有两个方案" class="headerlink" title="1. 针对对数据安全性较高的用户，最好的方式还是选择官方购买。如果你对速度有要求，有两个方案"></a>1. 针对对数据安全性较高的用户，最好的方式还是选择官方购买。如果你对速度有要求，有两个方案</h3><ul><li>购买国际版+代理</li><li>购买国内版（世纪互联运营）</li></ul><p><strong>官方购买链接</strong></p><p>Microsoft 365 家庭版</p><p><a href="https://link.zhihu.com/?target=https://www.microsoft.com/zh-cn/microsoft-365/buy/microsoft-365">https://www.microsoft.com/zh-cn/microsoft-365/buy/microsoft-365</a></p><p>Microsoft 365 国际商业版（中小企业）</p><p><a href="https://link.zhihu.com/?target=https://www.microsoft.com/zh-cn/microsoft-365/compare-all-microsoft-365-products?activetab=tab:primaryr2">https://www.microsoft.com/zh-cn/microsoft-365/compare-all-microsoft-365-products?activetab=tab:primaryr2</a></p><p>Microsoft 365 国际商业版（大型企业）</p><p><a href="https://link.zhihu.com/?target=https://www.microsoft.com/zh-cn/microsoft-365/business/compare-more-office-365-for-business-plans">https://www.microsoft.com/zh-cn/microsoft-365/business/compare-more-office-365-for-business-plans</a></p><p>Microsoft 365 中国商业版（中小企业）</p><p><a href="https://link.zhihu.com/?target=https://www.microsoft.com/zh-cn/microsoft-365/compare-china-global-versions-microsoft-365">https://www.microsoft.com/zh-cn/microsoft-365/compare-china-global-versions-microsoft-365</a></p><p>Microsoft 365 中国商业版（大型企业）</p><p><a href="https://link.zhihu.com/?target=https://www.microsoft.com/zh-cn/microsoft-365/compare-more-china-versions-microsoft-365">https://www.microsoft.com/zh-cn/microsoft-365/compare-more-china-versions-microsoft-365</a></p><p>Microsoft SharePoint Online（国际）</p><p><a href="https://link.zhihu.com/?target=https://www.microsoft.com/zh-cn/microsoft-365/sharepoint/compare-sharepoint-plans">https://www.microsoft.com/zh-cn/microsoft-365/sharepoint/compare-sharepoint-plans</a></p><p>Microsoft SharePoint Online（中国）</p><p><a href="https://link.zhihu.com/?target=https://www.microsoft.com/zh-cn/microsoft-365/business-china-offers%23midpagesecondarymessaging">https://www.microsoft.com/zh-cn/microsoft-365/business-china-offers#midpagesecondarymessaging</a></p><p>Microsoft 365 国际 F3 计划</p><p><a href="https://link.zhihu.com/?target=https://www.microsoft.com/zh-cn/microsoft-365/business/office-365-f3?activetab=pivot:overviewtab">https://www.microsoft.com/zh-cn/microsoft-365/business/office-365-f3?activetab=pivot:overviewtab</a></p><p>Microsoft 365 国内 F3 计划</p><p><a href="https://link.zhihu.com/?target=https://www.microsoft.com/zh-cn/microsoft-365/business-china-offers%23office-ContentAreaHeadingTemplate-mmnucos">https://www.microsoft.com/zh-cn/microsoft-365/business-china-offers#office-ContentAreaHeadingTemplate-mmnucos</a></p><p>Microsoft 365 F3 订阅</p><p><a href="https://link.zhihu.com/?target=https://portal.partner.microsoftonline.cn/SubscriptionDetails?OfferId=DD321C73-343F-4B11-BF3E-6D36F18ED94A&adminportal=1">https://portal.partner.microsoftonline.cn/SubscriptionDetails?OfferId=DD321C73-343F-4B11-BF3E-6D36F18ED94A&amp;adminportal=1</a></p><p>世纪互联 Microsoft 365 购买页面</p><p><a href="https://link.zhihu.com/?target=https://www.21vbluecloud.com/office365/pricing/">https://www.21vbluecloud.com/office365/pricing/</a></p><p><strong>只使用 OneDrive 推荐中小企业的 “商业基础版”</strong></p><p><strong>只使用 Office 365 桌面版推荐个人版中的家庭版（ 6 用户）可以找人拼车</strong></p><h3 id="2、针对数据安全要求较高，又不想官方购买的"><a href="#2、针对数据安全要求较高，又不想官方购买的" class="headerlink" title="2、针对数据安全要求较高，又不想官方购买的"></a>2、针对数据安全要求较高，又不想官方购买的</h3><ul><li><p>购买通过正规教育机构邮箱注册的教育版</p></li><li><ol><li>国际版（国内或国外正规的大学邮箱申请）</li></ol><p>国际版分有管理员和无管理员两种（国内大部分高校属于无管理员版本）</p></li><li><ol start="2"><li>国内版（国内正规的大学申请，比如同济校友邮箱）</li></ol></li></ul><h3 id="3、针对数据安全要求不是很高的用户"><a href="#3、针对数据安全要求不是很高的用户" class="headerlink" title="3、针对数据安全要求不是很高的用户"></a>3、针对数据安全要求不是很高的用户</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网上提供的免费版的自助注册（这类的账号 **安全性** 和 **稳定行** 相对最低）</span><br></pre></td></tr></table></figure><p><strong>一般网上提供的大部分都是通过非正规渠道获取授权的全局管理员账号创建的子账号</strong></p><p><strong>子号授权类型分为 A1 ,A1P（可能是收费的），E3 SY（玩具车，稳定性堪忧）</strong></p><p><strong>稳定性比较</strong></p><p><strong>A1</strong> ≥ <strong>A1P&amp;E3 SY</strong></p><p><strong>E3 MSDN</strong> 是全局账号中相对稳定的，子号同理。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108211815332.jpg"></p><h2 id="关于-OneDrive-空间大小的部分说明"><a href="#关于-OneDrive-空间大小的部分说明" class="headerlink" title="关于 OneDrive 空间大小的部分说明"></a>关于 OneDrive 空间大小的部分说明</h2><p>个人版（家庭版） 每人 <strong>5G</strong>，能否扩容，具体不清楚。</p><p><strong>Busniess</strong> 版</p><p>默认情况下是 <strong>1T</strong> 空间，管理员可以设置成 <strong>5T</strong> 空间。如果使用量达到 <strong>4.5T</strong> 以上，可以申请工单，扩容到 <strong>25T</strong>（貌似已经失效）。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><strong>数据一定要做好备份</strong>！！！！！！</p><p><strong>数据一定要做好备份</strong>！！！！！！</p><p><strong>数据一定要做好备份</strong>！！！！！！</p><p>以上是个人的一些整理和对 Offfice 的理解。如果有不全面的地方，欢迎大家批评指正,希望能帮助到大家！谢谢！</p><p>转自零零娱乐网</p><p>作者乐乐</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢我的两位好哥哥</p><p><strong>亦之竹哥哥</strong></p><p><strong>暂时不知名字的哥哥</strong></p>]]></content>
      
      
      <categories>
          
          <category> 网盘那些事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> OneDrive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用内网穿透实现本地网站他人可见</title>
      <link href="/2021/08/17/%E5%88%A9%E7%94%A8%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%AE%9E%E7%8E%B0%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E4%BB%96%E4%BA%BA%E5%8F%AF%E8%A7%81/"/>
      <url>/2021/08/17/%E5%88%A9%E7%94%A8%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%AE%9E%E7%8E%B0%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E4%BB%96%E4%BA%BA%E5%8F%AF%E8%A7%81/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上文已经提到如何利用<a href="https://www.fatsheep.cn/2021/08/17/Win10%E5%88%A9%E7%94%A8IIS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B9%8BIIS%E7%AE%A1%E7%90%86%E5%99%A8%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE-%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99/">搭建本地网站运行环境之IIS管理器基本设置&amp;创建本地网站 - Fatsheep’s Blog</a>，很多时候，我们在本地完成的一些项目是别人不可见的，开通内网穿透就可以在任何地方给客户展示，同时也免去了部署的麻烦，没准可以少加一会班儿呢！。</p><h1 id="关于内网穿透"><a href="#关于内网穿透" class="headerlink" title="关于内网穿透"></a>关于内网穿透</h1><ul><li><p>内网穿透,又叫NAT穿透，是计算机用语，翻译过来就是 你的电脑可以直接被你朋友访问。<span id="more"></span></p></li><li><p>通常实现内网穿透，是通过路由器上端口映射来实现的。但是路由器通常不是每个人都有权限可以访问和设置,而且可能存在多级路由器较为复杂的网络结构。</p></li><li><p>目前内网穿透的关于软件不少：frp,nps,ngrok，花生壳，向日葵，natapp等，但收费，不收费的不好用。</p></li><li><p>于是就有钉钉开放平台团队在GitHub上开源了 <a href="https://github.com/open-dingtalk/pierced"><strong>✈钉钉内网穿透</strong></a>，免费，开源，支持自定义子域名。</p></li></ul><h1 id="钉钉内网穿透工具配置"><a href="#钉钉内网穿透工具配置" class="headerlink" title="钉钉内网穿透工具配置"></a>钉钉内网穿透工具配置</h1><h2 id="第一步：-clone-git仓库"><a href="#第一步：-clone-git仓库" class="headerlink" title="第一步： clone git仓库"></a>第一步： clone git仓库</h2><p>执行命令：根据实际情况选择，我在杭州，所以选择了第三条中国浙江。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/open-dingtalk/pierced.git <span class="comment">#Github官方源</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://hub.fastgit.org/open-dingtalk/pierced.git <span class="comment">#加速源：中国香港</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitclone.com/github.com/open-dingtalk/pierced.git <span class="comment">#加速源：中国浙江</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com.cnpmjs.org/open-dingtalk/pierced.git <span class="comment">#加速源：新加坡</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108171034570.jpg" alt="git克隆项目到本地，我选择的加速源：中国浙江"></p><h2 id="第二步：开始配置"><a href="#第二步：开始配置" class="headerlink" title="第二步：开始配置"></a>第二步：开始配置</h2><p><strong>注意：用cmd在pierced根目录下执行命令</strong></p><p>Mac下:</p><p> (1) </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> mac_64</span><br></pre></td></tr></table></figure><p> (2)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./ding -config=./ding.cfg -subdomain=xxxx 8080</span><br><span class="line"><span class="comment">#注意xxxx是你启动命令的subdomain参数有可能被别人占用，尽量不要用常用字符，可以用自己公司名的拼音，例如：alibaba、dingding等。</span></span><br><span class="line"><span class="comment">#xxxx直接关系到你接下来的域名地址默认会生成xxxx.vaiwan.com</span></span><br></pre></td></tr></table></figure><p>Windows下:</p><p> (1) 打开cmd，进入pierced根目录，以我的电脑为例，目录需自己根据实际更改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Users\83423\OneDrive\桌面\pierced <span class="comment">#进入pierced根目录</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108171034571.jpg" alt="进入pierced根目录"></p><p> (2) 因为我是window系统，所以这里我进入windows_64 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> windows_64</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108171034572.jpg" alt="进入windows_64"> </p><p>(3)配置钉钉内网穿透工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ding -config=ding.cfg -subdomain=xxxx 8080</span><br><span class="line"><span class="comment">#注意xxxx是你启动命令的subdomain参数有可能被别人占用，尽量不要用常用字符，可以用自己公司名的拼音，例如：alibaba、dingding等。</span></span><br><span class="line"><span class="comment">#xxxx直接关系到你接下来的域名地址默认会生成xxxx.vaiwan.com</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108171034573.jpg" alt="配置钉钉内网穿透工具"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108171034574.jpg" alt="配置完成"></p><h2 id="第三步：测试"><a href="#第三步：测试" class="headerlink" title="第三步：测试"></a>第三步：测试</h2><p>启动完客户端后，你访问<a href="http://xxxx.vaiwan.com/xx%E9%83%BD%E4%BC%9A%E6%98%A0%E5%B0%84%E5%88%B0">http://xxxx.vaiwan.com/xx都会映射到</a> <a href="http://127.0.0.1:8080/xx">http://127.0.0.1:8080/xx</a></p><p>此时我用IIS创建本地网站，详见<a href="https://www.fatsheep.cn/2021/08/17/Win10%E5%88%A9%E7%94%A8IIS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B9%8BIIS%E7%AE%A1%E7%90%86%E5%99%A8%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE-%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99/">搭建本地网站运行环境之IIS管理器基本设置&amp;创建本地网站 - Fatsheep’s Blog</a></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170838295.png" alt="IIS管理器添加网站"></p><p><strong><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108171034569.jpg" alt="网站配置，需要更改为上述端口,IP地址默认"></strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108171034575.jpg" alt="正常访问http://fatsheeps.vaiwan.com"></p><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><blockquote><ol><li>你需要访问的域名是<a href="http://xxxx.vaiwan.com/xx">http://xxxx.vaiwan.com/xx</a> 而不是<a href="http://xxxx.vaiwan.com:8080/xx">http://xxxx.vaiwan.com:8080/xx</a></li><li>你启动命令的subdomain参数有可能被别人占用，尽量不要用常用字符，可以用自己公司名的拼音，例如：alibaba、dingding等。</li><li>可以在用IIS在本地起个http-server服务，放置一个index.html文件，然后访问<a href="http://xxxx.vaiwan.com测试一下./">http://xxxx.vaiwan.com测试一下。</a></li></ol></blockquote><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><p><a href="https://blog.csdn.net/lyh1299259684/article/details/81941268"> 钉钉内网穿透工具配置_System.o的博客-CSDN博客</a><a href="https://www.fatsheep.cn/2021/08/17/Win10%E5%88%A9%E7%94%A8IIS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B9%8BIIS%E7%AE%A1%E7%90%86%E5%99%A8%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE-%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99/">搭建本地网站运行环境之IIS管理器基本设置&amp;创建本地网站 - Fatsheep’s Blog</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1bi4y1x7yT?from=search&seid=18232175015587904393">没有外网IP不要怕，跨平台内网穿透神器满足你</a></p></li><li><p><a href="https://l1nsn0w.gitee.io/">感谢我的好朋友-L1nSn0w’s Blog</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 内网穿透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IIS </tag>
            
            <tag> 内网穿透 </tag>
            
            <tag> 钉钉内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建本地网站运行环境之IIS管理器基本设置&amp;创建本地网站</title>
      <link href="/2021/08/17/Win10%E5%88%A9%E7%94%A8IIS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B9%8BIIS%E7%AE%A1%E7%90%86%E5%99%A8%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE-%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99/"/>
      <url>/2021/08/17/Win10%E5%88%A9%E7%94%A8IIS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B9%8BIIS%E7%AE%A1%E7%90%86%E5%99%A8%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE-%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>前面有讲到过Win10下安装IIS与相关组件的安装（传送门：<a href="https://www.fatsheep.cn/2021/08/17/Win10%E5%88%A9%E7%94%A8IIS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B9%8BIIS%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E5%AE%89%E8%A3%85/">搭建本地网站运行环境之IIS相关组件安装 - Fatsheep’s Blog</a>，安装完后我们可以通过“Internet Information Services(IIS)管理器”对其进行配置来访问运行指定的网站程序。下面讲解一下IIS管理器的基本设置。</p><h1 id="Internet-Information-Services-IIS-管理器基本设置"><a href="#Internet-Information-Services-IIS-管理器基本设置" class="headerlink" title="Internet Information Services(IIS)管理器基本设置"></a>Internet Information Services(IIS)管理器基本设置</h1><h2 id="打开IIS管理器"><a href="#打开IIS管理器" class="headerlink" title="打开IIS管理器"></a><strong>打开IIS管理器</strong></h2><blockquote><ul><li>方法一：点 <strong>开始菜单</strong>，在程序列表里面找到 <strong>Windows管理工具</strong>，再在管理工具里面找到 <strong>Internet Information Services(IIS)管理器</strong> 打开即可。</li><li>方法二：打开<strong>控制面版</strong>，找到<strong>管理工具</strong>，再在管理工具里面找到 <strong>Internet &gt;Information Services(IIS)管理器</strong> 打开即可。</li><li>方法三：可以在桌面创建其快捷方式（在上面的方法二的管理工具中对图标点右键发送到桌面快捷方式）。</li><li>方法四：运行命令<strong>InetMgr</strong>。（最快捷的，但是需要记住这个命令）</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170800471.jpg" alt="IIS管理器界面"></p><p><strong>IIS管理器分左中右三个大块，左边是服务器目录，中间为功能图标，右边为操作选项（左边、中间选择不同功能是会随之显示相关操作选项）</strong></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a><strong>配置</strong></h2><p>左边最上面显示的是WEB(WEB\Administraotr) 这里因为我的计算机名是WEB，而我当前登陆的账号为Administrator，这里表明的就是服务器的身份，选中后在右边可以控制IIS启动、关闭、重启。以及更改.NET Framerwork版本这里一般都使用比较高的版本，这里使用V4.0。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170800472.png" alt="更改.NET Framerwork版本"></p><h3 id="应用程序池默认值设置"><a href="#应用程序池默认值设置" class="headerlink" title="应用程序池默认值设置"></a><strong>应用程序池默认值设置</strong></h3><p>左边选中应用程序池，然后在右边打开设置应用程序值默认值。如果系统是64位的系统，需要将启用32位应用程序设置为true，否则运行一些网站程序（如ASP）时会出错。其它的可以保持默认。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170800473.png" alt="启用32位应用程序设置为true"></p><h2 id="网站配置"><a href="#网站配置" class="headerlink" title="网站配置"></a><strong>网站配置</strong></h2><ul><li><strong>这里我将默认网站（Default Web Site）先删了以免绑定冲突。</strong></li></ul><h3 id="新建网站"><a href="#新建网站" class="headerlink" title="新建网站"></a><strong>新建网站</strong></h3><p>右键添加网站，设置网站名称（随意，但最好不要用特殊字符），物理路径（即网站内容所在目录），绑定可以不填。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170800474.jpg" alt="添加网站"></p><h3 id="设置默认文档"><a href="#设置默认文档" class="headerlink" title="设置默认文档"></a><strong>设置默认文档</strong></h3><p>点击刚才新建的那个网站，在中间的视图里面找到默认文档。设置默认文档。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170800475.jpg" alt="设置默认文档"></p><p>参看上图：默认文档的意思就是当在地址栏输网址没有带文档时默认读取的文件。如打开<a href="http://127.0.0.1/">http://127.0.0.1</a> 时会自动去目录下面寻找你设置的默认文档，直到所有的默认文档都没有找到i才会返回错误提示。如我们设一个123.html为默认文档，而网站根目录下面也有123.html并且在默认文档最上面，那访问<a href="http://127.0.0.1/">http://127.0.0.1</a> 时就会访问<a href="http://127.0.0.1/123.html">http://127.0.0.1/123.html</a></p><h3 id="编辑权限-设置网站目录读写权限"><a href="#编辑权限-设置网站目录读写权限" class="headerlink" title="编辑权限-设置网站目录读写权限"></a><strong>编辑权限-设置网站目录读写权限</strong></h3><p>如果是本地调试网站此处不需要任何设置（当前登陆账号已经拥有了完全控制权限），但如果是服务器则需要对目录设置Everyone读写权限(当然这样不安全，后面会介绍如何安全设置)。否则会因为没有读写权限而报错。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170800476.png" alt="设置网站目录读写权限"></p><h3 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a><strong>基本设置</strong></h3><p>可以更改网站物理路径与身份验证模式。</p><p>这里介绍一下使用特定账户连接并对网站目录设置该账户的读写权限来提高安全性。</p><ol><li><p>创建一个没有远程连接和管理权限的普通账号（我创建的是test密码123123）。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170800477.jpg" alt="创建一个没有远程连接和管理权限的普通账号"></p></li><li><p>打开网站基本设置，点连接为，选择特定账户，输入账号密码。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170800478.jpg" alt="打开网站基本设置，点连接为，选择特定账户，输入账号密码"></p></li><li><p>对网站目录设置该用户的完全控制权限。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170800479.jpg" alt="对网站目录设置该用户的完全控制权限"></p></li></ol><h3 id="网站绑定设置-绑定域名端口"><a href="#网站绑定设置-绑定域名端口" class="headerlink" title="网站绑定设置-绑定域名端口"></a><strong>网站绑定设置-绑定域名端口</strong></h3><p>设置网站绑定的域名及端口，一般端口都用默认80如果使用非80端口就必须在访问时带上端口（如绑定端口为8080，则访问需要127.0.0.1:8080）。域名绑定的话要保证绑定的域名解悉到了当前计算机公网IP才能够使用域名访问。如服务器公网IP是134.175.5.47，网站绑定了<a href="http://www.100tim.com,并且将www.100tim.com解悉到了134.175.5.47,只有三点都符合了才能够使用www.100tim.com访问网站.(当然域名还必须完成备案)/">www.100tim.com，并且将www.100tim.com解悉到了134.175.5.47，只有三点都符合了才能够使用www.100tim.com访问网站。（当然域名还必须完成备案）</a></p><h1 id="实例演示：建立一个web站点"><a href="#实例演示：建立一个web站点" class="headerlink" title="实例演示：建立一个web站点"></a>实例演示：<strong>建立一个web站点</strong></h1><p>比如我的本机的IP地址为，自己的网页放在E:\shoping目录下，网页的首页文件名为index.html，现在想根据这些建立好自己的Web服务器。对于此Web站点，我们可以用现有的“默认Web站点”来做相应的修改后，就可以轻松实现。</p><ol><li><p>打开iis管理（开始–iis管理）–点击网站右键新增网站</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170838295.png" alt="添加网站"></p></li><li><p>修改绑定的IP地址和端口：这里IP地址默认就好了，该端口是避免冲突，这里端口我改为了888</p></li><li><p>修改物理路径：在物理路径输入好自己网页所在的“E:\shoping”目录。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170838292.jpg" alt="网站配置"></p></li><li><p>添加首页文件名（设置默认文档）：打开默认文档，根据提示在“默认文档名”后输入自己网页的首页文件名，这里我的网站首页是“index.html”，已经默认存在了。我就不添加了。建议将网站首页的优先级跳到最上方。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170838293.jpg" alt="设置默认文档"></p></li><li><p>在浏览器里访问<a href="http://localhost:888/">http://localhost:888</a></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170838294.jpg" alt="成果图"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> IIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IIS </tag>
            
            <tag> 本地搭建网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建本地网站运行环境之IIS相关组件安装</title>
      <link href="/2021/08/17/Win10%E5%88%A9%E7%94%A8IIS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B9%8BIIS%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
      <url>/2021/08/17/Win10%E5%88%A9%E7%94%A8IIS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B9%8BIIS%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="关于IIS"><a href="#关于IIS" class="headerlink" title="关于IIS"></a>关于IIS</h1><blockquote><p>IIS是Internet Information Services的缩写，是一个World Wide Web server。Gopher server和FTP server全部包容在里面。 IIS意味着你能发布网页，<span id="more"></span>并且有ASP（Active Server Pages）、JAVA、VBscript产生页面，有着一些扩展功能。IIS支持一些有趣的东西，象有编辑环境的界面（FRONTPAGE）、有全文检 索功能的（INDEX SERVER）、有多媒体功能的（NET SHOW） 其次,IIS是随Windows NT Server 4.0一起提供的文件和应用程序服务器，是在Windows NT Server上建立Internet服务器的基本组件。它与Windows NT Server完全集成，允许使用Windows NT Server内置的安全性以及NTFS文件系统建立强大灵活的Internet／Intranet站点。IIS（Internet Information Server，互联网信息服务）是一种Web（网页）服务组件，其中包括Web服务器、FTP服务器、NNTP服务器和SMTP服务器，分别用于网页浏 览、文件传输、新闻服务和邮件发送等方面，它使得在网络（包括互联网和局域网）上发布信息成了一件很容易的事。</p></blockquote><hr><h1 id="安装IIS"><a href="#安装IIS" class="headerlink" title="安装IIS"></a>安装IIS</h1><h2 id="首先：安装-NET"><a href="#首先：安装-NET" class="headerlink" title="首先：安装.NET"></a>首先：安装.NET</h2><ul><li>因为很多情况下都需要NET框架，所以最好还是将net框架安装好。</li></ul><blockquote><ol><li><p>打开搜索，输入启用或关闭 Windows 功能，找到并打开。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708107.jpg" alt="打开搜索，输入启用或关闭 Windows 功能"></p></li><li><p>找到.NET Framework3.5和.NET Framework4.8，勾选3.5和4.8的默认复选框，再将ASP.NET4.8勾也一同选上。具体如下图所示。等其安装完成（这个过程需要联网支持下载文件）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708104.jpg" alt=".NET Framework3.5和.NET Framework4.8"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708097.png" alt="等待完成"></p></li></ol></blockquote><h2 id="接着：安装IIS（Internet-Information-Services）"><a href="#接着：安装IIS（Internet-Information-Services）" class="headerlink" title="接着：安装IIS（Internet Information Services）"></a>接着：安装IIS（Internet Information Services）</h2><blockquote><ol><li>和上面一样的方法–&gt;打开搜索，输入启用或关闭 Windows 功能，找到并打开。</li></ol><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708107.jpg" alt="打开搜索，输入启用或关闭 Windows 功能"></p><ol start="2"><li>找到Internet Information Services并勾选复选框，具体参看下图：（主要是应用程序开发功能相&gt;&gt;关选项）</li></ol><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708106.jpg" alt="找到Internet Information Services并勾选复选框"></p><ol start="3"><li>和上面安装NET环境一样等其完成安装即可。</li></ol><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708097.png" alt="等待完成"></p><ol start="4"><li>待安装完成后在浏览器里面输入<a href="http://127.0.0.1/">http://127.0.0.1</a> 能打开IIS起始页便是安装成功了。</li></ol><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708098.png" alt="IIS初始页"></p></blockquote><h2 id="最后：安装web平台组件与URL重写组件"><a href="#最后：安装web平台组件与URL重写组件" class="headerlink" title="最后：安装web平台组件与URL重写组件"></a>最后：安装web平台组件与URL重写组件</h2><blockquote><ol><li>打开 控制面版👉管理工具 👉Internet Information Services (IIS)管理器（快捷运行命令：<strong>win+R运行：InetMgr</strong>)</li></ol><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708099.jpg" alt="IIS管理器"></p><ol start="2"><li>点击右边的获取新的Web平台组件，在打开的网页里面下载安装（默认安装就可以了）</li></ol><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708100.jpg" alt="下载安装"></p><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708101.png" alt="默认设置，安装完成"></p><ol start="3"><li>安装完成后，在Internet Information Services (IIS)管理器里面就能看到Web平台安装程序。</li></ol><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708102.jpg" alt="出现Web平台安装程序"></p><ol start="4"><li>接一来通过Web平台安装程序安装URL重写组件（因为现在很多规则都是通过RUL重写，如伪静态、301跳转等，所以这个组件是必须安装的），点开Web平台安装程序，在搜索框里面搜url找到URL重写工具2.0，点添加后再点安装，默认安装即可。</li></ol><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108170708103.jpg" alt="Web平台安装程序"></p><ol start="5"><li>安装完成后，重新打开Internet Information Services (IIS)管理器就能看到URL重写图标了。</li></ol><ul><li>当然Url重写可以直接下载单独安装。但有可能会出错所以还是建议使用Web平台组件来安装，能保证安全性与稳定性。</li><li>到这里IIS的安装就基本完成。</li></ul></blockquote><hr><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><p><a href="https://baike.baidu.com/item/IIS%207.0/5826890?fr=aladdin">百度百科-IIS 7.0</a></p></li><li><p><a href="https://www.100tim.com/article/view_57.html">IIS环境配置</a></p></li><li><p><a href="https://blog.csdn.net/qq_44102678/article/details/104148348?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162914928316780271523932%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162914928316780271523932&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-2-104148348.first_rank_v2_pc_rank_v29&utm_term=IIS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%AB%99%E7%82%B9&spm=1018.2226.3001.4187">IIS搭建本地站点</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> IIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IIS </tag>
            
            <tag> 本地网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Subsystem for Linux（简称WSL）</title>
      <link href="/2021/08/15/Windows-Subsystem-for-Linux%EF%BC%88%E7%AE%80%E7%A7%B0WSL%EF%BC%89/"/>
      <url>/2021/08/15/Windows-Subsystem-for-Linux%EF%BC%88%E7%AE%80%E7%A7%B0WSL%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="windows下的Linux子系统→WSL"><a href="#windows下的Linux子系统→WSL" class="headerlink" title="windows下的Linux子系统→WSL"></a><strong>windows下的Linux子系统</strong>→WSL</h1><h2 id="关于WSL"><a href="#关于WSL" class="headerlink" title="关于WSL"></a>关于WSL</h2><blockquote><p>WSL，Windows Subsystem for Linux，windows下的Linux子系统，就是之前的Bash on [Ubuntu on] Windows（嗯，微软改名部KPI++），它是一个为在Windows 10上能够原生运行Linux二进制可执行文件（ELF格式）的兼容层。我们可以很方便地在Windows 10上面进行Linux操作。</p></blockquote><span id="more"></span><h2 id="WSL-安装方法"><a href="#WSL-安装方法" class="headerlink" title="WSL 安装方法"></a>WSL 安装方法</h2><ol><li><p>打开搜索框输入启用或关闭Windows功能，打开。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737909.jpg" alt="搜索框输入启用或关闭Windows功能，打开"></p></li><li><p>找到适用于Linux的Windows子系统并勾选，确定。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737926.jpg" alt="找到适合于Linux的Windows子系统并勾选，确定"></p></li><li><p>等待系统应用更改。之后需要重启完成修改。保存电脑上的工作，重启。</p></li><li><p>打开微软商店，搜索wsl，选择自己喜欢的Linux发行版进行下载安装即可。</p></li><li><p>这里我选择的的Ubuntu 20.04 LTS。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161744283.jpg" alt="Ubuntu 20.04 LTS"></p></li></ol><h2 id="设置普通用户和root用户"><a href="#设置普通用户和root用户" class="headerlink" title="设置普通用户和root用户"></a>设置普通用户和root用户</h2><ol><li><p>初次打开Ubuntu需等待片刻，直至出现让输入用户名。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737916.jpg" alt="第一次运行界面，等待几分钟"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737912.jpg" alt="设置用户名时含大写字母会报错"></p></li><li><p>根据提示输入用户名,两次输入密码就可以看见熟悉的命令行。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737913.jpg" alt="大写F改为小写之后正常"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737911.jpg" alt="设置完成之后出现命令提示符"></p></li><li><p>输入sudo passwd root，然后先输入刚刚设置的用户密码,然后两次输入要设置的root用户密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737914.jpg" alt="为Root用户设置密码"></p></li></ol><blockquote><p>友情提示：</p><ul><li>用户名不允许大写，如果有大写字母会报错。</li><li>输入密码的时候是什么都不显示的，放心输入就行。</li></ul></blockquote><h2 id="Ubuntu-20-04-更换-apt-源-amp-更新软件"><a href="#Ubuntu-20-04-更换-apt-源-amp-更新软件" class="headerlink" title="Ubuntu 20.04 更换 apt 源&amp;更新软件"></a>Ubuntu 20.04 更换 apt 源&amp;更新软件</h2><ol><li><p>备份<code>/etc/apt/sources.list</code> 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.back</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737918.jpg" alt="复制命令，回车之后输入用户密码来启用管理员身份执行命令"></p></li><li><p>编辑/etc/apt/sources.list文件，选择一个国内apt源覆盖 sources.list 中的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737919.jpg" alt="Vim编辑文件，删除原本的配置"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737920.jpg" alt="选一个国内的apt源换上，保存"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#阿里源</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#清华源</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 预发布软件源，不建议启用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#网易源</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#中科大源</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></li><li><p>更新源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737921.jpg" alt="更新apt源的界面"></p></li><li><p>更新软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737922.jpg" alt="更新软件界面"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161737923.jpg" alt="过程中会出现是否继续，输入y确认继续"></p></li></ol><p>友情提示</p><ul><li>更新源的过程中有可能会报错，重新执行即可(404可以无视)</li><li>更新软件需要等待的时间稍微偏长，且过程中需要根据提示是否继续输入y选择继续。</li><li>sudo是声明以管理员身份执行命令，如果处在root则不需要。</li><li>更换源文件内容的时候用到了vim编辑器，后续会出vim教程，建议先百度vim常用命令。</li></ul><h2 id="WSL-下-Ubuntu-20-04-中文显示设置"><a href="#WSL-下-Ubuntu-20-04-中文显示设置" class="headerlink" title="WSL 下 Ubuntu 20.04 中文显示设置"></a>WSL 下 Ubuntu 20.04 中文显示设置</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>系统：*<strong>Windows 10 Pro ×64*</strong></li><li>子系统：*<strong>Ubuntu 20.04 LTS*</strong></li></ul><h3 id="安装语言包"><a href="#安装语言包" class="headerlink" title="安装语言包"></a>安装语言包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install language-pack-zh-hans</span><br></pre></td></tr></table></figure><h3 id="设置-locale"><a href="#设置-locale" class="headerlink" title="设置 locale"></a>设置 locale</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/locale.gen</span><br></pre></td></tr></table></figure><p>找到 <strong>zh_CN.UTF-8 UTF-8</strong> 并取消注释，然后保存并退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment"># zh_CN.GBK GBK</span></span><br><span class="line">zh_CN.UTF-8 UTF-8</span><br><span class="line"><span class="comment"># zh_HK BIG5-HKSCS</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="编译语言"><a href="#编译语言" class="headerlink" title="编译语言"></a>编译语言</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo locale-gen</span><br><span class="line">Generating locales (this might take a <span class="keyword">while</span>)...</span><br><span class="line">  en_US.UTF-8... <span class="keyword">done</span></span><br><span class="line">  zh_CN.UTF-8... <span class="keyword">done</span></span><br><span class="line">  zh_SG.UTF-8... <span class="keyword">done</span></span><br><span class="line">Generation complete.</span><br></pre></td></tr></table></figure><h3 id="设置默认语言为中文"><a href="#设置默认语言为中文" class="headerlink" title="设置默认语言为中文"></a>设置默认语言为中文</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/default/locale</span><br></pre></td></tr></table></figure><p>将内容修改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LANG=zh_CN.UTF-8</span><br></pre></td></tr></table></figure><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>开启新的终端或者重新启动Ubuntu即可生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">[sudo] fatsheep 的密码：</span><br><span class="line">命中:1 http://mirrors.aliyun.com/ubuntu focal InRelease</span><br><span class="line">命中:2 http://mirrors.aliyun.com/ubuntu focal-security InRelease</span><br><span class="line">命中:3 http://mirrors.aliyun.com/ubuntu focal-updates InRelease</span><br><span class="line">命中:4 http://mirrors.aliyun.com/ubuntu focal-proposed InRelease</span><br><span class="line">命中:5 http://mirrors.aliyun.com/ubuntu focal-backports InRelease</span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树</span><br><span class="line">正在读取状态信息... 完成</span><br><span class="line">所有软件包均为最新。</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://jingyan.baidu.com/article/e4d08ffd5849e20fd2f60d93.html">点击飞往✈wsl安装方法</a></li><li><a href="https://jingyan.baidu.com/article/925f8cb8d11603c0dde0563a.html">点击飞往✈Linux设置root账户</a></li><li><a href="https://www.cnblogs.com/dzlua/p/12965380.html">点击飞往✈Linux更换apt源</a></li><li><a href="https://blog.csdn.net/Gelomen/article/details/109522530">点击飞往✈WSL 下 Ubuntu 20.04 中文显示设置</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>品优购代码规范</title>
      <link href="/2021/08/14/%E5%93%81%E4%BC%98%E8%B4%AD%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/"/>
      <url>/2021/08/14/%E5%93%81%E4%BC%98%E8%B4%AD%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h1 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>欢迎使用品优购代码规范， 这个是借鉴京东前端代码规范，组织的品优购内部规范。</p><span id="more"></span><p>旨在增强团队开发协作、提高代码质量和打造开发基石的编码规范，</p><p>以下规范是团队基本约定的内容，必须严格遵循。</p><h4 id="HTML规范"><a href="#HTML规范" class="headerlink" title="HTML规范"></a>HTML规范</h4><p>基于 <a href="http://www.w3.org/">W3C</a>、<a href="https://developer.apple.com/">苹果开发者</a> 等官方文档，并结合团队业务和开发过程中总结的规范约定，让页面HTML代码更具语义性。</p><h4 id="图片规范"><a href="#图片规范" class="headerlink" title="图片规范"></a>图片规范</h4><p>了解各种图片格式特性，根据特性制定图片规范，包括但不限于图片的质量约定、图片引入方式、图片合并处理等，旨在从图片层面优化页面性能。</p><h4 id="CSS规范"><a href="#CSS规范" class="headerlink" title="CSS规范"></a>CSS规范</h4><p>统一规范团队 CSS 代码书写风格和使用 CSS 预编译语言语法风格，提供常用媒体查询语句和浏览器私有属性引用，并从业务层面统一规范常用模块的引用。</p><h4 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h4><p>从 <code>目录</code>、<code>图片</code>、<code>HTML/CSS文件</code>、<code>ClassName</code> 的命名等层面约定规范团队的命名习惯，增强团队代码的可读性。</p><h2 id="2-HTML-规范"><a href="#2-HTML-规范" class="headerlink" title="2. HTML 规范"></a>2. HTML 规范</h2><h3 id="DOCTYPE-声明"><a href="#DOCTYPE-声明" class="headerlink" title="DOCTYPE 声明"></a>DOCTYPE 声明</h3><p>HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>HTML5标准模版</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML5标准模版<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="页面语言lang"><a href="#页面语言lang" class="headerlink" title="页面语言lang"></a>页面语言lang</h3><p>推荐使用属性值 <code>cmn-Hans-CN</code>（简体, 中国大陆），但是考虑浏览器和操作系统的兼容性，目前仍然使用 <code>zh-CN</code> 属性值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br></pre></td></tr></table></figure><p>更多地区语言参考：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zh-SG 中文 (简体, 新加坡)   对应 cmn-Hans-SG 普通话 (简体, 新加坡)</span><br><span class="line">zh-HK 中文 (繁体, 香港)     对应 cmn-Hant-HK 普通话 (繁体, 香港)</span><br><span class="line">zh-MO 中文 (繁体, 澳门)     对应 cmn-Hant-MO 普通话 (繁体, 澳门)</span><br><span class="line">zh-TW 中文 (繁体, 台湾)     对应 cmn-Hant-TW 普通话 (繁体, 台湾)</span><br></pre></td></tr></table></figure><h3 id="charset-字符集合"><a href="#charset-字符集合" class="headerlink" title="charset 字符集合"></a>charset 字符集合</h3><p>一般情况下统一使用 “UTF-8” 编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br></pre></td></tr></table></figure><p>由于历史原因，有些业务可能会使用 “GBK” 编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=&quot;GBK&quot;&gt;</span><br></pre></td></tr></table></figure><p>请尽量统一写成标准的 “UTF-8”，不要写成 “utf-8” 或 “utf8” 或 “UTF8”。根据 <a href="http://www.ietf.org/rfc/rfc3629">IETF对UTF-8的定义</a>，其编码标准的写法是 “UTF-8”；而 UTF8 或 utf8 的写法只是出现在某些编程系统中，如 .NET framework 的类 System.Text.Encoding 中的一个属性名就叫 UTF8。</p><h3 id="书写风格"><a href="#书写风格" class="headerlink" title="书写风格"></a>书写风格</h3><h4 id="HTML代码大小写"><a href="#HTML代码大小写" class="headerlink" title="HTML代码大小写"></a>HTML代码大小写</h4><p>HTML标签名、类名、标签属性和大部分属性值统一用小写</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;demo&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;DEMO&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;DIV CLASS=&quot;DEMO&quot;&gt;&lt;/DIV&gt;</span><br></pre></td></tr></table></figure><h3 id="类型属性"><a href="#类型属性" class="headerlink" title="类型属性"></a>类型属性</h3><p>不需要为 CSS、JS 指定类型属性，HTML5 中默认已包含</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;&quot; &gt;</span><br><span class="line">&lt;script src=&quot;&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&quot; &gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;&quot; &gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="元素属性"><a href="#元素属性" class="headerlink" title="元素属性"></a>元素属性</h3><ul><li>元素属性值使用双引号语法</li><li>元素属性值可以写上的都写上</li></ul><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot;&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;name&quot; checked=&quot;checked&quot; &gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=text&gt;</span><br><span class="line">&lt;input type=&#x27;text&#x27;&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;name&quot; checked &gt;</span><br></pre></td></tr></table></figure><h3 id="特殊字符引用"><a href="#特殊字符引用" class="headerlink" title="特殊字符引用"></a>特殊字符引用</h3><p>文本可以和字符引用混合出现。这种方法可以用来转义在文本中不能合法出现的字符。</p><p>在 HTML 中不能使用小于号 “&lt;” 和大于号 “&gt;”特殊字符，浏览器会将它们作为标签解析，若要正确显示，在 HTML 源代码中使用字符实体</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot;&gt;more&amp;gt;&amp;gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot;&gt;more&gt;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="代码缩进"><a href="#代码缩进" class="headerlink" title="代码缩进"></a>代码缩进</h3><p>统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;jdc&quot;&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="代码嵌套"><a href="#代码嵌套" class="headerlink" title="代码嵌套"></a>代码嵌套</h3><p>元素嵌套规范，每个块状元素独立一行，内联元素可选</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;p&gt; </span><br><span class="line">    &lt;span&gt;&lt;/span&gt;</span><br><span class="line">    &lt;span&gt;&lt;/span&gt;</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>段落元素与标题元素只能嵌套内联元素</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;&lt;span&gt;&lt;/span&gt;&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;&lt;div&gt;&lt;/div&gt;&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><h2 id="3-图片规范"><a href="#3-图片规范" class="headerlink" title="3. 图片规范"></a>3. 图片规范</h2><h3 id="内容图"><a href="#内容图" class="headerlink" title="内容图"></a>内容图</h3><p>内容图多以商品图等照片类图片形式存在，颜色较为丰富，文件体积较大</p><ul><li>优先考虑 JPEG 格式，条件允许的话优先考虑 WebP 格式</li><li>尽量不使用PNG格式，PNG8 色位太低，PNG24 压缩率低，文件体积大</li><li><strong>PC平台单张的图片的大小不应大于 200KB。</strong></li></ul><h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>背景图多为图标等颜色比较简单、文件体积不大、起修饰作用的图片</p><ul><li>PNG 与 GIF 格式，优先考虑使用 PNG 格式,PNG格式允许更多的颜色并提供更好的压缩率</li><li>图像颜色比较简单的，如纯色块线条图标，优先考虑使用 PNG8 格式，避免不使用 JPEG 格式</li><li>图像颜色丰富而且图片文件不太大的（40KB 以下）或有半透明效果的优先考虑 PNG24 格式</li><li>图像颜色丰富而且文件比较大的（40KB - 200KB）优先考虑 JPEG 格式</li><li>条件允许的，优先考虑 WebP 代替 PNG 和 JPEG 格式</li></ul><h2 id="4-CSS规范"><a href="#4-CSS规范" class="headerlink" title="4. CSS规范"></a>4. CSS规范</h2><h3 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h3><p>样式书写一般有两种：一种是紧凑格式 (Compact)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.jdc&#123; display: block;width: 50px;&#125;</span><br></pre></td></tr></table></figure><p>一种是展开格式（Expanded）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 50px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>团队约定</strong></p><p>统一使用展开格式书写样式</p><h3 id="代码大小写"><a href="#代码大小写" class="headerlink" title="代码大小写"></a>代码大小写</h3><p>样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/* 推荐 */</span><br><span class="line">.jdc&#123;</span><br><span class="line">display:block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 不推荐 */</span><br><span class="line">.JDC&#123;</span><br><span class="line">DISPLAY:BLOCK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><ul><li>尽量少用通用选择器 <code>*</code></li><li>不使用 ID 选择器</li><li>不使用无具体语义定义的标签选择器</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.jdc</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.jdc</span> <span class="selector-tag">li</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.jdc</span> <span class="selector-tag">li</span> <span class="selector-tag">p</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line">*&#123;&#125;</span><br><span class="line"><span class="selector-id">#jdc</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.jdc</span> <span class="selector-tag">div</span>&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="代码缩进-1"><a href="#代码缩进-1" class="headerlink" title="代码缩进"></a>代码缩进</h3><p>统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h3><p>每个属性声明末尾都要加分号；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码易读性"><a href="#代码易读性" class="headerlink" title="代码易读性"></a>代码易读性</h3><p>左括号与类名之间一个空格，冒号与属性值之间一个空格</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123; </span><br><span class="line">    width: 100%; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.jdc&#123; </span><br><span class="line">    width:100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>逗号分隔的取值，逗号之后一个空格</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    box-shadow: 1px 1px 1px #333, 2px 2px 2px #ccc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    box-shadow: 1px 1px 1px #333,2px 2px 2px #ccc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为单个css选择器或新申明开启新行</p><p><em>推荐：</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span>, </span><br><span class="line"><span class="selector-class">.jdc_logo</span>, </span><br><span class="line"><span class="selector-class">.jdc_hd</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span>,jdc_logo,<span class="selector-class">.jdc_hd</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff0</span>;</span><br><span class="line">&#125;<span class="selector-class">.nav</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>颜色值 <code>rgb()</code> <code>rgba()</code> <code>hsl()</code> <code>hsla()</code> <code>rect()</code> 中不需有空格，且取值不要带有不必要的 0</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    color: rgba(255,255,255,.5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    color: rgba( 255, 255, 255, 0.5 );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>属性值十六进制数值能用简写的尽量用简写</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    color: #fff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不要为 <code>0</code> 指明单位</p><p><em>推荐：</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="属性值引号"><a href="#属性值引号" class="headerlink" title="属性值引号"></a>属性值引号</h3><p>css属性值需要用到引号时，统一使用单引号</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.jdc</span> &#123; </span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&#x27;Hiragino Sans GB&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-class">.jdc</span> &#123; </span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;Hiragino Sans GB&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="属性书写顺序"><a href="#属性书写顺序" class="headerlink" title="属性书写顺序"></a>属性书写顺序</h3><p>建议遵循以下顺序：</p><ol><li>布局定位属性：display / position / float / clear / visibility / overflow（建议 display 第一个写，毕竟关系到模式）</li><li>自身属性：width / height / margin / padding / border / background</li><li>文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word</li><li>其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, <span class="string">&#x27;Helvetica Neue&#x27;</span>, Helvetica, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">    -webkit-<span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    -moz-<span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    -o-<span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    -ms-<span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.mozilla.org/css/base/content.css">mozilla官方属性顺序推荐</a></p><h2 id="命名规范-1"><a href="#命名规范-1" class="headerlink" title="命名规范"></a>命名规范</h2><p>由历史原因及个人习惯引起的 DOM 结构、命名不统一，导致不同成员在维护同一页面时，效率低下，迭代、维护成本极高。</p><h3 id="目录命名"><a href="#目录命名" class="headerlink" title="目录命名"></a>目录命名</h3><ul><li>项目文件夹：shoping</li><li>样式文件夹：css</li><li>脚本文件夹：js</li><li>样式类图片文件夹：img</li><li>产品类图片文件夹： upload</li><li>字体类文件夹： fonts</li></ul><h3 id="ClassName命名"><a href="#ClassName命名" class="headerlink" title="ClassName命名"></a>ClassName命名</h3><p>ClassName的命名应该尽量精短、明确，必须以<strong>字母开头命名</strong>，且<strong>全部字母为小写</strong>，单词之间<strong>统一使用下划线</strong> “_” 连接</p><p>.nav_top</p><h4 id="常用命名推荐"><a href="#常用命名推荐" class="headerlink" title="常用命名推荐"></a>常用命名推荐</h4><p><strong>注意</strong>：ad、banner、gg、guanggao 等有机会和广告挂勾的不建议直接用来做ClassName，因为有些浏览器插件（Chrome的广告拦截插件等）会直接过滤这些类名，因此</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;ad&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>这种广告的英文或拼音类名不应该出现</p><p>另外，<strong>敏感不和谐字眼</strong>也不应该出现，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;fuck&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;jer&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;sm&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;gcd&quot;&gt;&lt;/div&gt; </span><br><span class="line">&lt;div class=&quot;ass&quot;&gt;&lt;/div&gt; </span><br><span class="line">&lt;div class=&quot;KMT&quot;&gt;&lt;/div&gt; </span><br><span class="line">...</span><br></pre></td></tr></table></figure><table><thead><tr><th>ClassName</th><th>含义</th></tr></thead><tbody><tr><td>about</td><td>关于</td></tr><tr><td>account</td><td>账户</td></tr><tr><td>arrow</td><td>箭头图标</td></tr><tr><td>article</td><td>文章</td></tr><tr><td>aside</td><td>边栏</td></tr><tr><td>audio</td><td>音频</td></tr><tr><td>avatar</td><td>头像</td></tr><tr><td>bg,background</td><td>背景</td></tr><tr><td>bar</td><td>栏（工具类）</td></tr><tr><td>branding</td><td>品牌化</td></tr><tr><td>crumb,breadcrumbs</td><td>面包屑</td></tr><tr><td>btn,button</td><td>按钮</td></tr><tr><td>caption</td><td>标题，说明</td></tr><tr><td>category</td><td>分类</td></tr><tr><td>chart</td><td>图表</td></tr><tr><td>clearfix</td><td>清除浮动</td></tr><tr><td>close</td><td>关闭</td></tr><tr><td>col,column</td><td>列</td></tr><tr><td>comment</td><td>评论</td></tr><tr><td>community</td><td>社区</td></tr><tr><td>container</td><td>容器</td></tr><tr><td>content</td><td>内容</td></tr><tr><td>copyright</td><td>版权</td></tr><tr><td>current</td><td>当前态，选中态</td></tr><tr><td>default</td><td>默认</td></tr><tr><td>description</td><td>描述</td></tr><tr><td>details</td><td>细节</td></tr><tr><td>disabled</td><td>不可用</td></tr><tr><td>entry</td><td>文章，博文</td></tr><tr><td>error</td><td>错误</td></tr><tr><td>even</td><td>偶数，常用于多行列表或表格中</td></tr><tr><td>fail</td><td>失败（提示）</td></tr><tr><td>feature</td><td>专题</td></tr><tr><td>fewer</td><td>收起</td></tr><tr><td>field</td><td>用于表单的输入区域</td></tr><tr><td>figure</td><td>图</td></tr><tr><td>filter</td><td>筛选</td></tr><tr><td>first</td><td>第一个，常用于列表中</td></tr><tr><td>footer</td><td>页脚</td></tr><tr><td>forum</td><td>论坛</td></tr><tr><td>gallery</td><td>画廊</td></tr><tr><td>group</td><td>模块，清除浮动</td></tr><tr><td>header</td><td>页头</td></tr><tr><td>help</td><td>帮助</td></tr><tr><td>hide</td><td>隐藏</td></tr><tr><td>hightlight</td><td>高亮</td></tr><tr><td>home</td><td>主页</td></tr><tr><td>icon</td><td>图标</td></tr><tr><td>info,information</td><td>信息</td></tr><tr><td>last</td><td>最后一个，常用于列表中</td></tr><tr><td>links</td><td>链接</td></tr><tr><td>login</td><td>登录</td></tr><tr><td>logout</td><td>退出</td></tr><tr><td>logo</td><td>标志</td></tr><tr><td>main</td><td>主体</td></tr><tr><td>menu</td><td>菜单</td></tr><tr><td>meta</td><td>作者、更新时间等信息栏，一般位于标题之下</td></tr><tr><td>module</td><td>模块</td></tr><tr><td>more</td><td>更多（展开）</td></tr><tr><td>msg,message</td><td>消息</td></tr><tr><td>nav,navigation</td><td>导航</td></tr><tr><td>next</td><td>下一页</td></tr><tr><td>nub</td><td>小块</td></tr><tr><td>odd</td><td>奇数，常用于多行列表或表格中</td></tr><tr><td>off</td><td>鼠标离开</td></tr><tr><td>on</td><td>鼠标移过</td></tr><tr><td>output</td><td>输出</td></tr><tr><td>pagination</td><td>分页</td></tr><tr><td>pop,popup</td><td>弹窗</td></tr><tr><td>preview</td><td>预览</td></tr><tr><td>previous</td><td>上一页</td></tr><tr><td>primary</td><td>主要</td></tr><tr><td>progress</td><td>进度条</td></tr><tr><td>promotion</td><td>促销</td></tr><tr><td>rcommd,recommendations</td><td>推荐</td></tr><tr><td>reg,register</td><td>注册</td></tr><tr><td>save</td><td>保存</td></tr><tr><td>search</td><td>搜索</td></tr><tr><td>secondary</td><td>次要</td></tr><tr><td>section</td><td>区块</td></tr><tr><td>selected</td><td>已选</td></tr><tr><td>share</td><td>分享</td></tr><tr><td>show</td><td>显示</td></tr><tr><td>sidebar</td><td>边栏，侧栏</td></tr><tr><td>slide</td><td>幻灯片，图片切换</td></tr><tr><td>sort</td><td>排序</td></tr><tr><td>sub</td><td>次级的，子级的</td></tr><tr><td>submit</td><td>提交</td></tr><tr><td>subscribe</td><td>订阅</td></tr><tr><td>subtitle</td><td>副标题</td></tr><tr><td>success</td><td>成功（提示）</td></tr><tr><td>summary</td><td>摘要</td></tr><tr><td>tab</td><td>标签页</td></tr><tr><td>table</td><td>表格</td></tr><tr><td>txt,text</td><td>文本</td></tr><tr><td>thumbnail</td><td>缩略图</td></tr><tr><td>time</td><td>时间</td></tr><tr><td>tips</td><td>提示</td></tr><tr><td>title</td><td>标题</td></tr><tr><td>video</td><td>视频</td></tr><tr><td>wrap</td><td>容器，包，一般用于最外层</td></tr><tr><td>wrapper</td><td>容器，包，一般用于最外层</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
            <tag> b站pink老师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adobe白嫖教程 持续更新版</title>
      <link href="/2021/08/13/Adoble/"/>
      <url>/2021/08/13/Adoble/</url>
      
        <content type="html"><![CDATA[<h1 id="vposy大神制作的简体中文版Adobe-20201全家桶"><a href="#vposy大神制作的简体中文版Adobe-20201全家桶" class="headerlink" title="vposy大神制作的简体中文版Adobe 20201全家桶"></a><strong>vposy大神制作的简体中文版Adobe 20201全家桶</strong></h1><h2 id="Vposy大神介绍"><a href="#Vposy大神介绍" class="headerlink" title="Vposy大神介绍"></a>Vposy大神介绍</h2><p>你还在从某宝、某度获取<strong>Adobe全家桶</strong>吗？ 其实这些东西的根本来源基本都是来自微博大神Vposy！</p><span id="more"></span><p>啥，你还没听过Vposy？那还不快去微博给<strong>Vposy大神</strong>点个关注，支持一波！</p><hr><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161659054.jpg" alt="大神vposy微博主页"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161659055.jpg" alt="大神vposy微博"></p><h2 id="网盘部分截图"><a href="#网盘部分截图" class="headerlink" title="网盘部分截图"></a>网盘部分截图</h2><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161659056.jpg" alt="Adobe百度网盘资源"></p><h2 id="网盘链接"><a href="#网盘链接" class="headerlink" title="网盘链接"></a>网盘链接</h2><ul><li><p><a href="https://pan.baidu.com/s/1QdxWG7munmiQ9q03JMZ0ZA">百度网盘</a>：（提取码:ap700）</p></li><li><p><a href="https://cloud.189.cn/web/share?code=ArARVrU3I3In">天翼网盘</a>：（访问码：5nls）</p></li></ul><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p><em>说明：解压密码@vposy，SP版为独立原版，大师版为全家桶。</em></p><hr><h2 id="温馨提示"><a href="#温馨提示" class="headerlink" title="温馨提示"></a>温馨提示</h2><p>温馨提示：着急的朋友可以去关于页面✈<a href="https://www.fatsheep.cn/about/">关于</a>获取我滴联系方式哦 嘿嘿~~~</p>]]></content>
      
      
      <categories>
          
          <category> Adobe </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Adobe </tag>
            
            <tag> Vposy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10笔记本触摸板教学附新增桌面来摸鱼</title>
      <link href="/2021/08/13/Win10%E7%AC%94%E8%AE%B0%E6%9C%AC%E8%A7%A6%E6%91%B8%E6%9D%BF%E6%95%99%E5%AD%A6/"/>
      <url>/2021/08/13/Win10%E7%AC%94%E8%AE%B0%E6%9C%AC%E8%A7%A6%E6%91%B8%E6%9D%BF%E6%95%99%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="win10触控板多指触控、手势操作教程-amp-新增虚拟桌面"><a href="#win10触控板多指触控、手势操作教程-amp-新增虚拟桌面" class="headerlink" title="win10触控板多指触控、手势操作教程&amp;新增虚拟桌面"></a>win10触控板多指触控、手势操作教程&amp;新增虚拟桌面</h1><blockquote><p>触摸板实用性很高，可以在没有鼠标的情况下，也能快速去操作电脑，在有鼠标操作的情况下，还能辅助鼠标进行快捷操作，是一些很实用的功能，希望大家了解并去尝试一下。</p></blockquote><span id="more"></span><h2 id="先说一下触摸板失灵的情况"><a href="#先说一下触摸板失灵的情况" class="headerlink" title="先说一下触摸板失灵的情况"></a>先说一下触摸板失灵的情况</h2><h3 id="情况1"><a href="#情况1" class="headerlink" title="情况1"></a>情况1</h3><blockquote><p>触摸板明明前一阵子可以使用的，但是过了一阵子无论怎么按都没有反应了？这个是什么情况？</p><ul><li><p>首先通过win10设置，看一下触摸板是不是已经开启了，还没开启，开启就好了。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805602.jpg" alt="win10触摸板开关"></p></li><li><p>如果确认开启后还是无法使用可能是触摸板的驱动出现问题了，尝试在品牌官网下载最新版驱动，重装修复安装。不懂得可以用驱动精灵、驱动人生等。</p></li></ul></blockquote><h3 id="情况2"><a href="#情况2" class="headerlink" title="情况2"></a>情况2</h3><blockquote><p>触摸板用一根手指操作没有问题，但是用几根手指，操作就会时灵时不灵，这个是什么情况？</p><ul><li>这个其实和我们人的手指有关，每个人手指的长相都是不同的，由于长短问题会影响和触摸板的接触，造成“失灵”的情况，其实只要手指稍微分开、弯曲去操作，或者尝试使用其他手指组合操作就行了。</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805591.jpg"></p><h2 id="接下来就说一下现在的win10触摸板，不同指头操作可以实现的功能。"><a href="#接下来就说一下现在的win10触摸板，不同指头操作可以实现的功能。" class="headerlink" title="接下来就说一下现在的win10触摸板，不同指头操作可以实现的功能。"></a>接下来就说一下现在的win10触摸板，不同指头操作可以实现的功能。</h2><ul><li><strong>友情提示：以下均是win10触控板默认设置，且不同品牌笔记本可能会有差异，请以实际为准。</strong></li></ul><h3 id="一、单指操作"><a href="#一、单指操作" class="headerlink" title="一、单指操作"></a>一、单指操作</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805590.jpg" alt="单指操作，图片来自百度经验"></p><ol><li>单指轻触等于鼠标左键，可以用来选择及打开文件。</li><li>单指双击后不松开则等于长按鼠标左键，可以通过此操作拖动文件与窗口，选择性复制文字。</li></ol><h3 id="二、双指操作"><a href="#二、双指操作" class="headerlink" title="二、双指操作"></a>二、双指操作</h3><ol><li><p>双指轻触相当于鼠标右键，搭配单指轻触可以轻易完成复制粘贴以及桌面的刷新。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805585.jpg" alt="双指轻触"></p></li><li><p>双指上下滑动，则相当于鼠标的滚轮，方便我们浏览网页。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805592.jpg" alt="双指上下滑动，相当于鼠标的滚轮"></p></li><li><p>双指同时向左 / 右划滑，用于浏览图片时，向左或者向右划图片的功能</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805588.jpg" alt="双指左右滑动，用于浏览图片时左右划图"></p></li><li><p>双指缩放，则可以直接对网页或者图片进行放大缩小。（和手机逻辑一样）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805580.jpg" alt="双指缩放，对网页或图片进行缩放"></p></li></ol><h3 id="三、三指操作"><a href="#三、三指操作" class="headerlink" title="三、三指操作"></a>三、三指操作</h3><ol><li><p>三指同时轻触可以打开搜索界面</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805599.jpg" alt="三指轻触，打开搜索界面"></p></li><li><p>三指下滑等于直接回到桌面等于win+D。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805582.jpg" alt="三指下滑，回到桌面"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805596.jpg" alt="三指下滑后回到了桌面"></p></li><li><p>三指左右滑动则与Alt+Tab的功能相似，可以直接切换并唤醒我们当前的使用程序。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805587.jpg" alt="三指左右滑动，切换应用"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805595.jpg" alt="三指滑动效果图"></p></li><li><p>三指上滑则会打开程序管理与时间线的记录，搭配单指可以直接选择我们需要打开的程序。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805581.jpg" alt="三指上滑"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805597.jpg" alt="三指上滑，打开程序管理与时间线的记录"></p></li></ol><h3 id="四、四指操作"><a href="#四、四指操作" class="headerlink" title="四、四指操作"></a>四、四指操作</h3><ol><li><p>四指轻触可以打开通知中心。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805584.jpg" alt="四指轻触，打开通知中心"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805598.jpg" alt="通知中心"></p></li><li><p>四指同时向左/右划，实现在多个桌面中，来回切换。（前提是已打开多个桌面）</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805586.jpg" alt="四指滑动，切换桌面"></p></li></ol><h2 id="更多自定义操作设置：设置-gt-设备-gt-触摸板"><a href="#更多自定义操作设置：设置-gt-设备-gt-触摸板" class="headerlink" title="更多自定义操作设置：设置-&gt;设备-&gt;触摸板"></a>更多自定义操作设置：设置-&gt;设备-&gt;触摸板</h2><ol><li><p><strong>Win+i</strong> 打开设置，进入设备。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805593.jpg" alt="打开设置，找到设备，进入"></p></li><li><p>在左侧设备列表下找到触控板，进入触控板。</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805594.jpg" alt="左侧设备列表找到触摸板，进入"></p></li><li><p>根据自己习惯进行配置触控板即可。</p></li></ol><h1 id="新增虚拟桌面"><a href="#新增虚拟桌面" class="headerlink" title="新增虚拟桌面"></a>新增虚拟桌面</h1><blockquote><ol><li>win+tab进入任务视图，新增桌面</li></ol><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805600.jpg" alt="新增虚拟桌面"></p><p>  <img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161805601.jpg" alt="增加之后效果图"></p><ol start="2"><li><p>ctrl+win+左右键切换桌面或者四指同时向左/右划，实现在多个桌面中，来回切换。</p></li><li><p>如何摸鱼？</p></li></ol><ul><li>创建多个桌面，一个用来办公学习，另外的用来干啥取决于你自己</li></ul></blockquote><ul><li>友情提示：摸鱼需谨慎~ 反应要快，手速要快~ </li></ul><h1 id="触摸板操作视频教学"><a href="#触摸板操作视频教学" class="headerlink" title="触摸板操作视频教学"></a>触摸板操作视频教学</h1><h2 id="老手艺人了！触摸板就要这样用！"><a href="#老手艺人了！触摸板就要这样用！" class="headerlink" title="老手艺人了！触摸板就要这样用！"></a>老手艺人了！触摸板就要这样用！</h2><p>本视频教程以天选姬笔记本为例，其它笔记本可能会有略微不同。</p><p><a href="https://www.bilibili.com/video/BV1kh411Y7Wm">视频地址【点击飞往✈】</a></p>]]></content>
      
      
      <categories>
          
          <category> 电脑技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑技巧 </tag>
            
            <tag> 触摸板 </tag>
            
            <tag> win10新增桌面 </tag>
            
            <tag> 摸鱼技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭配 Fluid 如何优雅的写一篇文章</title>
      <link href="/2021/08/13/%E6%90%AD%E9%85%8D-Fluid-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%86%99%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2021/08/13/%E6%90%AD%E9%85%8D-Fluid-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%86%99%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Fluid 是一款很十分优雅的主题，那么写一篇优雅的文章搭配它呢？以下会从几个方面来简述，主要还是做几个推荐。</p><h2 id="文章内容"><a href="#文章内容" class="headerlink" title="文章内容"></a>文章内容</h2><h3 id="熟悉-Markdown-语法"><a href="#熟悉-Markdown-语法" class="headerlink" title="熟悉 Markdown 语法"></a>熟悉 Markdown 语法</h3><p>对于使用 Hexo 的大多数人来说，相信对 Markdown 的语法不会陌生。熟练掌握 Markdown 语法对我们的写作拥有极大的帮助，这里用少用的表格和脚注来举个例子。至于为什么有些公式、流程图无法渲染，是因为 <strong>Markdown 追求简洁式写作，默认渲染器不支持复杂渲染。</strong></p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><table><thead><tr><th>站点</th><th align="center">地址</th><th align="right">介绍</th></tr></thead><tbody><tr><td>Fluid Docs</td><td align="center"><a href="https://hexo.fluid-dev.com/docs/">https://hexo.fluid-dev.com/docs/</a></td><td align="right">Fluid 官方文档</td></tr><tr><td>Hexo-theme-fluid</td><td align="center"><a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></td><td align="right">Fluid Github Repo</td></tr><tr><td>Fluid Blog</td><td align="center"><a href="https://hexo.fluid-dev.com/">https://hexo.fluid-dev.com/</a></td><td align="right">Fluid 官方博客</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">站点|地址|介绍</span><br><span class="line">--|:--:|--:</span><br><span class="line">Fluid Docs|https://hexo.fluid-dev.com/docs/|Fluid 官方文档</span><br><span class="line">Hexo-theme-fluid|https://github.com/fluid-dev/hexo-theme-fluid|Fluid Github Repo</span><br><span class="line">Fluid Blog|https://hexo.fluid-dev.com/|Fluid 官方博客</span><br></pre></td></tr></table></figure><h4 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h4><p>默认渲染器下正常显示，不同渲染器显示效果不同，写法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">脚注演示[^1]</span><br><span class="line">[^1]: 脚注内容演示</span><br></pre></td></tr></table></figure><h3 id="善用-HTML"><a href="#善用-HTML" class="headerlink" title="善用 HTML"></a>善用 HTML</h3><p>我们可以在 Markdown 中插入一些简单的 HTML 代码或 CSS 片段来获得更多扩展，使得文章内容更具有多样性。以下演示几个简单功能。</p><p>跳转位置演示（跳转位置设置点）</p><h4 id="文字颜色"><a href="#文字颜色" class="headerlink" title="文字颜色"></a>文字颜色</h4><p>#519D9E颜色演示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span  style=&quot;color: #519D9E; &quot;&gt;#519D9E颜色演示&lt;/span&gt;</span><br></pre></td></tr></table></figure><hr><h4 id="文字大小"><a href="#文字大小" class="headerlink" title="文字大小"></a>文字大小</h4><p>0.7em 文字大小演示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span  style=&quot;font-size:0.7em;&quot;&gt;0.7em 文字大小演示&lt;/span&gt;</span><br></pre></td></tr></table></figure><hr><h4 id="文字位置"><a href="#文字位置" class="headerlink" title="文字位置"></a>文字位置</h4><p>内容居中演示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;text-align:center&quot;&gt;内容居中演示&lt;/p&gt; # 可以修改 text-align 参数来设置文字位置。</span><br></pre></td></tr></table></figure><hr><h4 id="页内跳转"><a href="#页内跳转" class="headerlink" title="页内跳转"></a>页内跳转</h4><p><a href="https://hexo.fluid-dev.com/posts/fluid-write/#demo">点击到达跳转位置演示</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#demo&quot;&gt;点击到达跳转位置演示&lt;/a&gt; # 在需要跳转的地方添加此代码。</span><br><span class="line">&lt;a id=&quot;demo&quot;&gt;跳转位置演示（跳转位置设置点）&lt;/a&gt; # 在跳转位置添加次代码。</span><br></pre></td></tr></table></figure><hr><h4 id="综合演示"><a href="#综合演示" class="headerlink" title="综合演示"></a>综合演示</h4><p>综合演示<br>优雅使用 Fluid 写文章</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;text-align:center;color:#8EC0E4;font-size:1.5em;font-weight: bold;&quot;&gt;</span><br><span class="line">综合演示</span><br><span class="line">&lt;br&gt;</span><br><span class="line">优雅使用 Fluid 写文章</span><br><span class="line">&lt;/p&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="iframe-页面镶套"><a href="#iframe-页面镶套" class="headerlink" title="iframe 页面镶套"></a>iframe 页面镶套</h4><p>iframe 页面镶套可以帮助我们更好的展示一个页面。比如以下演示页面。</p><iframe src="https://blog.fatsheep.cn/" width="100%" height="650" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame" style="box-sizing: border-box; color: rgb(196, 198, 201); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, &quot;Liberation Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(37, 45, 56); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"></iframe><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://hexo.fluid-dev.com/&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">name</span>=<span class="string">&quot;topFrame&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;yes&quot;</span>  <span class="attr">noresize</span>=<span class="string">&quot;noresize&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">id</span>=<span class="string">&quot;topFrame&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一些参数说明，<code>width=&quot;100%&quot;</code> 为宽度自适应，高度请根据实际需求跳转，<strong>注意移动端页面是否匹配。</strong> <code>scrolling</code> 为滚动条参数。<code>frameborder</code> 为边框参数。<code>noresize</code> 属性规定用户无法调整框架的大小。</p><h4 id="details-标签"><a href="#details-标签" class="headerlink" title="details 标签"></a>details 标签</h4><p>用于展示代码较多需要折叠或折叠相关内容，以下为演示。<code>summary</code> 填写显示名称。</p><details style="box-sizing: border-box; display: block; margin-top: 0px; margin-bottom: 16px; cursor: pointer; color: rgb(196, 198, 201); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, &quot;Liberation Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(37, 45, 56); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="box-sizing: border-box; display: list-item; cursor: pointer; outline: none;">Demo</summary></details><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;details&gt;</span><br><span class="line">&lt;summary&gt;Demo&lt;/summary&gt;</span><br><span class="line">&lt;p&gt;&lt;b&gt;好友申请备注：fluid&lt;/b&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;b&gt;提问之前请先仔细查阅用户文档&lt;/b&gt;&lt;/p&gt;</span><br><span class="line">&lt;img width=&quot;200&quot; src=&quot;https://cdn.jsdelivr.net/gh/fluid-dev/static@master/hexo-theme-fluid/wechat.png&quot; alt=&quot;wechat&quot;&gt;</span><br><span class="line">&lt;/details&gt;</span><br></pre></td></tr></table></figure><h3 id="善用-Tag-组件"><a href="#善用-Tag-组件" class="headerlink" title="善用 Tag 组件"></a>善用 Tag 组件</h3><p>Fluid 内置了许多 Tag 组件，包含便签、行内标签（已知不会出现间隔，谨慎使用）、勾选框、按钮和组图，可以使用这些组件来丰富文章内容，具体点击查看官方文档查看，**<a href="https://hexo.fluid-dev.com/docs/guide/#tag-%E6%8F%92%E4%BB%B6">点击跳转到 Fluid Doc</a>**。</p><h2 id="配图"><a href="#配图" class="headerlink" title="配图"></a>配图</h2><p>众所周知，<strong>博客好不好看，配图占一半</strong>。这里给大家推荐几个我常用找配图的地方。<strong>另外，请遵循相关网站的版权协议。</strong></p><h3 id="Wallpaper-Hub"><a href="#Wallpaper-Hub" class="headerlink" title="Wallpaper Hub"></a>Wallpaper Hub</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108281558719.jpg" alt="Wallpaper Hub"></p><p><strong><a href="https://wallpaperhub.app/">点击跳转到 Wallpaper Hub</a></strong></p><h3 id="Wallhaven"><a href="#Wallhaven" class="headerlink" title="Wallhaven"></a>Wallhaven</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108281558718.jpg" alt="Wallhaven"></p><p><strong><a href="https://wallhaven.cc/">点击跳转到 Wallhaven</a></strong></p><h3 id="Unsplash"><a href="#Unsplash" class="headerlink" title="Unsplash"></a>Unsplash</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108281558717.jpg" alt="Unsplash"></p><p><strong><a href="https://unsplash.com/">点击跳转到 Unsplash</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> hexo美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo美化 </tag>
            
            <tag> Fluid主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown入门教程</title>
      <link href="/2021/08/12/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/08/12/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown入门教程"><a href="#Markdown入门教程" class="headerlink" title="Markdown入门教程"></a>Markdown入门教程</h1><p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><span id="more"></span><h2 id="Markdown介绍"><a href="#Markdown介绍" class="headerlink" title="Markdown介绍"></a>Markdown介绍</h2><p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。<br> 由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。 如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。<br> 对于程序员来讲，使用Markdown做笔记比使用.txt和word要方便很多！</p><hr><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><p>本教程使用Typora讲解Markdown的基本语法，这是一个跨平台的编辑器，支持windows、MasOS和Linux操作系统，导出支持HTML、PDF、Word、图片等类型的文件。<br> 可以在Typora官网上下载此编辑器  <a href="https://www.typora.io/">Typora官网✈</a></p><h2 id="添加扩展语法"><a href="#添加扩展语法" class="headerlink" title="添加扩展语法"></a>添加扩展语法</h2><p>在官网上下载安装完Typora后，进入设置添加扩展语法，<br>方法如下：</p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161705943.jpg" alt="偏好设置"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161705941.jpg" alt="在Markdown里把扩展语法都勾上"></p><p>随后，我们就能使用Markdown的扩展语法了。</p><h2 id="Markdown教程"><a href="#Markdown教程" class="headerlink" title="Markdown教程"></a>Markdown教程</h2><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><p>在想要设置为标题的文字前面加#来表示</p><p>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><p>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一级标题</span></span><br><span class="line"><span class="comment">## 这是二级标题</span></span><br><span class="line"><span class="comment">### 这是三级标题</span></span><br><span class="line"><span class="comment">#### 这是四级标题</span></span><br><span class="line"><span class="comment">##### 这是五级标题</span></span><br><span class="line"><span class="comment">###### 这是六级标题</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><h6 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161709977.jpg" alt="六级标题效果图"></h6><h2 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h2><ul><li><h5 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h5></li></ul><p>要加粗的文字左右分别用两个*号包起来</p><ul><li><h5 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h5></li></ul><p>要倾斜的文字左右分别用一个*号包起来</p><ul><li><h5 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h5></li></ul><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><ul><li><h5 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h5></li></ul><p>要加删除线的文字左右分别用两个~~号包起来</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**这是加粗的文字**</span><br><span class="line">*这是倾斜的文字*`</span><br><span class="line">***这是斜体加粗的文字***</span><br><span class="line">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br>*<strong>这是斜体加粗的文字*</strong><br><del>这是加删除线的文字</del></p><hr><h2 id="三、分割线"><a href="#三、分割线" class="headerlink" title="三、分割线"></a>三、分割线</h2><p>三个或者三个以上的 - 或者 * 都可以。</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line">***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p>效果如下：<br>可以看到，显示效果是一样的。</p><hr><hr><hr><hr><h2 id="四、图片"><a href="#四、图片" class="headerlink" title="四、图片"></a>四、图片</h2><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](图片地址 <span class="string">&#x27;&#x27;</span>图片title<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class="line">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![Hello](https:<span class="comment">//cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161606482.png)</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161606482.png" alt="Hello"></p><h2 id="五、超链接"><a href="#五、超链接" class="headerlink" title="五、超链接"></a>五、超链接</h2><p>语法：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[超链接名](超链接地址 <span class="string">&quot;超链接title&quot;</span>)</span><br><span class="line">title可加可不加</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度](http:<span class="comment">//baidu.com)</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><a href="baidu.com">百度</a></p><h2 id="六、列表"><a href="#六、列表" class="headerlink" title="六、列表"></a>六、列表</h2><h5 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h5><p>语法：<br>无序列表用 - + * 任何一种都可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line"></span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li>列表内容</li><li>列表内容</li><li>列表内容</li></ul><h5 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h5><p>语法：<br>数字加点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 列表内容</span><br><span class="line">2. 列表内容</span><br><span class="line">3. 列表内容</span><br><span class="line"></span><br><span class="line">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><h5 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h5><p><strong>上一级和下一级之间敲三个空格即可</strong></p><ul><li>一级无序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li>一级无序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ul><ol><li>一级有序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li>一级有序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ol><h2 id="七、区块"><a href="#七、区块" class="headerlink" title="七、区块"></a>七、区块</h2><h3 id="一个单独的区块"><a href="#一个单独的区块" class="headerlink" title="一个单独的区块"></a>一个单独的区块</h3><p>在开头使用&gt;即可，如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区</span><br><span class="line">&gt; 块</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>区</p><p>块</p></blockquote><h3 id="区块嵌套"><a href="#区块嵌套" class="headerlink" title="区块嵌套"></a>区块嵌套</h3><p>区块也可以像列表那样可以嵌套一个&gt;最外层，两个&gt;则是第二层，如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区</span><br><span class="line">&gt; &gt;块</span><br><span class="line">&gt;&gt;&gt;嵌</span><br><span class="line">&gt;&gt;&gt;&gt;套</span><br></pre></td></tr></table></figure><blockquote><p>区</p><blockquote><p>快</p><blockquote><p>嵌</p><blockquote><p>套</p></blockquote></blockquote></blockquote></blockquote><h3 id="区块与列表的混用"><a href="#区块与列表的混用" class="headerlink" title="区块与列表的混用"></a>区块与列表的混用</h3><p>在区块中是可以使用列表的，如:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; 姓名：</span><br><span class="line">&gt; 学号：</span><br><span class="line">&gt; 成绩：</span><br><span class="line">&gt;   * 数学</span><br><span class="line">&gt;   * 语文</span><br><span class="line">&gt;   * 英语</span><br><span class="line">&gt; 日期</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>姓名：<br>学号：<br>成绩：</p><ul><li>数学</li><li>语文</li><li>英语<br>日期</li></ul></blockquote><p>当然，在列表中也能使用区块：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* 姓名：</span><br><span class="line">* 学号：</span><br><span class="line">* 成绩：</span><br><span class="line">&gt;   * 数学</span><br><span class="line">&gt;   * 语文</span><br><span class="line">&gt;   * 英语</span><br><span class="line">* 日期：</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li>姓名：</li><li>学号：</li><li>成绩：<blockquote><ul><li>数学</li><li>语文</li><li>英语</li></ul></blockquote></li><li>日期：</li></ul><h2 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h2><h3 id="表格的制作"><a href="#表格的制作" class="headerlink" title="表格的制作"></a>表格的制作</h3><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><p>举例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><p>我们能得到：</p><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><h3 id="表格的对齐方式"><a href="#表格的对齐方式" class="headerlink" title="表格的对齐方式"></a>表格的对齐方式</h3><p>我们可以设置表格的对齐方式：<br>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。<br>实例如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h2 id="九、代码"><a href="#九、代码" class="headerlink" title="九、代码"></a>九、代码</h2><p>语法：<br>单行代码：代码之间分别用一个反引号包起来</p><p>注意：反引号不是单引号</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`代码内容`</span></span><br></pre></td></tr></table></figure><p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">``</span><span class="string">`)</span></span><br><span class="line"><span class="string">  代码...</span></span><br><span class="line"><span class="string">  代码...</span></span><br><span class="line"><span class="string">  代码...</span></span><br><span class="line"><span class="string">(`</span><span class="string">``</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</p></blockquote><p>示例：</p><p>单行代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`create database hero;`</span></span><br></pre></td></tr></table></figure><p>代码块</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(```)</span><br><span class="line">    function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">         echo <span class="string">&quot;这是一句非常牛逼的代码&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">(```)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>单行代码</p><p><code>create database hero;</code></p><p>代码块</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">  echo <span class="string">&quot;这是一句非常牛逼的代码&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h2 id="十、其他的一些语法"><a href="#十、其他的一些语法" class="headerlink" title="十、其他的一些语法"></a>十、其他的一些语法</h2><h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><p>在需要重点标注的词句两侧加上==</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我滴好兄弟，你可真==聪明==啊！</span><br></pre></td></tr></table></figure><p>我滴好兄弟，你可真==聪明==啊！</p><h3 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h3><p>下标的词句两侧加上~</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H~<span class="number">2</span>~O</span><br></pre></td></tr></table></figure><p>H<del>2</del>O</p><h3 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h3><p>上标的词句两侧加上^</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y = e^x+<span class="number">1</span>^</span><br></pre></td></tr></table></figure><p>y = e^x+1^</p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**文本加粗** </span><br><span class="line">\*\* 正常显示星号 \*\*</span><br></pre></td></tr></table></figure><p><strong>文本加粗</strong></p><p>** 正常显示星号 **</p><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 =  \begin&#123;vmatrix&#125; </span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; <span class="number">0</span> \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; <span class="number">0</span> \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$&#123;$tep1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+<span class="number">1</span>)(x+<span class="number">1</span>)&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>结果为：<br>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}<br>$$</p><h3 id="typora-画流程图、时序图-顺序图-、甘特图"><a href="#typora-画流程图、时序图-顺序图-、甘特图" class="headerlink" title="typora 画流程图、时序图(顺序图)、甘特图"></a>typora 画流程图、时序图(顺序图)、甘特图</h3><p>因本站无法渲染某些出某些效果还请复制以下代码使用 typora 的源码模式粘贴到编辑器中查看效果：</p><p>typory源码模式开启关闭快捷键Ctrl+/</p><p>以下几个实例效果图如下：</p><p>1、横向流程图源码格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt;|a=1| D[结果1]</span><br><span class="line">    C --&gt;|a=2| E[结果2]</span><br><span class="line">    F[横向流程图]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt;|a=1| D[结果1]</span><br><span class="line">    C --&gt;|a=2| E[结果2]</span><br><span class="line">    F[横向流程图]</span><br></pre></td></tr></table></figure><p>2、竖向流程图源码格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a=1| D[结果1]</span><br><span class="line">    C --&gt; |a=2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br></pre></td></tr></table></figure><p>​    </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a=1| D[结果1]</span><br><span class="line">    C --&gt; |a=2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br></pre></td></tr></table></figure><p>3、标准流程图源码格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><p>4、标准流程图源码格式（横向）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><p>5、UML时序图源码样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure><p>6、UML时序图源码复杂样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象B-&gt;小三: 你好吗</span><br><span class="line">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">Note over 小三,对象B: 我们是朋友</span><br><span class="line">participant C</span><br><span class="line">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure><p>7、UML标准时序图样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line">    participant 张三</span><br><span class="line">    participant 李四</span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line">    loop 健康检查</span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line">    end</span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line">    participant 张三</span><br><span class="line">    participant 李四</span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line">    loop 健康检查</span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line">    end</span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure><p>8、甘特图样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">%% 语法示例</span><br><span class="line">        gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title 软件开发甘特图</span><br><span class="line">        section 设计</span><br><span class="line">        需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">        UI设计                     :         des3, after des2, 5d</span><br><span class="line">    未来任务                     :         des4, after des3, 5d</span><br><span class="line">        section 开发</span><br><span class="line">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">        设计框架                             :crit, done, after des2, 2d</span><br><span class="line">        开发                                 :crit, active, 3d</span><br><span class="line">        未来任务                              :crit, 5d</span><br><span class="line">        耍                                   :2d</span><br><span class="line">        section 测试</span><br><span class="line">        功能测试                              :active, a1, after des3, 3d</span><br><span class="line">        压力测试                               :after a1  , 20h</span><br><span class="line">        测试报告                               : 48h</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>参考网站<ol><li><a href="https://www.runoob.com/markdown/">https://www.runoob.com/markdown/</a></li><li><a href="https://baike.baidu.com/item/markdown/3245829">https://baike.baidu.com/item/markdown/3245829</a></li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10系统恢复出厂设置</title>
      <link href="/2021/08/12/Win10%E7%B3%BB%E7%BB%9F%E6%81%A2%E5%A4%8D%E5%87%BA%E5%8E%82%E8%AE%BE%E7%BD%AE/"/>
      <url>/2021/08/12/Win10%E7%B3%BB%E7%BB%9F%E6%81%A2%E5%A4%8D%E5%87%BA%E5%8E%82%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Win10系统恢复出厂设置"><a href="#Win10系统恢复出厂设置" class="headerlink" title="Win10系统恢复出厂设置"></a>Win10系统恢复出厂设置</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><strong>备份重要文件，软件（先截图重置后再安装）~</strong></li><li><strong>建议备份到U盘或者网盘，当然如果都没有可以备份到除了系统盘C盘以外的其他盘</strong></li></ul><hr><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><h3 id="恢复出厂设置"><a href="#恢复出厂设置" class="headerlink" title="恢复出厂设置"></a>恢复出厂设置</h3><ol><li><p><strong>打开设置（快捷键Win+i）</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834589.jpg" alt="打开设置"></p></li><li><p><strong>选择更新和安全</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834601.jpg" alt="找到更新和安全，进入"></p></li><li><p><strong>从左侧选择恢复→开始</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834600.jpg" alt="左侧列表，找到恢复，点击开始"></p></li><li><p><strong>选择第二选项—删除所有内容</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834599.jpg" alt="选择删除所有内容"></p></li><li><p><strong>选择第二选项—本地重新安装</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834595.jpg" alt="选择本地重新安装"></p></li><li><p><strong>选择—下一页</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834597.jpg" alt="选择下一页"></p></li><li><p><strong>选择—重置</strong></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834585.jpg" alt="选择重置，等待电脑重启"></p></li><li><p><strong>等待电脑重启，直到出现第一次开启电脑时候的设置画面</strong></p></li></ol><hr><h3 id="首次开机设置"><a href="#首次开机设置" class="headerlink" title="首次开机设置"></a>首次开机设置</h3><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834596.jpg" alt="首次开机设置，保姆级教程"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834584.jpg" alt="区域设置"></p><ul><li>第3步如果不明白二者区别默认微软拼音就好哈~ </li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834582.jpg" alt="如果不明白两种布局有什么区别，默认拼音即可"></p><blockquote><ul><li>由于咱们是恢复出厂设置，此步可以联网</li><li>选择跳过联网的目的因为一旦联网会自动激活win10系统 </li><li>一般商家规定 win10激活后不支持7天无理由退换</li><li>就算此处不联网也没事，什么时候联网都会自动激活系统的</li><li>联网之后会让你登录微软账户，本教程是选择本地账户登录</li><li>不懂的朋友可以默认本地账户就好哈，进入系统后还是可以改的</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834588.jpg" alt="是否连接网络，接受协议"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834586.jpg" alt="设置账户名和密码"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834593.jpg" alt="是否启用小娜语音助手&amp;隐私设置"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834580.jpg" alt="支持和保护"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834587.jpg" alt="进入系统"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834598.jpg" alt="添加桌面图标"></p><h3 id="格式化磁盘"><a href="#格式化磁盘" class="headerlink" title="格式化磁盘"></a>格式化磁盘</h3><ul><li>由于咱们设置的只清空了C盘 所以需要手动格式化其他磁盘 很简单，别怕哈</li><li>打开我的电脑→选择你想要格式化的磁盘（建议格式化掉安装软件的盘重新安装，文档盘的话可以保留哈）→格式化</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834591.jpg" alt="格式化磁盘"></p><ul><li>默认设置就好: 开始→是</li><li>等待即可</li></ul><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161834592.jpg" alt="默认设置，开始"></p><h2 id="恭喜成功"><a href="#恭喜成功" class="headerlink" title="恭喜成功"></a>恭喜成功</h2><p>到此，也就算成功对系统进行出厂设置了。很棒哦！👍</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>别忘了备份！！！别忘了备份！！！别忘了备份！！！</li><li>可能你接下来遇到的选项跟我给的图不完全一样，但大同小异，在选择之前认真读一下，然后就大胆选择就行。</li><li>系统会在联网自动激活，不用担心恢复出厂设置后不会激活的问题。</li><li>如果你在某宝购买过win10家庭版升级专业版密钥（支持重装）的话恢复出厂设置后会默认激活为专业版</li></ul><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.xiaohongshu.com/discovery/item/5fbf199700000000010003b5">✈摘自小红书作者35</a></p>]]></content>
      
      
      <categories>
          
          <category> 电脑技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10恢复出厂设置 </tag>
            
            <tag> win10首次开机设置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天选姬bios中文版</title>
      <link href="/2021/08/11/%E5%A4%A9%E9%80%89%E5%A7%ACbios%E4%B8%AD%E6%96%87%E7%89%88/"/>
      <url>/2021/08/11/%E5%A4%A9%E9%80%89%E5%A7%ACbios%E4%B8%AD%E6%96%87%E7%89%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章主要是为了记录一下我自己笔记本的bios中文界面哈~更多关于bios的知识还请自行搜索哦！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161723363.jpg" alt="天选姬bios-首页"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161723365.jpg" alt="天选姬bios-主界面"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161723361.jpg" alt="天选姬bios-高级设置"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161723362.jpg" alt="天选姬bios-启动设置"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161723359.jpg" alt="天选姬bios-安全设置"></p><p><img src="https://cdn.jsdelivr.net/gh/feilong103/mypicgo/202108161723364.jpg" alt="天选姬bios-保存&amp;退出"></p><p><strong>更多关于本章内容请见b站up主—华硕天选up。</strong><a href="https://www.bilibili.com/video/BV1Tr4y1M7bN">点击飞往✈</a></p>]]></content>
      
      
      <categories>
          
          <category> 电脑技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑技巧 </tag>
            
            <tag> bios </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>归档</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="Self-introduction-😬"><a href="#Self-introduction-😬" class="headerlink" title="Self-introduction 😬"></a>Self-introduction 😬</h1><p>本人目前就读于大学，即将大二，专业是计算机科学与技术,喜欢交友。</p><p>对计算机方面知识爱好广泛——-常常肝到深夜。</p><p>喜欢写写博客，对互联网充满热情，对编程和计算机技术充满好奇心。</p><p>喜欢折腾，搞过双系统，搞过一些网站，搞过WSL，总之关于计算机方面的东西不怕麻烦！</p><p>励志名言：因不满足当下，才努力改变现状！</p><h1 id="Knowledge-Report-📖"><a href="#Knowledge-Report-📖" class="headerlink" title="Knowledge Report 📖"></a>Knowledge Report 📖</h1><p>本站旨在记录我的技术学习和成长的历程。</p><ul><li>Web 前端练习生（htlm5 css3）</li><li>后端学习爱好者（c语言 python语言）</li><li>Learning JavaScript &amp; Linux</li><li>开发环境：Linux &amp; Windows（Windows Subsystem for Linux）</li><li>工具: VSCode &amp; Pycharm &amp; Dec-c++ &amp; cmder</li></ul><h1 id="How-to-contact-me？☎"><a href="#How-to-contact-me？☎" class="headerlink" title="How to contact me？☎"></a>How to contact me？☎</h1><p>你可以在这些平台联系我/与我交流：</p><ul><li>Gitee：fatsheeps  <a href="https://gitee.com/fatsheeps">火速抵达🚀</a></li><li>Github：fatsheeps         <a href="https://github.com/fatsheeps">火速抵达🚀</a></li><li>Bilibili：feilong103          <a href="https://space.bilibili.com/675216653">火速抵达🚀</a></li><li>QQ：834235688</li><li>微信：wfl20201312</li><li>E-mail: <a href="mailto:&#56;&#x33;&#x34;&#x32;&#51;&#53;&#54;&#x38;&#x38;&#64;&#113;&#x71;&#x2e;&#99;&#111;&#109;">&#56;&#x33;&#x34;&#x32;&#51;&#53;&#54;&#x38;&#x38;&#64;&#113;&#x71;&#x2e;&#99;&#111;&#109;</a></li><li>微信公众号：小肥羊的成长经历</li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>img</title>
      <link href="/img/index.html"/>
      <url>/img/index.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line"></span><br><span class="line">&#123;% galleryGroup &#x27;封面专区&#x27; &#x27;本站用作文章封面的图片，不保证分辨率&#x27; &#x27;/box/Gallery/photo&#x27; https://source.fomal.cc/img/default_cover_61.webp %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% galleryGroup &#x27;背景专区&#x27; &#x27;收藏的一些的背景与壁纸，分辨率很高&#x27; &#x27;/box/Gallery/wallpaper&#x27; https://source.fomal.cc/img/dm11.webp %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
